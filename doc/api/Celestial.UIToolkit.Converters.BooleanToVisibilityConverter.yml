### YamlMime:ManagedReference
items:
- uid: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter
  commentId: T:Celestial.UIToolkit.Converters.BooleanToVisibilityConverter
  id: BooleanToVisibilityConverter
  parent: Celestial.UIToolkit.Converters
  children:
  - Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.#ctor
  - Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.#ctor(System.Windows.Visibility,System.Windows.Visibility)
  - Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Convert(System.Boolean,System.Object,System.Globalization.CultureInfo)
  - Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.ConvertBack(System.Windows.Visibility,System.Object,System.Globalization.CultureInfo)
  - Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Default
  - Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.FalseVisibility
  - Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Inverted
  - Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.TrueVisibility
  langs:
  - csharp
  - vb
  name: BooleanToVisibilityConverter
  nameWithType: BooleanToVisibilityConverter
  fullName: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter
  type: Class
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/BooleanToVisibilityConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: BooleanToVisibilityConverter
    path: src/Celestial.UIToolkit.Core/Converters/BooleanToVisibilityConverter.cs
    startLine: 12
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nA value converter which converts a <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"System.Windows.Visibility\" data-throw-if-not-resolved=\"false\"></xref> value,\ndepending on whether the object is <code>true</code> or <code>false</code>.\n"
  example: []
  syntax:
    content: >-
      [ValueConversion(typeof(bool), typeof(Visibility))]

      public class BooleanToVisibilityConverter : ValueConverter<bool, Visibility>, IValueConverter
    content.vb: >-
      <ValueConversion(GetType(Boolean), GetType(Visibility))>

      Public Class BooleanToVisibilityConverter

          Inherits ValueConverter(Of Boolean, Visibility)

          Implements IValueConverter
  inheritance:
  - System.Object
  - Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}
  implements:
  - System.Windows.Data.IValueConverter
  inheritedMembers:
  - Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}.Convert(System.Boolean,System.Object,System.Globalization.CultureInfo)
  - Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}.ConvertBack(System.Windows.Visibility,System.Object,System.Globalization.CultureInfo)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Windows.Data.ValueConversionAttribute
    ctor: System.Windows.Data.ValueConversionAttribute.#ctor(System.Type,System.Type)
    arguments:
    - type: System.Type
      value: System.Boolean
    - type: System.Type
      value: System.Windows.Visibility
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Default
  commentId: P:Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Default
  id: Default
  parent: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: BooleanToVisibilityConverter.Default
  fullName: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Default
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/BooleanToVisibilityConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: Default
    path: src/Celestial.UIToolkit.Core/Converters/BooleanToVisibilityConverter.cs
    startLine: 19
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nGets a default instance of the <xref href=\"Celestial.UIToolkit.Converters.BooleanToVisibilityConverter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public static BooleanToVisibilityConverter Default { get; }
    parameters: []
    return:
      type: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter
    content.vb: Public Shared ReadOnly Property Default As BooleanToVisibilityConverter
  overload: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Default*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Inverted
  commentId: P:Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Inverted
  id: Inverted
  parent: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter
  langs:
  - csharp
  - vb
  name: Inverted
  nameWithType: BooleanToVisibilityConverter.Inverted
  fullName: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Inverted
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/BooleanToVisibilityConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: Inverted
    path: src/Celestial.UIToolkit.Core/Converters/BooleanToVisibilityConverter.cs
    startLine: 26
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nGets a default instance of the <xref href=\"Celestial.UIToolkit.Converters.BooleanToVisibilityConverter\" data-throw-if-not-resolved=\"false\"></xref> class\nwhose <xref href=\"Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.TrueVisibility\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.FalseVisibility\" data-throw-if-not-resolved=\"false\"></xref> are swapped\n(in comparison to the <xref href=\"Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Default\" data-throw-if-not-resolved=\"false\"></xref> instance).\n"
  example: []
  syntax:
    content: public static BooleanToVisibilityConverter Inverted { get; }
    parameters: []
    return:
      type: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter
    content.vb: Public Shared ReadOnly Property Inverted As BooleanToVisibilityConverter
  overload: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Inverted*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.TrueVisibility
  commentId: P:Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.TrueVisibility
  id: TrueVisibility
  parent: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter
  langs:
  - csharp
  - vb
  name: TrueVisibility
  nameWithType: BooleanToVisibilityConverter.TrueVisibility
  fullName: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.TrueVisibility
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/BooleanToVisibilityConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: TrueVisibility
    path: src/Celestial.UIToolkit.Core/Converters/BooleanToVisibilityConverter.cs
    startLine: 32
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nGets or sets a <xref href=\"System.Windows.Visibility\" data-throw-if-not-resolved=\"false\"></xref> value which is mapped\nto or from a <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> value which is <code>true</code>.\n"
  example: []
  syntax:
    content: public Visibility TrueVisibility { get; set; }
    parameters: []
    return:
      type: System.Windows.Visibility
    content.vb: Public Property TrueVisibility As Visibility
  overload: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.TrueVisibility*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.FalseVisibility
  commentId: P:Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.FalseVisibility
  id: FalseVisibility
  parent: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter
  langs:
  - csharp
  - vb
  name: FalseVisibility
  nameWithType: BooleanToVisibilityConverter.FalseVisibility
  fullName: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.FalseVisibility
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/BooleanToVisibilityConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: FalseVisibility
    path: src/Celestial.UIToolkit.Core/Converters/BooleanToVisibilityConverter.cs
    startLine: 38
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nGets or sets a <xref href=\"System.Windows.Visibility\" data-throw-if-not-resolved=\"false\"></xref> value which is mapped\nto or from a <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> value which is <code>false</code>.\n"
  example: []
  syntax:
    content: public Visibility FalseVisibility { get; set; }
    parameters: []
    return:
      type: System.Windows.Visibility
    content.vb: Public Property FalseVisibility As Visibility
  overload: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.FalseVisibility*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.#ctor
  commentId: M:Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.#ctor
  id: '#ctor'
  parent: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter
  langs:
  - csharp
  - vb
  name: BooleanToVisibilityConverter()
  nameWithType: BooleanToVisibilityConverter.BooleanToVisibilityConverter()
  fullName: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.BooleanToVisibilityConverter()
  type: Constructor
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/BooleanToVisibilityConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: .ctor
    path: src/Celestial.UIToolkit.Core/Converters/BooleanToVisibilityConverter.cs
    startLine: 45
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nInitializes a new instance of the <xref href=\"Celestial.UIToolkit.Converters.BooleanToVisibilityConverter\" data-throw-if-not-resolved=\"false\"></xref> class,\nwith the <xref href=\"Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.TrueVisibility\" data-throw-if-not-resolved=\"false\"></xref> set to <xref href=\"System.Windows.Visibility.Visible\" data-throw-if-not-resolved=\"false\"></xref> and\nthe <xref href=\"Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.FalseVisibility\" data-throw-if-not-resolved=\"false\"></xref> set to <xref href=\"System.Windows.Visibility.Collapsed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public BooleanToVisibilityConverter()
    content.vb: Public Sub New
  overload: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.#ctor(System.Windows.Visibility,System.Windows.Visibility)
  commentId: M:Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.#ctor(System.Windows.Visibility,System.Windows.Visibility)
  id: '#ctor(System.Windows.Visibility,System.Windows.Visibility)'
  parent: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter
  langs:
  - csharp
  - vb
  name: BooleanToVisibilityConverter(Visibility, Visibility)
  nameWithType: BooleanToVisibilityConverter.BooleanToVisibilityConverter(Visibility, Visibility)
  fullName: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.BooleanToVisibilityConverter(System.Windows.Visibility, System.Windows.Visibility)
  type: Constructor
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/BooleanToVisibilityConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: .ctor
    path: src/Celestial.UIToolkit.Core/Converters/BooleanToVisibilityConverter.cs
    startLine: 60
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nInitializes a new instance of the <xref href=\"Celestial.UIToolkit.Converters.BooleanToVisibilityConverter\" data-throw-if-not-resolved=\"false\"></xref> class\nwith the specified values\n"
  example: []
  syntax:
    content: public BooleanToVisibilityConverter(Visibility trueVisibility, Visibility falseVisibility)
    parameters:
    - id: trueVisibility
      type: System.Windows.Visibility
      description: "\nA <xref href=\"System.Windows.Visibility\" data-throw-if-not-resolved=\"false\"></xref> value which is mapped to or from a <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> value \nwhich is <code>true</code>.\n"
    - id: falseVisibility
      type: System.Windows.Visibility
      description: "\nA <xref href=\"System.Windows.Visibility\" data-throw-if-not-resolved=\"false\"></xref> value which is mapped to or from a <xref href=\"System.Boolean\" data-throw-if-not-resolved=\"false\"></xref> value \nwhich is <code>false</code>.\n"
    content.vb: Public Sub New(trueVisibility As Visibility, falseVisibility As Visibility)
  overload: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Convert(System.Boolean,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Convert(System.Boolean,System.Object,System.Globalization.CultureInfo)
  id: Convert(System.Boolean,System.Object,System.Globalization.CultureInfo)
  parent: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter
  langs:
  - csharp
  - vb
  name: Convert(Boolean, Object, CultureInfo)
  nameWithType: BooleanToVisibilityConverter.Convert(Boolean, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Convert(System.Boolean, System.Object, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/BooleanToVisibilityConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: Convert
    path: src/Celestial.UIToolkit.Core/Converters/BooleanToVisibilityConverter.cs
    startLine: 73
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nConverts a value.\n"
  example: []
  syntax:
    content: public override Visibility Convert(bool value, object parameter, CultureInfo culture)
    parameters:
    - id: value
      type: System.Boolean
      description: The value produced by the binding source.
    - id: parameter
      type: System.Object
      description: The converter parameter to use. Not used.
    - id: culture
      type: System.Globalization.CultureInfo
      description: The culture to use in the converter. Not used.
    return:
      type: System.Windows.Visibility
      description: A <xref href="System.Windows.Visibility" data-throw-if-not-resolved="false"></xref> object depending on the <code data-dev-comment-type="paramref" class="paramref">value</code>.
    content.vb: Public Overrides Function Convert(value As Boolean, parameter As Object, culture As CultureInfo) As Visibility
  overridden: Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}.Convert(System.Boolean,System.Object,System.Globalization.CultureInfo)
  overload: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Convert*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.ConvertBack(System.Windows.Visibility,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.ConvertBack(System.Windows.Visibility,System.Object,System.Globalization.CultureInfo)
  id: ConvertBack(System.Windows.Visibility,System.Object,System.Globalization.CultureInfo)
  parent: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter
  langs:
  - csharp
  - vb
  name: ConvertBack(Visibility, Object, CultureInfo)
  nameWithType: BooleanToVisibilityConverter.ConvertBack(Visibility, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.ConvertBack(System.Windows.Visibility, System.Object, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/BooleanToVisibilityConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: ConvertBack
    path: src/Celestial.UIToolkit.Core/Converters/BooleanToVisibilityConverter.cs
    startLine: 89
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nConverts a value back.\n"
  example: []
  syntax:
    content: public override bool ConvertBack(Visibility value, object parameter, CultureInfo culture)
    parameters:
    - id: value
      type: System.Windows.Visibility
      description: The value produced by the binding source.
    - id: parameter
      type: System.Object
      description: The converter parameter to use. Not used.
    - id: culture
      type: System.Globalization.CultureInfo
      description: The culture to use in the converter. Not used.
    return:
      type: System.Boolean
      description: A <xref href="System.Windows.Visibility" data-throw-if-not-resolved="false"></xref> object depending on the <code data-dev-comment-type="paramref" class="paramref">value</code>.
    content.vb: Public Overrides Function ConvertBack(value As Visibility, parameter As Object, culture As CultureInfo) As Boolean
  overridden: Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}.ConvertBack(System.Windows.Visibility,System.Object,System.Globalization.CultureInfo)
  overload: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.ConvertBack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\nThrown if the <xref href=\"Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.TrueVisibility\" data-throw-if-not-resolved=\"false\"></xref> holds the same value as the <xref href=\"Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.FalseVisibility\" data-throw-if-not-resolved=\"false\"></xref>\nor if <code data-dev-comment-type=\"paramref\" class=\"paramref\">value</code> matches neither.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Visibility
  commentId: T:System.Windows.Visibility
  parent: System.Windows
  isExternal: true
  name: Visibility
  nameWithType: Visibility
  fullName: System.Windows.Visibility
- uid: Celestial.UIToolkit.Converters
  commentId: N:Celestial.UIToolkit.Converters
  name: Celestial.UIToolkit.Converters
  nameWithType: Celestial.UIToolkit.Converters
  fullName: Celestial.UIToolkit.Converters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}
  commentId: T:Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}
  parent: Celestial.UIToolkit.Converters
  definition: Celestial.UIToolkit.Converters.ValueConverter`2
  name: ValueConverter<Boolean, Visibility>
  nameWithType: ValueConverter<Boolean, Visibility>
  fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Boolean, System.Windows.Visibility>
  nameWithType.vb: ValueConverter(Of Boolean, Visibility)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of System.Boolean, System.Windows.Visibility)
  name.vb: ValueConverter(Of Boolean, Visibility)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2
    name: ValueConverter
    nameWithType: ValueConverter
    fullName: Celestial.UIToolkit.Converters.ValueConverter
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Visibility
    name: Visibility
    nameWithType: Visibility
    fullName: System.Windows.Visibility
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2
    name: ValueConverter
    nameWithType: ValueConverter
    fullName: Celestial.UIToolkit.Converters.ValueConverter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Visibility
    name: Visibility
    nameWithType: Visibility
    fullName: System.Windows.Visibility
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Data.IValueConverter
  commentId: T:System.Windows.Data.IValueConverter
  parent: System.Windows.Data
  isExternal: true
  name: IValueConverter
  nameWithType: IValueConverter
  fullName: System.Windows.Data.IValueConverter
- uid: Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}
  definition: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  name: Convert(Object, Type, Object, CultureInfo)
  nameWithType: ValueConverter<Boolean, Visibility>.Convert(Object, Type, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Boolean, System.Windows.Visibility>.Convert(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of Boolean, Visibility).Convert(Object, Type, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of System.Boolean, System.Windows.Visibility).Convert(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter<Boolean, Visibility>.Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Boolean, System.Windows.Visibility>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter(Of Boolean, Visibility).Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of System.Boolean, System.Windows.Visibility).Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}
  definition: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  name: ConvertBack(Object, Type, Object, CultureInfo)
  nameWithType: ValueConverter<Boolean, Visibility>.ConvertBack(Object, Type, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Boolean, System.Windows.Visibility>.ConvertBack(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of Boolean, Visibility).ConvertBack(Object, Type, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of System.Boolean, System.Windows.Visibility).ConvertBack(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter<Boolean, Visibility>.ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Boolean, System.Windows.Visibility>.ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter(Of Boolean, Visibility).ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of System.Boolean, System.Windows.Visibility).ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}.Convert(System.Boolean,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}.Convert(System.Boolean,System.Object,System.Globalization.CultureInfo)
  parent: Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}
  definition: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
  name: Convert(Boolean, Object, CultureInfo)
  nameWithType: ValueConverter<Boolean, Visibility>.Convert(Boolean, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Boolean, System.Windows.Visibility>.Convert(System.Boolean, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of Boolean, Visibility).Convert(Boolean, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of System.Boolean, System.Windows.Visibility).Convert(System.Boolean, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter<Boolean, Visibility>.Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Boolean, System.Windows.Visibility>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter(Of Boolean, Visibility).Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of System.Boolean, System.Windows.Visibility).Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}.ConvertBack(System.Windows.Visibility,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}.ConvertBack(System.Windows.Visibility,System.Object,System.Globalization.CultureInfo)
  parent: Celestial.UIToolkit.Converters.ValueConverter{System.Boolean,System.Windows.Visibility}
  definition: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
  name: ConvertBack(Visibility, Object, CultureInfo)
  nameWithType: ValueConverter<Boolean, Visibility>.ConvertBack(Visibility, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Boolean, System.Windows.Visibility>.ConvertBack(System.Windows.Visibility, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of Boolean, Visibility).ConvertBack(Visibility, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of System.Boolean, System.Windows.Visibility).ConvertBack(System.Windows.Visibility, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter<Boolean, Visibility>.ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Boolean, System.Windows.Visibility>.ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Visibility
    name: Visibility
    nameWithType: Visibility
    fullName: System.Windows.Visibility
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter(Of Boolean, Visibility).ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of System.Boolean, System.Windows.Visibility).ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Visibility
    name: Visibility
    nameWithType: Visibility
    fullName: System.Windows.Visibility
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows
  commentId: N:System.Windows
  isExternal: true
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: Celestial.UIToolkit.Converters.ValueConverter`2
  commentId: T:Celestial.UIToolkit.Converters.ValueConverter`2
  name: ValueConverter<TValue, TTarget>
  nameWithType: ValueConverter<TValue, TTarget>
  fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>
  nameWithType.vb: ValueConverter(Of TValue, TTarget)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget)
  name.vb: ValueConverter(Of TValue, TTarget)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2
    name: ValueConverter
    nameWithType: ValueConverter
    fullName: Celestial.UIToolkit.Converters.ValueConverter
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2
    name: ValueConverter
    nameWithType: ValueConverter
    fullName: Celestial.UIToolkit.Converters.ValueConverter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Data
  commentId: N:System.Windows.Data
  isExternal: true
  name: System.Windows.Data
  nameWithType: System.Windows.Data
  fullName: System.Windows.Data
- uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  isExternal: true
  name: Convert(Object, Type, Object, CultureInfo)
  nameWithType: ValueConverter<TValue, TTarget>.Convert(Object, Type, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.Convert(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of TValue, TTarget).Convert(Object, Type, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).Convert(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter<TValue, TTarget>.Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter(Of TValue, TTarget).Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  isExternal: true
  name: ConvertBack(Object, Type, Object, CultureInfo)
  nameWithType: ValueConverter<TValue, TTarget>.ConvertBack(Object, Type, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.ConvertBack(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of TValue, TTarget).ConvertBack(Object, Type, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).ConvertBack(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter<TValue, TTarget>.ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter(Of TValue, TTarget).ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
  isExternal: true
  name: Convert(TValue, Object, CultureInfo)
  nameWithType: ValueConverter<TValue, TTarget>.Convert(TValue, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.Convert(TValue, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of TValue, TTarget).Convert(TValue, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).Convert(TValue, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter<TValue, TTarget>.Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter(Of TValue, TTarget).Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).Convert
  - name: (
    nameWithType: (
    fullName: (
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
  isExternal: true
  name: ConvertBack(TTarget, Object, CultureInfo)
  nameWithType: ValueConverter<TValue, TTarget>.ConvertBack(TTarget, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.ConvertBack(TTarget, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of TValue, TTarget).ConvertBack(TTarget, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).ConvertBack(TTarget, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter<TValue, TTarget>.ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter(Of TValue, TTarget).ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter
  commentId: T:Celestial.UIToolkit.Converters.BooleanToVisibilityConverter
  parent: Celestial.UIToolkit.Converters
  name: BooleanToVisibilityConverter
  nameWithType: BooleanToVisibilityConverter
  fullName: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter
- uid: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Default*
  commentId: Overload:Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Default
  name: Default
  nameWithType: BooleanToVisibilityConverter.Default
  fullName: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Default
- uid: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.TrueVisibility
  commentId: P:Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.TrueVisibility
  isExternal: true
- uid: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.FalseVisibility
  commentId: P:Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.FalseVisibility
  isExternal: true
- uid: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Default
  commentId: P:Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Default
  isExternal: true
- uid: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Inverted*
  commentId: Overload:Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Inverted
  name: Inverted
  nameWithType: BooleanToVisibilityConverter.Inverted
  fullName: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Inverted
- uid: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.TrueVisibility*
  commentId: Overload:Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.TrueVisibility
  name: TrueVisibility
  nameWithType: BooleanToVisibilityConverter.TrueVisibility
  fullName: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.TrueVisibility
- uid: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.FalseVisibility*
  commentId: Overload:Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.FalseVisibility
  name: FalseVisibility
  nameWithType: BooleanToVisibilityConverter.FalseVisibility
  fullName: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.FalseVisibility
- uid: System.Windows.Visibility.Visible
  commentId: F:System.Windows.Visibility.Visible
  isExternal: true
- uid: System.Windows.Visibility.Collapsed
  commentId: F:System.Windows.Visibility.Collapsed
  isExternal: true
- uid: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.#ctor*
  commentId: Overload:Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.#ctor
  name: BooleanToVisibilityConverter
  nameWithType: BooleanToVisibilityConverter.BooleanToVisibilityConverter
  fullName: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.BooleanToVisibilityConverter
- uid: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Convert*
  commentId: Overload:Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Convert
  name: Convert
  nameWithType: BooleanToVisibilityConverter.Convert
  fullName: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.Convert
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.ConvertBack*
  commentId: Overload:Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.ConvertBack
  name: ConvertBack
  nameWithType: BooleanToVisibilityConverter.ConvertBack
  fullName: Celestial.UIToolkit.Converters.BooleanToVisibilityConverter.ConvertBack
