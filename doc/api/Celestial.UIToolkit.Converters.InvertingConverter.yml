### YamlMime:ManagedReference
items:
- uid: Celestial.UIToolkit.Converters.InvertingConverter
  commentId: T:Celestial.UIToolkit.Converters.InvertingConverter
  id: InvertingConverter
  parent: Celestial.UIToolkit.Converters
  children:
  - Celestial.UIToolkit.Converters.InvertingConverter.#ctor
  - Celestial.UIToolkit.Converters.InvertingConverter.#ctor(System.Windows.Data.IValueConverter)
  - Celestial.UIToolkit.Converters.InvertingConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - Celestial.UIToolkit.Converters.InvertingConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - Celestial.UIToolkit.Converters.InvertingConverter.UnderlyingConverter
  langs:
  - csharp
  - vb
  name: InvertingConverter
  nameWithType: InvertingConverter
  fullName: Celestial.UIToolkit.Converters.InvertingConverter
  type: Class
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/InvertingConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: InvertingConverter
    path: src/Celestial.UIToolkit.Core/Converters/InvertingConverter.cs
    startLine: 17
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nAn implementation of the <xref href=\"System.Windows.Data.IValueConverter\" data-throw-if-not-resolved=\"false\"></xref> interface which\nuses another <xref href=\"System.Windows.Data.IValueConverter\" data-throw-if-not-resolved=\"false\"></xref> specified via the <xref href=\"Celestial.UIToolkit.Converters.InvertingConverter.UnderlyingConverter\" data-throw-if-not-resolved=\"false\"></xref>\nproperty to convert values, but in an inverted way.\n\nIn the <xref href=\"Celestial.UIToolkit.Converters.InvertingConverter.Convert(System.Object%2cSystem.Type%2cSystem.Object%2cSystem.Globalization.CultureInfo)\" data-throw-if-not-resolved=\"false\"></xref> method, the underlying converter&apos;s\n<xref href=\"System.Windows.Data.IValueConverter.ConvertBack(System.Object%2cSystem.Type%2cSystem.Object%2cSystem.Globalization.CultureInfo)\" data-throw-if-not-resolved=\"false\"></xref> method is called.\nLikewise, in the <xref href=\"Celestial.UIToolkit.Converters.InvertingConverter.ConvertBack(System.Object%2cSystem.Type%2cSystem.Object%2cSystem.Globalization.CultureInfo)\" data-throw-if-not-resolved=\"false\"></xref> method, the underlying converter&apos;s\n<xref href=\"System.Windows.Data.IValueConverter.Convert(System.Object%2cSystem.Type%2cSystem.Object%2cSystem.Globalization.CultureInfo)\" data-throw-if-not-resolved=\"false\"></xref> is called.\n"
  example: []
  syntax:
    content: 'public class InvertingConverter : IValueConverter'
    content.vb: >-
      Public Class InvertingConverter

          Implements IValueConverter
  inheritance:
  - System.Object
  implements:
  - System.Windows.Data.IValueConverter
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Celestial.UIToolkit.Converters.InvertingConverter.UnderlyingConverter
  commentId: P:Celestial.UIToolkit.Converters.InvertingConverter.UnderlyingConverter
  id: UnderlyingConverter
  parent: Celestial.UIToolkit.Converters.InvertingConverter
  langs:
  - csharp
  - vb
  name: UnderlyingConverter
  nameWithType: InvertingConverter.UnderlyingConverter
  fullName: Celestial.UIToolkit.Converters.InvertingConverter.UnderlyingConverter
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/InvertingConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: UnderlyingConverter
    path: src/Celestial.UIToolkit.Core/Converters/InvertingConverter.cs
    startLine: 24
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nGets or sets the underlying <xref href=\"System.Windows.Data.IValueConverter\" data-throw-if-not-resolved=\"false\"></xref> which is being used\nby the <xref href=\"Celestial.UIToolkit.Converters.InvertingConverter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public IValueConverter UnderlyingConverter { get; set; }
    parameters: []
    return:
      type: System.Windows.Data.IValueConverter
    content.vb: Public Property UnderlyingConverter As IValueConverter
  overload: Celestial.UIToolkit.Converters.InvertingConverter.UnderlyingConverter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Converters.InvertingConverter.#ctor
  commentId: M:Celestial.UIToolkit.Converters.InvertingConverter.#ctor
  id: '#ctor'
  parent: Celestial.UIToolkit.Converters.InvertingConverter
  langs:
  - csharp
  - vb
  name: InvertingConverter()
  nameWithType: InvertingConverter.InvertingConverter()
  fullName: Celestial.UIToolkit.Converters.InvertingConverter.InvertingConverter()
  type: Constructor
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/InvertingConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: .ctor
    path: src/Celestial.UIToolkit.Core/Converters/InvertingConverter.cs
    startLine: 33
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nInitializes a new instance of the <xref href=\"Celestial.UIToolkit.Converters.InvertingConverter\" data-throw-if-not-resolved=\"false\"></xref> class\nwithout an underlying converter.\nThe <xref href=\"Celestial.UIToolkit.Converters.InvertingConverter.UnderlyingConverter\" data-throw-if-not-resolved=\"false\"></xref> property will have be set at a later\npoint in time.\nOtherwise, an exception will be thrown during the conversion.\n"
  example: []
  syntax:
    content: public InvertingConverter()
    content.vb: Public Sub New
  overload: Celestial.UIToolkit.Converters.InvertingConverter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Converters.InvertingConverter.#ctor(System.Windows.Data.IValueConverter)
  commentId: M:Celestial.UIToolkit.Converters.InvertingConverter.#ctor(System.Windows.Data.IValueConverter)
  id: '#ctor(System.Windows.Data.IValueConverter)'
  parent: Celestial.UIToolkit.Converters.InvertingConverter
  langs:
  - csharp
  - vb
  name: InvertingConverter(IValueConverter)
  nameWithType: InvertingConverter.InvertingConverter(IValueConverter)
  fullName: Celestial.UIToolkit.Converters.InvertingConverter.InvertingConverter(System.Windows.Data.IValueConverter)
  type: Constructor
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/InvertingConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: .ctor
    path: src/Celestial.UIToolkit.Core/Converters/InvertingConverter.cs
    startLine: 44
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nInitializes a new instance of the <xref href=\"Celestial.UIToolkit.Converters.InvertingConverter\" data-throw-if-not-resolved=\"false\"></xref> class,\nwith the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">underlyingConverter</code>.\n"
  example: []
  syntax:
    content: public InvertingConverter(IValueConverter underlyingConverter)
    parameters:
    - id: underlyingConverter
      type: System.Windows.Data.IValueConverter
      description: "\nThe underlying <xref href=\"System.Windows.Data.IValueConverter\" data-throw-if-not-resolved=\"false\"></xref> which is being used by the\n<xref href=\"Celestial.UIToolkit.Converters.InvertingConverter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Sub New(underlyingConverter As IValueConverter)
  overload: Celestial.UIToolkit.Converters.InvertingConverter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Converters.InvertingConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.InvertingConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  id: Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: Celestial.UIToolkit.Converters.InvertingConverter
  langs:
  - csharp
  - vb
  name: Convert(Object, Type, Object, CultureInfo)
  nameWithType: InvertingConverter.Convert(Object, Type, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.InvertingConverter.Convert(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/InvertingConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: Convert
    path: src/Celestial.UIToolkit.Core/Converters/InvertingConverter.cs
    startLine: 59
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nPerforms the value conversion by calling the <xref href=\"Celestial.UIToolkit.Converters.InvertingConverter.UnderlyingConverter\" data-throw-if-not-resolved=\"false\"></xref>&apos;s\n<xref href=\"System.Windows.Data.IValueConverter.ConvertBack(System.Object%2cSystem.Type%2cSystem.Object%2cSystem.Globalization.CultureInfo)\" data-throw-if-not-resolved=\"false\"></xref> method\nwith the provided parameters.\n"
  example: []
  syntax:
    content: public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
    parameters:
    - id: value
      type: System.Object
      description: The value to be converted.
    - id: targetType
      type: System.Type
      description: The target conversion type.
    - id: parameter
      type: System.Object
      description: A parameter to be used during conversion.
    - id: culture
      type: System.Globalization.CultureInfo
      description: A <xref href="System.Globalization.CultureInfo" data-throw-if-not-resolved="false"></xref> to be used for the conversion.
    return:
      type: System.Object
      description: The converted result.
    content.vb: Public Function Convert(value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object
  overload: Celestial.UIToolkit.Converters.InvertingConverter.Convert*
  implements:
  - System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Converters.InvertingConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.InvertingConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  id: ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: Celestial.UIToolkit.Converters.InvertingConverter
  langs:
  - csharp
  - vb
  name: ConvertBack(Object, Type, Object, CultureInfo)
  nameWithType: InvertingConverter.ConvertBack(Object, Type, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.InvertingConverter.ConvertBack(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/InvertingConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: ConvertBack
    path: src/Celestial.UIToolkit.Core/Converters/InvertingConverter.cs
    startLine: 75
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nPerforms the backward value conversion by calling the <xref href=\"Celestial.UIToolkit.Converters.InvertingConverter.UnderlyingConverter\" data-throw-if-not-resolved=\"false\"></xref>&apos;s\n<xref href=\"System.Windows.Data.IValueConverter.Convert(System.Object%2cSystem.Type%2cSystem.Object%2cSystem.Globalization.CultureInfo)\" data-throw-if-not-resolved=\"false\"></xref> method\nwith the provided parameters.\n"
  example: []
  syntax:
    content: public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
    parameters:
    - id: value
      type: System.Object
      description: The value to be converted back.
    - id: targetType
      type: System.Type
      description: The target conversion type.
    - id: parameter
      type: System.Object
      description: A parameter to be used during conversion.
    - id: culture
      type: System.Globalization.CultureInfo
      description: A <xref href="System.Globalization.CultureInfo" data-throw-if-not-resolved="false"></xref> to be used for the conversion.
    return:
      type: System.Object
      description: The converted result.
    content.vb: Public Function ConvertBack(value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object
  overload: Celestial.UIToolkit.Converters.InvertingConverter.ConvertBack*
  implements:
  - System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: System.Windows.Data.IValueConverter
  commentId: T:System.Windows.Data.IValueConverter
  parent: System.Windows.Data
  isExternal: true
  name: IValueConverter
  nameWithType: IValueConverter
  fullName: System.Windows.Data.IValueConverter
- uid: Celestial.UIToolkit.Converters.InvertingConverter.UnderlyingConverter
  commentId: P:Celestial.UIToolkit.Converters.InvertingConverter.UnderlyingConverter
  isExternal: true
- uid: Celestial.UIToolkit.Converters.InvertingConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.InvertingConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  isExternal: true
- uid: System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IValueConverter
  isExternal: true
  name: ConvertBack(Object, Type, Object, CultureInfo)
  nameWithType: IValueConverter.ConvertBack(Object, Type, Object, CultureInfo)
  fullName: System.Windows.Data.IValueConverter.ConvertBack(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: IValueConverter.ConvertBack
    fullName: System.Windows.Data.IValueConverter.ConvertBack
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: IValueConverter.ConvertBack
    fullName: System.Windows.Data.IValueConverter.ConvertBack
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.InvertingConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.InvertingConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  isExternal: true
- uid: System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IValueConverter
  isExternal: true
  name: Convert(Object, Type, Object, CultureInfo)
  nameWithType: IValueConverter.Convert(Object, Type, Object, CultureInfo)
  fullName: System.Windows.Data.IValueConverter.Convert(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: IValueConverter.Convert
    fullName: System.Windows.Data.IValueConverter.Convert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: IValueConverter.Convert
    fullName: System.Windows.Data.IValueConverter.Convert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters
  commentId: N:Celestial.UIToolkit.Converters
  name: Celestial.UIToolkit.Converters
  nameWithType: Celestial.UIToolkit.Converters
  fullName: Celestial.UIToolkit.Converters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Data
  commentId: N:System.Windows.Data
  isExternal: true
  name: System.Windows.Data
  nameWithType: System.Windows.Data
  fullName: System.Windows.Data
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Celestial.UIToolkit.Converters.InvertingConverter
  commentId: T:Celestial.UIToolkit.Converters.InvertingConverter
  name: InvertingConverter
  nameWithType: InvertingConverter
  fullName: Celestial.UIToolkit.Converters.InvertingConverter
- uid: Celestial.UIToolkit.Converters.InvertingConverter.UnderlyingConverter*
  commentId: Overload:Celestial.UIToolkit.Converters.InvertingConverter.UnderlyingConverter
  name: UnderlyingConverter
  nameWithType: InvertingConverter.UnderlyingConverter
  fullName: Celestial.UIToolkit.Converters.InvertingConverter.UnderlyingConverter
- uid: Celestial.UIToolkit.Converters.InvertingConverter.#ctor*
  commentId: Overload:Celestial.UIToolkit.Converters.InvertingConverter.#ctor
  name: InvertingConverter
  nameWithType: InvertingConverter.InvertingConverter
  fullName: Celestial.UIToolkit.Converters.InvertingConverter.InvertingConverter
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: Celestial.UIToolkit.Converters.InvertingConverter.Convert*
  commentId: Overload:Celestial.UIToolkit.Converters.InvertingConverter.Convert
  name: Convert
  nameWithType: InvertingConverter.Convert
  fullName: Celestial.UIToolkit.Converters.InvertingConverter.Convert
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
- uid: Celestial.UIToolkit.Converters.InvertingConverter.ConvertBack*
  commentId: Overload:Celestial.UIToolkit.Converters.InvertingConverter.ConvertBack
  name: ConvertBack
  nameWithType: InvertingConverter.ConvertBack
  fullName: Celestial.UIToolkit.Converters.InvertingConverter.ConvertBack
