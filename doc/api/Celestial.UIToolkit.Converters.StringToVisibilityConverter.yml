### YamlMime:ManagedReference
items:
- uid: Celestial.UIToolkit.Converters.StringToVisibilityConverter
  commentId: T:Celestial.UIToolkit.Converters.StringToVisibilityConverter
  id: StringToVisibilityConverter
  parent: Celestial.UIToolkit.Converters
  children:
  - Celestial.UIToolkit.Converters.StringToVisibilityConverter.#ctor
  - Celestial.UIToolkit.Converters.StringToVisibilityConverter.Convert(System.Object,System.Object,System.Globalization.CultureInfo)
  - Celestial.UIToolkit.Converters.StringToVisibilityConverter.IncludeWhiteSpace
  langs:
  - csharp
  - vb
  name: StringToVisibilityConverter
  nameWithType: StringToVisibilityConverter
  fullName: Celestial.UIToolkit.Converters.StringToVisibilityConverter
  type: Class
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/NullToVisibilityConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: StringToVisibilityConverter
    path: src/Celestial.UIToolkit.Core/Converters/NullToVisibilityConverter.cs
    startLine: 50
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nAn extension of the <xref href=\"Celestial.UIToolkit.Converters.NullToVisibilityConverter\" data-throw-if-not-resolved=\"false\"></xref>,\nwhich also includes a null-string check in the conversion.\n"
  example: []
  syntax:
    content: >-
      [ValueConversion(typeof(object), typeof(Visibility))]

      public class StringToVisibilityConverter : NullToVisibilityConverter, IValueConverter
    content.vb: >-
      <ValueConversion(GetType(Object), GetType(Visibility))>

      Public Class StringToVisibilityConverter

          Inherits NullToVisibilityConverter

          Implements IValueConverter
  inheritance:
  - System.Object
  - Celestial.UIToolkit.Converters.ValueConverter{System.Object,System.Windows.Visibility}
  - Celestial.UIToolkit.Converters.NullToVisibilityConverter
  implements:
  - System.Windows.Data.IValueConverter
  inheritedMembers:
  - Celestial.UIToolkit.Converters.NullToVisibilityConverter.NullVisibility
  - Celestial.UIToolkit.Converters.NullToVisibilityConverter.NotNullVisibility
  - Celestial.UIToolkit.Converters.ValueConverter{System.Object,System.Windows.Visibility}.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - Celestial.UIToolkit.Converters.ValueConverter{System.Object,System.Windows.Visibility}.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - Celestial.UIToolkit.Converters.ValueConverter{System.Object,System.Windows.Visibility}.Convert(System.Object,System.Object,System.Globalization.CultureInfo)
  - Celestial.UIToolkit.Converters.ValueConverter{System.Object,System.Windows.Visibility}.ConvertBack(System.Windows.Visibility,System.Object,System.Globalization.CultureInfo)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Windows.Data.ValueConversionAttribute
    ctor: System.Windows.Data.ValueConversionAttribute.#ctor(System.Type,System.Type)
    arguments:
    - type: System.Type
      value: System.Object
    - type: System.Type
      value: System.Windows.Visibility
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Celestial.UIToolkit.Converters.StringToVisibilityConverter.IncludeWhiteSpace
  commentId: P:Celestial.UIToolkit.Converters.StringToVisibilityConverter.IncludeWhiteSpace
  id: IncludeWhiteSpace
  parent: Celestial.UIToolkit.Converters.StringToVisibilityConverter
  langs:
  - csharp
  - vb
  name: IncludeWhiteSpace
  nameWithType: StringToVisibilityConverter.IncludeWhiteSpace
  fullName: Celestial.UIToolkit.Converters.StringToVisibilityConverter.IncludeWhiteSpace
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/NullToVisibilityConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: IncludeWhiteSpace
    path: src/Celestial.UIToolkit.Core/Converters/NullToVisibilityConverter.cs
    startLine: 58
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nGets or sets a value indicating whether a white-space string\nshould be treated as an empty string/null-value.\n"
  example: []
  syntax:
    content: public bool IncludeWhiteSpace { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IncludeWhiteSpace As Boolean
  overload: Celestial.UIToolkit.Converters.StringToVisibilityConverter.IncludeWhiteSpace*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Converters.StringToVisibilityConverter.#ctor
  commentId: M:Celestial.UIToolkit.Converters.StringToVisibilityConverter.#ctor
  id: '#ctor'
  parent: Celestial.UIToolkit.Converters.StringToVisibilityConverter
  langs:
  - csharp
  - vb
  name: StringToVisibilityConverter()
  nameWithType: StringToVisibilityConverter.StringToVisibilityConverter()
  fullName: Celestial.UIToolkit.Converters.StringToVisibilityConverter.StringToVisibilityConverter()
  type: Constructor
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/NullToVisibilityConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: .ctor
    path: src/Celestial.UIToolkit.Core/Converters/NullToVisibilityConverter.cs
    startLine: 63
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nInitializes a new instance of the <xref href=\"Celestial.UIToolkit.Converters.StringToVisibilityConverter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public StringToVisibilityConverter()
    content.vb: Public Sub New
  overload: Celestial.UIToolkit.Converters.StringToVisibilityConverter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Converters.StringToVisibilityConverter.Convert(System.Object,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.StringToVisibilityConverter.Convert(System.Object,System.Object,System.Globalization.CultureInfo)
  id: Convert(System.Object,System.Object,System.Globalization.CultureInfo)
  parent: Celestial.UIToolkit.Converters.StringToVisibilityConverter
  langs:
  - csharp
  - vb
  name: Convert(Object, Object, CultureInfo)
  nameWithType: StringToVisibilityConverter.Convert(Object, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.StringToVisibilityConverter.Convert(System.Object, System.Object, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/NullToVisibilityConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: Convert
    path: src/Celestial.UIToolkit.Core/Converters/NullToVisibilityConverter.cs
    startLine: 72
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nConverts a value.\n"
  example: []
  syntax:
    content: public override Visibility Convert(object value, object parameter, CultureInfo culture)
    parameters:
    - id: value
      type: System.Object
      description: The value produced by the binding source.
    - id: parameter
      type: System.Object
      description: The converter parameter to use.
    - id: culture
      type: System.Globalization.CultureInfo
      description: The culture to use in the converter.
    return:
      type: System.Windows.Visibility
      description: A <xref href="System.Windows.Visibility" data-throw-if-not-resolved="false"></xref> object depending on the <code data-dev-comment-type="paramref" class="paramref">value</code>.
    content.vb: Public Overrides Function Convert(value As Object, parameter As Object, culture As CultureInfo) As Visibility
  overridden: Celestial.UIToolkit.Converters.NullToVisibilityConverter.Convert(System.Object,System.Object,System.Globalization.CultureInfo)
  overload: Celestial.UIToolkit.Converters.StringToVisibilityConverter.Convert*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Celestial.UIToolkit.Converters.NullToVisibilityConverter
  commentId: T:Celestial.UIToolkit.Converters.NullToVisibilityConverter
  parent: Celestial.UIToolkit.Converters
  name: NullToVisibilityConverter
  nameWithType: NullToVisibilityConverter
  fullName: Celestial.UIToolkit.Converters.NullToVisibilityConverter
- uid: Celestial.UIToolkit.Converters
  commentId: N:Celestial.UIToolkit.Converters
  name: Celestial.UIToolkit.Converters
  nameWithType: Celestial.UIToolkit.Converters
  fullName: Celestial.UIToolkit.Converters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Celestial.UIToolkit.Converters.ValueConverter{System.Object,System.Windows.Visibility}
  commentId: T:Celestial.UIToolkit.Converters.ValueConverter{System.Object,System.Windows.Visibility}
  parent: Celestial.UIToolkit.Converters
  definition: Celestial.UIToolkit.Converters.ValueConverter`2
  name: ValueConverter<Object, Visibility>
  nameWithType: ValueConverter<Object, Visibility>
  fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Object, System.Windows.Visibility>
  nameWithType.vb: ValueConverter(Of Object, Visibility)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of System.Object, System.Windows.Visibility)
  name.vb: ValueConverter(Of Object, Visibility)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2
    name: ValueConverter
    nameWithType: ValueConverter
    fullName: Celestial.UIToolkit.Converters.ValueConverter
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Visibility
    name: Visibility
    nameWithType: Visibility
    fullName: System.Windows.Visibility
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2
    name: ValueConverter
    nameWithType: ValueConverter
    fullName: Celestial.UIToolkit.Converters.ValueConverter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Visibility
    name: Visibility
    nameWithType: Visibility
    fullName: System.Windows.Visibility
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Data.IValueConverter
  commentId: T:System.Windows.Data.IValueConverter
  parent: System.Windows.Data
  isExternal: true
  name: IValueConverter
  nameWithType: IValueConverter
  fullName: System.Windows.Data.IValueConverter
- uid: Celestial.UIToolkit.Converters.NullToVisibilityConverter.NullVisibility
  commentId: P:Celestial.UIToolkit.Converters.NullToVisibilityConverter.NullVisibility
  parent: Celestial.UIToolkit.Converters.NullToVisibilityConverter
  name: NullVisibility
  nameWithType: NullToVisibilityConverter.NullVisibility
  fullName: Celestial.UIToolkit.Converters.NullToVisibilityConverter.NullVisibility
- uid: Celestial.UIToolkit.Converters.NullToVisibilityConverter.NotNullVisibility
  commentId: P:Celestial.UIToolkit.Converters.NullToVisibilityConverter.NotNullVisibility
  parent: Celestial.UIToolkit.Converters.NullToVisibilityConverter
  name: NotNullVisibility
  nameWithType: NullToVisibilityConverter.NotNullVisibility
  fullName: Celestial.UIToolkit.Converters.NullToVisibilityConverter.NotNullVisibility
- uid: Celestial.UIToolkit.Converters.ValueConverter{System.Object,System.Windows.Visibility}.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter{System.Object,System.Windows.Visibility}.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: Celestial.UIToolkit.Converters.ValueConverter{System.Object,System.Windows.Visibility}
  definition: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  name: Convert(Object, Type, Object, CultureInfo)
  nameWithType: ValueConverter<Object, Visibility>.Convert(Object, Type, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Object, System.Windows.Visibility>.Convert(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of Object, Visibility).Convert(Object, Type, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of System.Object, System.Windows.Visibility).Convert(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter<Object, Visibility>.Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Object, System.Windows.Visibility>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter(Of Object, Visibility).Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of System.Object, System.Windows.Visibility).Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.ValueConverter{System.Object,System.Windows.Visibility}.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter{System.Object,System.Windows.Visibility}.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: Celestial.UIToolkit.Converters.ValueConverter{System.Object,System.Windows.Visibility}
  definition: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  name: ConvertBack(Object, Type, Object, CultureInfo)
  nameWithType: ValueConverter<Object, Visibility>.ConvertBack(Object, Type, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Object, System.Windows.Visibility>.ConvertBack(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of Object, Visibility).ConvertBack(Object, Type, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of System.Object, System.Windows.Visibility).ConvertBack(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter<Object, Visibility>.ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Object, System.Windows.Visibility>.ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter(Of Object, Visibility).ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of System.Object, System.Windows.Visibility).ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.ValueConverter{System.Object,System.Windows.Visibility}.Convert(System.Object,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter{System.Object,System.Windows.Visibility}.Convert(System.Object,System.Object,System.Globalization.CultureInfo)
  parent: Celestial.UIToolkit.Converters.ValueConverter{System.Object,System.Windows.Visibility}
  definition: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
  name: Convert(Object, Object, CultureInfo)
  nameWithType: ValueConverter<Object, Visibility>.Convert(Object, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Object, System.Windows.Visibility>.Convert(System.Object, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of Object, Visibility).Convert(Object, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of System.Object, System.Windows.Visibility).Convert(System.Object, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter<Object, Visibility>.Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Object, System.Windows.Visibility>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter(Of Object, Visibility).Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of System.Object, System.Windows.Visibility).Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.ValueConverter{System.Object,System.Windows.Visibility}.ConvertBack(System.Windows.Visibility,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter{System.Object,System.Windows.Visibility}.ConvertBack(System.Windows.Visibility,System.Object,System.Globalization.CultureInfo)
  parent: Celestial.UIToolkit.Converters.ValueConverter{System.Object,System.Windows.Visibility}
  definition: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
  name: ConvertBack(Visibility, Object, CultureInfo)
  nameWithType: ValueConverter<Object, Visibility>.ConvertBack(Visibility, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Object, System.Windows.Visibility>.ConvertBack(System.Windows.Visibility, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of Object, Visibility).ConvertBack(Visibility, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of System.Object, System.Windows.Visibility).ConvertBack(System.Windows.Visibility, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter<Object, Visibility>.ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Object, System.Windows.Visibility>.ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Visibility
    name: Visibility
    nameWithType: Visibility
    fullName: System.Windows.Visibility
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter(Of Object, Visibility).ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of System.Object, System.Windows.Visibility).ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Visibility
    name: Visibility
    nameWithType: Visibility
    fullName: System.Windows.Visibility
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Celestial.UIToolkit.Converters.ValueConverter`2
  commentId: T:Celestial.UIToolkit.Converters.ValueConverter`2
  name: ValueConverter<TValue, TTarget>
  nameWithType: ValueConverter<TValue, TTarget>
  fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>
  nameWithType.vb: ValueConverter(Of TValue, TTarget)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget)
  name.vb: ValueConverter(Of TValue, TTarget)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2
    name: ValueConverter
    nameWithType: ValueConverter
    fullName: Celestial.UIToolkit.Converters.ValueConverter
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2
    name: ValueConverter
    nameWithType: ValueConverter
    fullName: Celestial.UIToolkit.Converters.ValueConverter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Data
  commentId: N:System.Windows.Data
  isExternal: true
  name: System.Windows.Data
  nameWithType: System.Windows.Data
  fullName: System.Windows.Data
- uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  isExternal: true
  name: Convert(Object, Type, Object, CultureInfo)
  nameWithType: ValueConverter<TValue, TTarget>.Convert(Object, Type, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.Convert(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of TValue, TTarget).Convert(Object, Type, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).Convert(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter<TValue, TTarget>.Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter(Of TValue, TTarget).Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  isExternal: true
  name: ConvertBack(Object, Type, Object, CultureInfo)
  nameWithType: ValueConverter<TValue, TTarget>.ConvertBack(Object, Type, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.ConvertBack(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of TValue, TTarget).ConvertBack(Object, Type, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).ConvertBack(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter<TValue, TTarget>.ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter(Of TValue, TTarget).ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
  isExternal: true
  name: Convert(TValue, Object, CultureInfo)
  nameWithType: ValueConverter<TValue, TTarget>.Convert(TValue, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.Convert(TValue, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of TValue, TTarget).Convert(TValue, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).Convert(TValue, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter<TValue, TTarget>.Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter(Of TValue, TTarget).Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).Convert
  - name: (
    nameWithType: (
    fullName: (
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
  isExternal: true
  name: ConvertBack(TTarget, Object, CultureInfo)
  nameWithType: ValueConverter<TValue, TTarget>.ConvertBack(TTarget, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.ConvertBack(TTarget, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of TValue, TTarget).ConvertBack(TTarget, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).ConvertBack(TTarget, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter<TValue, TTarget>.ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter(Of TValue, TTarget).ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.StringToVisibilityConverter.IncludeWhiteSpace*
  commentId: Overload:Celestial.UIToolkit.Converters.StringToVisibilityConverter.IncludeWhiteSpace
  name: IncludeWhiteSpace
  nameWithType: StringToVisibilityConverter.IncludeWhiteSpace
  fullName: Celestial.UIToolkit.Converters.StringToVisibilityConverter.IncludeWhiteSpace
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Celestial.UIToolkit.Converters.StringToVisibilityConverter
  commentId: T:Celestial.UIToolkit.Converters.StringToVisibilityConverter
  name: StringToVisibilityConverter
  nameWithType: StringToVisibilityConverter
  fullName: Celestial.UIToolkit.Converters.StringToVisibilityConverter
- uid: Celestial.UIToolkit.Converters.StringToVisibilityConverter.#ctor*
  commentId: Overload:Celestial.UIToolkit.Converters.StringToVisibilityConverter.#ctor
  name: StringToVisibilityConverter
  nameWithType: StringToVisibilityConverter.StringToVisibilityConverter
  fullName: Celestial.UIToolkit.Converters.StringToVisibilityConverter.StringToVisibilityConverter
- uid: System.Windows.Visibility
  commentId: T:System.Windows.Visibility
  parent: System.Windows
  isExternal: true
  name: Visibility
  nameWithType: Visibility
  fullName: System.Windows.Visibility
- uid: Celestial.UIToolkit.Converters.NullToVisibilityConverter.Convert(System.Object,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.NullToVisibilityConverter.Convert(System.Object,System.Object,System.Globalization.CultureInfo)
  parent: Celestial.UIToolkit.Converters.NullToVisibilityConverter
  isExternal: true
  name: Convert(Object, Object, CultureInfo)
  nameWithType: NullToVisibilityConverter.Convert(Object, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.NullToVisibilityConverter.Convert(System.Object, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.NullToVisibilityConverter.Convert(System.Object,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: NullToVisibilityConverter.Convert
    fullName: Celestial.UIToolkit.Converters.NullToVisibilityConverter.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.NullToVisibilityConverter.Convert(System.Object,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: NullToVisibilityConverter.Convert
    fullName: Celestial.UIToolkit.Converters.NullToVisibilityConverter.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.StringToVisibilityConverter.Convert*
  commentId: Overload:Celestial.UIToolkit.Converters.StringToVisibilityConverter.Convert
  name: Convert
  nameWithType: StringToVisibilityConverter.Convert
  fullName: Celestial.UIToolkit.Converters.StringToVisibilityConverter.Convert
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows
  commentId: N:System.Windows
  isExternal: true
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
