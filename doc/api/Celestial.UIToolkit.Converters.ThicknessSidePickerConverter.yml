### YamlMime:ManagedReference
items:
- uid: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter
  commentId: T:Celestial.UIToolkit.Converters.ThicknessSidePickerConverter
  id: ThicknessSidePickerConverter
  parent: Celestial.UIToolkit.Converters
  children:
  - Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.#ctor
  - Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Bottom
  - Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Convert(System.Windows.Thickness,System.Object,System.Globalization.CultureInfo)
  - Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Left
  - Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Right
  - Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Top
  langs:
  - csharp
  - vb
  name: ThicknessSidePickerConverter
  nameWithType: ThicknessSidePickerConverter
  fullName: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter
  type: Class
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/ThicknessSidePickerConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: ThicknessSidePickerConverter
    path: src/Celestial.UIToolkit.Core/Converters/ThicknessSidePickerConverter.cs
    startLine: 12
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nAn implementation of the <xref href=\"System.Windows.Data.IValueConverter\" data-throw-if-not-resolved=\"false\"></xref> interface\nwhich expects a <xref href=\"System.Windows.Thickness\" data-throw-if-not-resolved=\"false\"></xref>, sets certain edge\nproperties to a desired value and then returns the result.\n"
  example: []
  syntax:
    content: >-
      [ValueConversion(typeof(Thickness), typeof(Thickness))]

      public class ThicknessSidePickerConverter : ValueConverter<Thickness, Thickness>, IValueConverter
    content.vb: >-
      <ValueConversion(GetType(Thickness), GetType(Thickness))>

      Public Class ThicknessSidePickerConverter

          Inherits ValueConverter(Of Thickness, Thickness)

          Implements IValueConverter
  inheritance:
  - System.Object
  - Celestial.UIToolkit.Converters.ValueConverter{System.Windows.Thickness,System.Windows.Thickness}
  implements:
  - System.Windows.Data.IValueConverter
  inheritedMembers:
  - Celestial.UIToolkit.Converters.ValueConverter{System.Windows.Thickness,System.Windows.Thickness}.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - Celestial.UIToolkit.Converters.ValueConverter{System.Windows.Thickness,System.Windows.Thickness}.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - Celestial.UIToolkit.Converters.ValueConverter{System.Windows.Thickness,System.Windows.Thickness}.Convert(System.Windows.Thickness,System.Object,System.Globalization.CultureInfo)
  - Celestial.UIToolkit.Converters.ValueConverter{System.Windows.Thickness,System.Windows.Thickness}.ConvertBack(System.Windows.Thickness,System.Object,System.Globalization.CultureInfo)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.Windows.Data.ValueConversionAttribute
    ctor: System.Windows.Data.ValueConversionAttribute.#ctor(System.Type,System.Type)
    arguments:
    - type: System.Type
      value: System.Windows.Thickness
    - type: System.Type
      value: System.Windows.Thickness
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Left
  commentId: P:Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Left
  id: Left
  parent: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: ThicknessSidePickerConverter.Left
  fullName: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Left
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/ThicknessSidePickerConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: Left
    path: src/Celestial.UIToolkit.Core/Converters/ThicknessSidePickerConverter.cs
    startLine: 21
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nGets or sets a value to which the <xref href=\"System.Windows.Thickness.Left\" data-throw-if-not-resolved=\"false\"></xref>\nvalue will be set.\nIf this is <code>null</code>, the original value is retained.\n"
  example: []
  syntax:
    content: public double? Left { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property Left As Double?
  overload: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Left*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Top
  commentId: P:Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Top
  id: Top
  parent: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter
  langs:
  - csharp
  - vb
  name: Top
  nameWithType: ThicknessSidePickerConverter.Top
  fullName: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Top
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/ThicknessSidePickerConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: Top
    path: src/Celestial.UIToolkit.Core/Converters/ThicknessSidePickerConverter.cs
    startLine: 28
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nGets or sets a value to which the <xref href=\"System.Windows.Thickness.Top\" data-throw-if-not-resolved=\"false\"></xref>\nvalue will be set.\nIf this is <code>null</code>, the original value is retained.\n"
  example: []
  syntax:
    content: public double? Top { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property Top As Double?
  overload: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Top*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Right
  commentId: P:Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Right
  id: Right
  parent: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: ThicknessSidePickerConverter.Right
  fullName: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Right
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/ThicknessSidePickerConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: Right
    path: src/Celestial.UIToolkit.Core/Converters/ThicknessSidePickerConverter.cs
    startLine: 35
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nGets or sets a value to which the <xref href=\"System.Windows.Thickness.Right\" data-throw-if-not-resolved=\"false\"></xref>\nvalue will be set.\nIf this is <code>null</code>, the original value is retained.\n"
  example: []
  syntax:
    content: public double? Right { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property Right As Double?
  overload: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Right*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Bottom
  commentId: P:Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Bottom
  id: Bottom
  parent: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter
  langs:
  - csharp
  - vb
  name: Bottom
  nameWithType: ThicknessSidePickerConverter.Bottom
  fullName: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Bottom
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/ThicknessSidePickerConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: Bottom
    path: src/Celestial.UIToolkit.Core/Converters/ThicknessSidePickerConverter.cs
    startLine: 42
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nGets or sets a value to which the <xref href=\"System.Windows.Thickness.Bottom\" data-throw-if-not-resolved=\"false\"></xref>\nvalue will be set.\nIf this is <code>null</code>, the original value is retained.\n"
  example: []
  syntax:
    content: public double? Bottom { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property Bottom As Double?
  overload: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Bottom*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.#ctor
  commentId: M:Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.#ctor
  id: '#ctor'
  parent: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter
  langs:
  - csharp
  - vb
  name: ThicknessSidePickerConverter()
  nameWithType: ThicknessSidePickerConverter.ThicknessSidePickerConverter()
  fullName: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.ThicknessSidePickerConverter()
  type: Constructor
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/ThicknessSidePickerConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: .ctor
    path: src/Celestial.UIToolkit.Core/Converters/ThicknessSidePickerConverter.cs
    startLine: 47
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nInitializes a new instance of the <xref href=\"Celestial.UIToolkit.Converters.ThicknessSidePickerConverter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public ThicknessSidePickerConverter()
    content.vb: Public Sub New
  overload: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Convert(System.Windows.Thickness,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Convert(System.Windows.Thickness,System.Object,System.Globalization.CultureInfo)
  id: Convert(System.Windows.Thickness,System.Object,System.Globalization.CultureInfo)
  parent: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter
  langs:
  - csharp
  - vb
  name: Convert(Thickness, Object, CultureInfo)
  nameWithType: ThicknessSidePickerConverter.Convert(Thickness, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Convert(System.Windows.Thickness, System.Object, System.Globalization.CultureInfo)
  type: Method
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Converters/ThicknessSidePickerConverter.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: Convert
    path: src/Celestial.UIToolkit.Core/Converters/ThicknessSidePickerConverter.cs
    startLine: 57
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Converters
  summary: "\nChanges the values of the input thickness to the values set in this\nconverter&apos;s properties.\n"
  example: []
  syntax:
    content: public override Thickness Convert(Thickness value, object parameter, CultureInfo culture)
    parameters:
    - id: value
      type: System.Windows.Thickness
      description: The thickness whose values will be altered.
    - id: parameter
      type: System.Object
      description: Not used.
    - id: culture
      type: System.Globalization.CultureInfo
      description: Not used.
    return:
      type: System.Windows.Thickness
      description: The altered <xref href="System.Windows.Thickness" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function Convert(value As Thickness, parameter As Object, culture As CultureInfo) As Thickness
  overridden: Celestial.UIToolkit.Converters.ValueConverter{System.Windows.Thickness,System.Windows.Thickness}.Convert(System.Windows.Thickness,System.Object,System.Globalization.CultureInfo)
  overload: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Convert*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.Windows.Data.IValueConverter
  commentId: T:System.Windows.Data.IValueConverter
  parent: System.Windows.Data
  isExternal: true
  name: IValueConverter
  nameWithType: IValueConverter
  fullName: System.Windows.Data.IValueConverter
- uid: System.Windows.Thickness
  commentId: T:System.Windows.Thickness
  parent: System.Windows
  isExternal: true
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
- uid: Celestial.UIToolkit.Converters
  commentId: N:Celestial.UIToolkit.Converters
  name: Celestial.UIToolkit.Converters
  nameWithType: Celestial.UIToolkit.Converters
  fullName: Celestial.UIToolkit.Converters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Celestial.UIToolkit.Converters.ValueConverter{System.Windows.Thickness,System.Windows.Thickness}
  commentId: T:Celestial.UIToolkit.Converters.ValueConverter{System.Windows.Thickness,System.Windows.Thickness}
  parent: Celestial.UIToolkit.Converters
  definition: Celestial.UIToolkit.Converters.ValueConverter`2
  name: ValueConverter<Thickness, Thickness>
  nameWithType: ValueConverter<Thickness, Thickness>
  fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Windows.Thickness, System.Windows.Thickness>
  nameWithType.vb: ValueConverter(Of Thickness, Thickness)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of System.Windows.Thickness, System.Windows.Thickness)
  name.vb: ValueConverter(Of Thickness, Thickness)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2
    name: ValueConverter
    nameWithType: ValueConverter
    fullName: Celestial.UIToolkit.Converters.ValueConverter
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Thickness
    name: Thickness
    nameWithType: Thickness
    fullName: System.Windows.Thickness
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Thickness
    name: Thickness
    nameWithType: Thickness
    fullName: System.Windows.Thickness
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2
    name: ValueConverter
    nameWithType: ValueConverter
    fullName: Celestial.UIToolkit.Converters.ValueConverter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Windows.Thickness
    name: Thickness
    nameWithType: Thickness
    fullName: System.Windows.Thickness
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Thickness
    name: Thickness
    nameWithType: Thickness
    fullName: System.Windows.Thickness
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.ValueConverter{System.Windows.Thickness,System.Windows.Thickness}.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter{System.Windows.Thickness,System.Windows.Thickness}.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: Celestial.UIToolkit.Converters.ValueConverter{System.Windows.Thickness,System.Windows.Thickness}
  definition: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  name: Convert(Object, Type, Object, CultureInfo)
  nameWithType: ValueConverter<Thickness, Thickness>.Convert(Object, Type, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Windows.Thickness, System.Windows.Thickness>.Convert(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of Thickness, Thickness).Convert(Object, Type, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of System.Windows.Thickness, System.Windows.Thickness).Convert(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter<Thickness, Thickness>.Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Windows.Thickness, System.Windows.Thickness>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter(Of Thickness, Thickness).Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of System.Windows.Thickness, System.Windows.Thickness).Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.ValueConverter{System.Windows.Thickness,System.Windows.Thickness}.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter{System.Windows.Thickness,System.Windows.Thickness}.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: Celestial.UIToolkit.Converters.ValueConverter{System.Windows.Thickness,System.Windows.Thickness}
  definition: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  name: ConvertBack(Object, Type, Object, CultureInfo)
  nameWithType: ValueConverter<Thickness, Thickness>.ConvertBack(Object, Type, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Windows.Thickness, System.Windows.Thickness>.ConvertBack(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of Thickness, Thickness).ConvertBack(Object, Type, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of System.Windows.Thickness, System.Windows.Thickness).ConvertBack(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter<Thickness, Thickness>.ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Windows.Thickness, System.Windows.Thickness>.ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter(Of Thickness, Thickness).ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of System.Windows.Thickness, System.Windows.Thickness).ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.ValueConverter{System.Windows.Thickness,System.Windows.Thickness}.Convert(System.Windows.Thickness,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter{System.Windows.Thickness,System.Windows.Thickness}.Convert(System.Windows.Thickness,System.Object,System.Globalization.CultureInfo)
  parent: Celestial.UIToolkit.Converters.ValueConverter{System.Windows.Thickness,System.Windows.Thickness}
  definition: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
  name: Convert(Thickness, Object, CultureInfo)
  nameWithType: ValueConverter<Thickness, Thickness>.Convert(Thickness, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Windows.Thickness, System.Windows.Thickness>.Convert(System.Windows.Thickness, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of Thickness, Thickness).Convert(Thickness, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of System.Windows.Thickness, System.Windows.Thickness).Convert(System.Windows.Thickness, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter<Thickness, Thickness>.Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Windows.Thickness, System.Windows.Thickness>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Thickness
    name: Thickness
    nameWithType: Thickness
    fullName: System.Windows.Thickness
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter(Of Thickness, Thickness).Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of System.Windows.Thickness, System.Windows.Thickness).Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Thickness
    name: Thickness
    nameWithType: Thickness
    fullName: System.Windows.Thickness
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.ValueConverter{System.Windows.Thickness,System.Windows.Thickness}.ConvertBack(System.Windows.Thickness,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter{System.Windows.Thickness,System.Windows.Thickness}.ConvertBack(System.Windows.Thickness,System.Object,System.Globalization.CultureInfo)
  parent: Celestial.UIToolkit.Converters.ValueConverter{System.Windows.Thickness,System.Windows.Thickness}
  definition: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
  name: ConvertBack(Thickness, Object, CultureInfo)
  nameWithType: ValueConverter<Thickness, Thickness>.ConvertBack(Thickness, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Windows.Thickness, System.Windows.Thickness>.ConvertBack(System.Windows.Thickness, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of Thickness, Thickness).ConvertBack(Thickness, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of System.Windows.Thickness, System.Windows.Thickness).ConvertBack(System.Windows.Thickness, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter<Thickness, Thickness>.ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter<System.Windows.Thickness, System.Windows.Thickness>.ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Thickness
    name: Thickness
    nameWithType: Thickness
    fullName: System.Windows.Thickness
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter(Of Thickness, Thickness).ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of System.Windows.Thickness, System.Windows.Thickness).ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Thickness
    name: Thickness
    nameWithType: Thickness
    fullName: System.Windows.Thickness
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Data
  commentId: N:System.Windows.Data
  isExternal: true
  name: System.Windows.Data
  nameWithType: System.Windows.Data
  fullName: System.Windows.Data
- uid: System.Windows
  commentId: N:System.Windows
  isExternal: true
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Celestial.UIToolkit.Converters.ValueConverter`2
  commentId: T:Celestial.UIToolkit.Converters.ValueConverter`2
  name: ValueConverter<TValue, TTarget>
  nameWithType: ValueConverter<TValue, TTarget>
  fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>
  nameWithType.vb: ValueConverter(Of TValue, TTarget)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget)
  name.vb: ValueConverter(Of TValue, TTarget)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2
    name: ValueConverter
    nameWithType: ValueConverter
    fullName: Celestial.UIToolkit.Converters.ValueConverter
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2
    name: ValueConverter
    nameWithType: ValueConverter
    fullName: Celestial.UIToolkit.Converters.ValueConverter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  isExternal: true
  name: Convert(Object, Type, Object, CultureInfo)
  nameWithType: ValueConverter<TValue, TTarget>.Convert(Object, Type, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.Convert(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of TValue, TTarget).Convert(Object, Type, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).Convert(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter<TValue, TTarget>.Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter(Of TValue, TTarget).Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).Convert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  isExternal: true
  name: ConvertBack(Object, Type, Object, CultureInfo)
  nameWithType: ValueConverter<TValue, TTarget>.ConvertBack(Object, Type, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.ConvertBack(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of TValue, TTarget).ConvertBack(Object, Type, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).ConvertBack(System.Object, System.Type, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter<TValue, TTarget>.ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter(Of TValue, TTarget).ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
  isExternal: true
  name: Convert(TValue, Object, CultureInfo)
  nameWithType: ValueConverter<TValue, TTarget>.Convert(TValue, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.Convert(TValue, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of TValue, TTarget).Convert(TValue, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).Convert(TValue, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter<TValue, TTarget>.Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.Convert
  - name: (
    nameWithType: (
    fullName: (
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.Convert(`0,System.Object,System.Globalization.CultureInfo)
    name: Convert
    nameWithType: ValueConverter(Of TValue, TTarget).Convert
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).Convert
  - name: (
    nameWithType: (
    fullName: (
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
  commentId: M:Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
  isExternal: true
  name: ConvertBack(TTarget, Object, CultureInfo)
  nameWithType: ValueConverter<TValue, TTarget>.ConvertBack(TTarget, Object, CultureInfo)
  fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.ConvertBack(TTarget, System.Object, System.Globalization.CultureInfo)
  nameWithType.vb: ValueConverter(Of TValue, TTarget).ConvertBack(TTarget, Object, CultureInfo)
  fullName.vb: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).ConvertBack(TTarget, System.Object, System.Globalization.CultureInfo)
  spec.csharp:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter<TValue, TTarget>.ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter<TValue, TTarget>.ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Converters.ValueConverter`2.ConvertBack(`1,System.Object,System.Globalization.CultureInfo)
    name: ConvertBack
    nameWithType: ValueConverter(Of TValue, TTarget).ConvertBack
    fullName: Celestial.UIToolkit.Converters.ValueConverter(Of TValue, TTarget).ConvertBack
  - name: (
    nameWithType: (
    fullName: (
  - name: TTarget
    nameWithType: TTarget
    fullName: TTarget
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Thickness.Left
  commentId: P:System.Windows.Thickness.Left
  isExternal: true
- uid: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Left*
  commentId: Overload:Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Left
  name: Left
  nameWithType: ThicknessSidePickerConverter.Left
  fullName: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Left
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Thickness.Top
  commentId: P:System.Windows.Thickness.Top
  isExternal: true
- uid: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Top*
  commentId: Overload:Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Top
  name: Top
  nameWithType: ThicknessSidePickerConverter.Top
  fullName: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Top
- uid: System.Windows.Thickness.Right
  commentId: P:System.Windows.Thickness.Right
  isExternal: true
- uid: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Right*
  commentId: Overload:Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Right
  name: Right
  nameWithType: ThicknessSidePickerConverter.Right
  fullName: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Right
- uid: System.Windows.Thickness.Bottom
  commentId: P:System.Windows.Thickness.Bottom
  isExternal: true
- uid: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Bottom*
  commentId: Overload:Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Bottom
  name: Bottom
  nameWithType: ThicknessSidePickerConverter.Bottom
  fullName: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Bottom
- uid: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter
  commentId: T:Celestial.UIToolkit.Converters.ThicknessSidePickerConverter
  name: ThicknessSidePickerConverter
  nameWithType: ThicknessSidePickerConverter
  fullName: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter
- uid: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.#ctor*
  commentId: Overload:Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.#ctor
  name: ThicknessSidePickerConverter
  nameWithType: ThicknessSidePickerConverter.ThicknessSidePickerConverter
  fullName: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.ThicknessSidePickerConverter
- uid: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Convert*
  commentId: Overload:Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Convert
  name: Convert
  nameWithType: ThicknessSidePickerConverter.Convert
  fullName: Celestial.UIToolkit.Converters.ThicknessSidePickerConverter.Convert
- uid: System.Globalization.CultureInfo
  commentId: T:System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Globalization
  commentId: N:System.Globalization
  isExternal: true
  name: System.Globalization
  nameWithType: System.Globalization
  fullName: System.Globalization
