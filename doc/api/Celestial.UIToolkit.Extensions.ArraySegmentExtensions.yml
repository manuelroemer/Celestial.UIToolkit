### YamlMime:ManagedReference
items:
- uid: Celestial.UIToolkit.Extensions.ArraySegmentExtensions
  commentId: T:Celestial.UIToolkit.Extensions.ArraySegmentExtensions
  id: ArraySegmentExtensions
  parent: Celestial.UIToolkit.Extensions
  children:
  - Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesElementAt``1(System.ArraySegment{``0},System.Int32)
  - Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesFirstArrayItem``1(System.ArraySegment{``0})
  - Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesLastArrayItem``1(System.ArraySegment{``0})
  langs:
  - csharp
  - vb
  name: ArraySegmentExtensions
  nameWithType: ArraySegmentExtensions
  fullName: Celestial.UIToolkit.Extensions.ArraySegmentExtensions
  type: Class
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Extensions/ArraySegmentExtensions.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: ArraySegmentExtensions
    path: src/Celestial.UIToolkit.Core/Extensions/ArraySegmentExtensions.cs
    startLine: 8
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Extensions
  summary: "\nProvides extension methods for the <xref href=\"System.ArraySegment%601\" data-throw-if-not-resolved=\"false\"></xref> structure.\n"
  example: []
  syntax:
    content: public static class ArraySegmentExtensions
    content.vb: Public Module ArraySegmentExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesElementAt``1(System.ArraySegment{``0},System.Int32)
  commentId: M:Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesElementAt``1(System.ArraySegment{``0},System.Int32)
  id: IncludesElementAt``1(System.ArraySegment{``0},System.Int32)
  isExtensionMethod: true
  parent: Celestial.UIToolkit.Extensions.ArraySegmentExtensions
  langs:
  - csharp
  - vb
  name: IncludesElementAt<T>(ArraySegment<T>, Int32)
  nameWithType: ArraySegmentExtensions.IncludesElementAt<T>(ArraySegment<T>, Int32)
  fullName: Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesElementAt<T>(System.ArraySegment<T>, System.Int32)
  type: Method
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Extensions/ArraySegmentExtensions.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: IncludesElementAt
    path: src/Celestial.UIToolkit.Core/Extensions/ArraySegmentExtensions.cs
    startLine: 22
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Extensions
  summary: "\nReturns a value indicating whether the segment includes\nthe item at the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">index</code>.\n"
  example: []
  syntax:
    content: public static bool IncludesElementAt<T>(this ArraySegment<T> segment, int index)
    parameters:
    - id: segment
      type: System.ArraySegment{{T}}
      description: The segment.
    - id: index
      type: System.Int32
      description: The index to be checked.
    typeParameters:
    - id: T
      description: The type of the array.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the segment includes the item at the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">index</code>;\n<code>false</code> if not.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IncludesElementAt(Of T)(segment As ArraySegment(Of T), index As Integer) As Boolean
  overload: Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesElementAt*
  nameWithType.vb: ArraySegmentExtensions.IncludesElementAt(Of T)(ArraySegment(Of T), Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesElementAt(Of T)(System.ArraySegment(Of T), System.Int32)
  name.vb: IncludesElementAt(Of T)(ArraySegment(Of T), Int32)
- uid: Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesFirstArrayItem``1(System.ArraySegment{``0})
  commentId: M:Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesFirstArrayItem``1(System.ArraySegment{``0})
  id: IncludesFirstArrayItem``1(System.ArraySegment{``0})
  isExtensionMethod: true
  parent: Celestial.UIToolkit.Extensions.ArraySegmentExtensions
  langs:
  - csharp
  - vb
  name: IncludesFirstArrayItem<T>(ArraySegment<T>)
  nameWithType: ArraySegmentExtensions.IncludesFirstArrayItem<T>(ArraySegment<T>)
  fullName: Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesFirstArrayItem<T>(System.ArraySegment<T>)
  type: Method
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Extensions/ArraySegmentExtensions.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: IncludesFirstArrayItem
    path: src/Celestial.UIToolkit.Core/Extensions/ArraySegmentExtensions.cs
    startLine: 40
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Extensions
  summary: "\nReturns a value indicating whether the segment includes\nthe underlying array&apos;s first item.\n"
  example: []
  syntax:
    content: public static bool IncludesFirstArrayItem<T>(this ArraySegment<T> segment)
    parameters:
    - id: segment
      type: System.ArraySegment{{T}}
      description: The segment.
    typeParameters:
    - id: T
      description: The type of the array.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the segment includes the underlying array&apos;s first item;\n<code>false</code> if not.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IncludesFirstArrayItem(Of T)(segment As ArraySegment(Of T)) As Boolean
  overload: Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesFirstArrayItem*
  nameWithType.vb: ArraySegmentExtensions.IncludesFirstArrayItem(Of T)(ArraySegment(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesFirstArrayItem(Of T)(System.ArraySegment(Of T))
  name.vb: IncludesFirstArrayItem(Of T)(ArraySegment(Of T))
- uid: Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesLastArrayItem``1(System.ArraySegment{``0})
  commentId: M:Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesLastArrayItem``1(System.ArraySegment{``0})
  id: IncludesLastArrayItem``1(System.ArraySegment{``0})
  isExtensionMethod: true
  parent: Celestial.UIToolkit.Extensions.ArraySegmentExtensions
  langs:
  - csharp
  - vb
  name: IncludesLastArrayItem<T>(ArraySegment<T>)
  nameWithType: ArraySegmentExtensions.IncludesLastArrayItem<T>(ArraySegment<T>)
  fullName: Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesLastArrayItem<T>(System.ArraySegment<T>)
  type: Method
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Extensions/ArraySegmentExtensions.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: IncludesLastArrayItem
    path: src/Celestial.UIToolkit.Core/Extensions/ArraySegmentExtensions.cs
    startLine: 55
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Extensions
  summary: "\nReturns a value indicating whether the segment includes\nthe underlying array&apos;s last item.\n"
  example: []
  syntax:
    content: public static bool IncludesLastArrayItem<T>(this ArraySegment<T> segment)
    parameters:
    - id: segment
      type: System.ArraySegment{{T}}
      description: The segment.
    typeParameters:
    - id: T
      description: The type of the array.
    return:
      type: System.Boolean
      description: "\n<code>true</code> if the segment includes the underlying array&apos;s last item;\n<code>false</code> if not.\n"
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IncludesLastArrayItem(Of T)(segment As ArraySegment(Of T)) As Boolean
  overload: Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesLastArrayItem*
  nameWithType.vb: ArraySegmentExtensions.IncludesLastArrayItem(Of T)(ArraySegment(Of T))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesLastArrayItem(Of T)(System.ArraySegment(Of T))
  name.vb: IncludesLastArrayItem(Of T)(ArraySegment(Of T))
references:
- uid: System.ArraySegment`1
  commentId: T:System.ArraySegment`1
  isExternal: true
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullName.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Extensions
  commentId: N:Celestial.UIToolkit.Extensions
  name: Celestial.UIToolkit.Extensions
  nameWithType: Celestial.UIToolkit.Extensions
  fullName: Celestial.UIToolkit.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesElementAt*
  commentId: Overload:Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesElementAt
  name: IncludesElementAt
  nameWithType: ArraySegmentExtensions.IncludesElementAt
  fullName: Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesElementAt
- uid: System.ArraySegment{{T}}
  commentId: T:System.ArraySegment{``0}
  parent: System
  definition: System.ArraySegment`1
  name: ArraySegment<T>
  nameWithType: ArraySegment<T>
  fullName: System.ArraySegment<T>
  nameWithType.vb: ArraySegment(Of T)
  fullName.vb: System.ArraySegment(Of T)
  name.vb: ArraySegment(Of T)
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: System.ArraySegment
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesFirstArrayItem*
  commentId: Overload:Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesFirstArrayItem
  name: IncludesFirstArrayItem
  nameWithType: ArraySegmentExtensions.IncludesFirstArrayItem
  fullName: Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesFirstArrayItem
- uid: Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesLastArrayItem*
  commentId: Overload:Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesLastArrayItem
  name: IncludesLastArrayItem
  nameWithType: ArraySegmentExtensions.IncludesLastArrayItem
  fullName: Celestial.UIToolkit.Extensions.ArraySegmentExtensions.IncludesLastArrayItem
