### YamlMime:ManagedReference
items:
- uid: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1
  commentId: T:Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1
  id: EasingFromToByAnimationBase`1
  parent: Celestial.UIToolkit.Media.Animations
  children:
  - Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.CreateFromTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
  - Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.CreateToTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
  - Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.EasingFunction
  - Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.EasingFunctionProperty
  - Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.InterpolateValue(`0,`0,System.Double)
  - Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.InterpolateValueCore(`0,`0,System.Double)
  langs:
  - csharp
  - vb
  name: EasingFromToByAnimationBase<T>
  nameWithType: EasingFromToByAnimationBase<T>
  fullName: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase<T>
  type: Class
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/EasingFromToByAnimationBase.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: EasingFromToByAnimationBase
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/EasingFromToByAnimationBase.cs
    startLine: 13
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nDefines an abstract base class for a From/To/By animation,\nwhich, in comparison to the <xref href=\"Celestial.UIToolkit.Media.Animations.FromToByAnimationBase%601\" data-throw-if-not-resolved=\"false\"></xref>,\nadditionally uses an easing function.\n"
  example: []
  syntax:
    content: 'public abstract class EasingFromToByAnimationBase<T> : FromToByAnimationBase<T>, ISealable, IAnimatable, DUCE.IResource, IVisualTransitionProvider'
    typeParameters:
    - id: T
      description: The type which is being animated by the animation.
    content.vb: >-
      Public MustInherit Class EasingFromToByAnimationBase(Of T)

          Inherits FromToByAnimationBase(Of T)

          Implements ISealable, IAnimatable, DUCE.IResource, IVisualTransitionProvider
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Animation.Timeline
  - System.Windows.Media.Animation.AnimationTimeline
  - Celestial.UIToolkit.Media.Animations.AnimationBase{{T}}
  - Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}
  derivedClasses:
  - Celestial.UIToolkit.Media.Animations.BrushAnimation
  implements:
  - System.Windows.Media.Animation.IAnimatable
  - Celestial.UIToolkit.Xaml.IVisualTransitionProvider
  inheritedMembers:
  - Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.FromProperty
  - Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.ByProperty
  - Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.ToProperty
  - Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.From
  - Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.To
  - Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.By
  - Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.IsAdditive
  - Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.IsCumulative
  - Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.GetCurrentValueCore({T},{T},Celestial.UIToolkit.Media.Animations.IAnimationClock)
  - Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.ValidateAnimationValues({T},{T})
  - Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.AddValues({T},{T})
  - Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.SubtractValues({T},{T})
  - Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.ScaleValue({T},System.Double)
  - Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.SupportsTimeline(System.Windows.Media.Animation.Timeline)
  - Celestial.UIToolkit.Media.Animations.AnimationBase{{T}}.TargetPropertyType
  - Celestial.UIToolkit.Media.Animations.AnimationBase{{T}}.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  - Celestial.UIToolkit.Media.Animations.AnimationBase{{T}}.GetCurrentValue(System.Object,System.Object,Celestial.UIToolkit.Media.Animations.IAnimationClock)
  - System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty
  - System.Windows.Media.Animation.AnimationTimeline.Clone
  - System.Windows.Media.Animation.AnimationTimeline.AllocateClock
  - System.Windows.Media.Animation.AnimationTimeline.CreateClock
  - System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault
  - System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.AutoReverseProperty
  - System.Windows.Media.Animation.Timeline.BeginTimeProperty
  - System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  - System.Windows.Media.Animation.Timeline.DurationProperty
  - System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  - System.Windows.Media.Animation.Timeline.NameProperty
  - System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  - System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  - System.Windows.Media.Animation.Timeline.CloneCurrentValue
  - System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  - System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  - System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  - System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.Timeline.AccelerationRatio
  - System.Windows.Media.Animation.Timeline.AutoReverse
  - System.Windows.Media.Animation.Timeline.BeginTime
  - System.Windows.Media.Animation.Timeline.DecelerationRatio
  - System.Windows.Media.Animation.Timeline.Duration
  - System.Windows.Media.Animation.Timeline.FillBehavior
  - System.Windows.Media.Animation.Timeline.Name
  - System.Windows.Media.Animation.Timeline.RepeatBehavior
  - System.Windows.Media.Animation.Timeline.SpeedRatio
  - System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  - System.Windows.Media.Animation.Timeline.Completed
  - System.Windows.Media.Animation.Timeline.RemoveRequested
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.CreateInstanceCore
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.Changed
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - System.Windows.DependencyObject.Celestial.UIToolkit.Extensions.DependencyObjectExtensions.HasVisualAncestor(System.Windows.DependencyObject)
  - System.Windows.DependencyObject.Celestial.UIToolkit.Extensions.DependencyObjectExtensions.RemoveLogicalChild(System.Windows.UIElement)
  - System.Windows.DependencyObject.Celestial.UIToolkit.Extensions.DependencyPropertyExtensions.IsDependencyPropertySet(System.Windows.DependencyProperty)
  nameWithType.vb: EasingFromToByAnimationBase(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase(Of T)
  name.vb: EasingFromToByAnimationBase(Of T)
- uid: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.EasingFunctionProperty
  commentId: F:Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.EasingFunctionProperty
  id: EasingFunctionProperty
  parent: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1
  langs:
  - csharp
  - vb
  name: EasingFunctionProperty
  nameWithType: EasingFromToByAnimationBase<T>.EasingFunctionProperty
  fullName: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase<T>.EasingFunctionProperty
  type: Field
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/EasingFromToByAnimationBase.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: EasingFunctionProperty
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/EasingFromToByAnimationBase.cs
    startLine: 19
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nIdentifies the <xref href=\"Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase%601.EasingFunction\" data-throw-if-not-resolved=\"false\"></xref> dependency property.\n"
  example: []
  syntax:
    content: public static readonly DependencyProperty EasingFunctionProperty
    return:
      type: System.Windows.DependencyProperty
    content.vb: Public Shared ReadOnly EasingFunctionProperty As DependencyProperty
  nameWithType.vb: EasingFromToByAnimationBase(Of T).EasingFunctionProperty
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
  fullName.vb: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase(Of T).EasingFunctionProperty
- uid: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.EasingFunction
  commentId: P:Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.EasingFunction
  id: EasingFunction
  parent: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1
  langs:
  - csharp
  - vb
  name: EasingFunction
  nameWithType: EasingFromToByAnimationBase<T>.EasingFunction
  fullName: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase<T>.EasingFunction
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/EasingFromToByAnimationBase.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: EasingFunction
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/EasingFromToByAnimationBase.cs
    startLine: 25
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nGets or sets the easing function applied to this animation.\n"
  example: []
  syntax:
    content: public IEasingFunction EasingFunction { get; set; }
    parameters: []
    return:
      type: System.Windows.Media.Animation.IEasingFunction
    content.vb: Public Property EasingFunction As IEasingFunction
  overload: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.EasingFunction*
  nameWithType.vb: EasingFromToByAnimationBase(Of T).EasingFunction
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase(Of T).EasingFunction
- uid: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.InterpolateValue(`0,`0,System.Double)
  commentId: M:Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.InterpolateValue(`0,`0,System.Double)
  id: InterpolateValue(`0,`0,System.Double)
  parent: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1
  langs:
  - csharp
  - vb
  name: InterpolateValue(T, T, Double)
  nameWithType: EasingFromToByAnimationBase<T>.InterpolateValue(T, T, Double)
  fullName: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase<T>.InterpolateValue(T, T, System.Double)
  type: Method
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/EasingFromToByAnimationBase.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: InterpolateValue
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/EasingFromToByAnimationBase.cs
    startLine: 43
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nApplies the <xref href=\"Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase%601.EasingFunction\" data-throw-if-not-resolved=\"false\"></xref> to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">progress</code>\nand then calls <xref href=\"Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase%601.InterpolateValueCore(%600%2c%600%2cSystem.Double)\" data-throw-if-not-resolved=\"false\"></xref>,\nto get the desired interpolation result.\n"
  example: []
  syntax:
    content: protected override sealed T InterpolateValue(T from, T to, double progress)
    parameters:
    - id: from
      type: '{T}'
      description: The value from which the animation starts.
    - id: to
      type: '{T}'
      description: The value at which the animation ends.
    - id: progress
      type: System.Double
      description: "\nA value between 0.0 and 1.0, inclusive, that specifies the percentage of time\nthat has elapsed during this animation.\n"
    return:
      type: '{T}'
      description: The output value of the interpolation, given the specified values.
    content.vb: Protected NotOverridable Overrides Function InterpolateValue(from As T, to As T, progress As Double) As T
  overridden: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.InterpolateValue({T},{T},System.Double)
  overload: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.InterpolateValue*
  nameWithType.vb: EasingFromToByAnimationBase(Of T).InterpolateValue(T, T, Double)
  modifiers.csharp:
  - protected
  - override
  - sealed
  modifiers.vb:
  - Protected
  - Overrides
  - NotOverridable
  fullName.vb: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase(Of T).InterpolateValue(T, T, System.Double)
- uid: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.InterpolateValueCore(`0,`0,System.Double)
  commentId: M:Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.InterpolateValueCore(`0,`0,System.Double)
  id: InterpolateValueCore(`0,`0,System.Double)
  parent: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1
  langs:
  - csharp
  - vb
  name: InterpolateValueCore(T, T, Double)
  nameWithType: EasingFromToByAnimationBase<T>.InterpolateValueCore(T, T, Double)
  fullName: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase<T>.InterpolateValueCore(T, T, System.Double)
  type: Method
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/EasingFromToByAnimationBase.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: InterpolateValueCore
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/EasingFromToByAnimationBase.cs
    startLine: 64
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nReturns the result of the interpolation of the two <code data-dev-comment-type=\"paramref\" class=\"paramref\">from</code> and <code data-dev-comment-type=\"paramref\" class=\"paramref\">to</code>\nvalues at the provided progress increment.\n"
  example: []
  syntax:
    content: protected abstract T InterpolateValueCore(T from, T to, double progress)
    parameters:
    - id: from
      type: '{T}'
      description: The value from which the animation starts.
    - id: to
      type: '{T}'
      description: The value at which the animation ends.
    - id: progress
      type: System.Double
      description: "\nA value between 0.0 and 1.0, inclusive, that specifies the percentage of time\nthat has elapsed during this animation.\nThe local <xref href=\"Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase%601.EasingFunction\" data-throw-if-not-resolved=\"false\"></xref> is already applied to this value.\n"
    return:
      type: '{T}'
      description: The output value of the interpolation, given the specified values.
    content.vb: Protected MustOverride Function InterpolateValueCore(from As T, to As T, progress As Double) As T
  overload: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.InterpolateValueCore*
  nameWithType.vb: EasingFromToByAnimationBase(Of T).InterpolateValueCore(T, T, Double)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase(Of T).InterpolateValueCore(T, T, System.Double)
- uid: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.CreateFromTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
  commentId: M:Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.CreateFromTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
  id: CreateFromTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
  parent: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1
  langs:
  - csharp
  - vb
  name: CreateFromTransitionTimeline(Timeline, IEasingFunction)
  nameWithType: EasingFromToByAnimationBase<T>.CreateFromTransitionTimeline(Timeline, IEasingFunction)
  fullName: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase<T>.CreateFromTransitionTimeline(System.Windows.Media.Animation.Timeline, System.Windows.Media.Animation.IEasingFunction)
  type: Method
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/EasingFromToByAnimationBase.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: CreateFromTransitionTimeline
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/EasingFromToByAnimationBase.cs
    startLine: 84
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nCalled when the <xref href=\"Celestial.UIToolkit.Xaml.ExtendedVisualStateManager\" data-throw-if-not-resolved=\"false\"></xref> transitions away from\nthe element.\nThe timeline which gets returned by this method is then used as a transitioning\nanimation.\n"
  example: []
  syntax:
    content: public override Timeline CreateFromTransitionTimeline(Timeline fromTimeline, IEasingFunction easingFunction)
    parameters:
    - id: fromTimeline
      type: System.Windows.Media.Animation.Timeline
      description: "\nThe animation for which a visual transition timeline should be generated.\nThe VisualStateManager wants to transition away from this timeline.\nBy default, this can only be an animation of the same type as this class.\n"
    - id: easingFunction
      type: System.Windows.Media.Animation.IEasingFunction
      description: "\nAn easing function to be applied to the resulting timeline.\nCan be null.\n"
    return:
      type: System.Windows.Media.Animation.Timeline
      description: "\nA <xref href=\"System.Windows.Media.Animation.Timeline\" data-throw-if-not-resolved=\"false\"></xref> which displays a visual transition away from this element.\n"
    content.vb: Public Overrides Function CreateFromTransitionTimeline(fromTimeline As Timeline, easingFunction As IEasingFunction) As Timeline
  overridden: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.CreateFromTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
  overload: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.CreateFromTransitionTimeline*
  nameWithType.vb: EasingFromToByAnimationBase(Of T).CreateFromTransitionTimeline(Timeline, IEasingFunction)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase(Of T).CreateFromTransitionTimeline(System.Windows.Media.Animation.Timeline, System.Windows.Media.Animation.IEasingFunction)
- uid: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.CreateToTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
  commentId: M:Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.CreateToTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
  id: CreateToTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
  parent: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1
  langs:
  - csharp
  - vb
  name: CreateToTransitionTimeline(Timeline, IEasingFunction)
  nameWithType: EasingFromToByAnimationBase<T>.CreateToTransitionTimeline(Timeline, IEasingFunction)
  fullName: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase<T>.CreateToTransitionTimeline(System.Windows.Media.Animation.Timeline, System.Windows.Media.Animation.IEasingFunction)
  type: Method
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/EasingFromToByAnimationBase.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: CreateToTransitionTimeline
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/EasingFromToByAnimationBase.cs
    startLine: 108
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nCalled when the <xref href=\"Celestial.UIToolkit.Xaml.ExtendedVisualStateManager\" data-throw-if-not-resolved=\"false\"></xref> transitions to the element.\nThe timeline which gets returned by this method is then used as a transitioning animation.\n"
  example: []
  syntax:
    content: public override Timeline CreateToTransitionTimeline(Timeline toTimeline, IEasingFunction easingFunction)
    parameters:
    - id: toTimeline
      type: System.Windows.Media.Animation.Timeline
      description: "\nThe animation, for which a visual transition timeline should be generated.\nThe VisualStateManager wants to transition to this timeline.\nBy default, this can only be an animation of the same type as this class.\n"
    - id: easingFunction
      type: System.Windows.Media.Animation.IEasingFunction
      description: "\nAn easing function to be applied to the resulting timeline.\nCan be null.\n"
    return:
      type: System.Windows.Media.Animation.Timeline
      description: "\nA <xref href=\"System.Windows.Media.Animation.Timeline\" data-throw-if-not-resolved=\"false\"></xref> which displays a visual transition to this element.\n"
    content.vb: Public Overrides Function CreateToTransitionTimeline(toTimeline As Timeline, easingFunction As IEasingFunction) As Timeline
  overridden: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.CreateToTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
  overload: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.CreateToTransitionTimeline*
  nameWithType.vb: EasingFromToByAnimationBase(Of T).CreateToTransitionTimeline(Timeline, IEasingFunction)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase(Of T).CreateToTransitionTimeline(System.Windows.Media.Animation.Timeline, System.Windows.Media.Animation.IEasingFunction)
references:
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1
  commentId: T:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1
  name: FromToByAnimationBase<T>
  nameWithType: FromToByAnimationBase<T>
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>
  nameWithType.vb: FromToByAnimationBase(Of T)
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T)
  name.vb: FromToByAnimationBase(Of T)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1
    name: FromToByAnimationBase
    nameWithType: FromToByAnimationBase
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1
    name: FromToByAnimationBase
    nameWithType: FromToByAnimationBase
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations
  commentId: N:Celestial.UIToolkit.Media.Animations
  name: Celestial.UIToolkit.Media.Animations
  nameWithType: Celestial.UIToolkit.Media.Animations
  fullName: Celestial.UIToolkit.Media.Animations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Threading.DispatcherObject
  commentId: T:System.Windows.Threading.DispatcherObject
  parent: System.Windows.Threading
  isExternal: true
  name: DispatcherObject
  nameWithType: DispatcherObject
  fullName: System.Windows.Threading.DispatcherObject
- uid: System.Windows.DependencyObject
  commentId: T:System.Windows.DependencyObject
  parent: System.Windows
  isExternal: true
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Freezable
  commentId: T:System.Windows.Freezable
  parent: System.Windows
  isExternal: true
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.Animatable
  commentId: T:System.Windows.Media.Animation.Animatable
  parent: System.Windows.Media.Animation
  isExternal: true
  name: Animatable
  nameWithType: Animatable
  fullName: System.Windows.Media.Animation.Animatable
- uid: System.Windows.Media.Animation.Timeline
  commentId: T:System.Windows.Media.Animation.Timeline
  parent: System.Windows.Media.Animation
  isExternal: true
  name: Timeline
  nameWithType: Timeline
  fullName: System.Windows.Media.Animation.Timeline
- uid: System.Windows.Media.Animation.AnimationTimeline
  commentId: T:System.Windows.Media.Animation.AnimationTimeline
  parent: System.Windows.Media.Animation
  isExternal: true
  name: AnimationTimeline
  nameWithType: AnimationTimeline
  fullName: System.Windows.Media.Animation.AnimationTimeline
- uid: Celestial.UIToolkit.Media.Animations.AnimationBase{{T}}
  commentId: T:Celestial.UIToolkit.Media.Animations.AnimationBase{`0}
  parent: Celestial.UIToolkit.Media.Animations
  definition: Celestial.UIToolkit.Media.Animations.AnimationBase`1
  name: AnimationBase<T>
  nameWithType: AnimationBase<T>
  fullName: Celestial.UIToolkit.Media.Animations.AnimationBase<T>
  nameWithType.vb: AnimationBase(Of T)
  fullName.vb: Celestial.UIToolkit.Media.Animations.AnimationBase(Of T)
  name.vb: AnimationBase(Of T)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.AnimationBase`1
    name: AnimationBase
    nameWithType: AnimationBase
    fullName: Celestial.UIToolkit.Media.Animations.AnimationBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.AnimationBase`1
    name: AnimationBase
    nameWithType: AnimationBase
    fullName: Celestial.UIToolkit.Media.Animations.AnimationBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}
  commentId: T:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{`0}
  parent: Celestial.UIToolkit.Media.Animations
  definition: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1
  name: FromToByAnimationBase<T>
  nameWithType: FromToByAnimationBase<T>
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>
  nameWithType.vb: FromToByAnimationBase(Of T)
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T)
  name.vb: FromToByAnimationBase(Of T)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1
    name: FromToByAnimationBase
    nameWithType: FromToByAnimationBase
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1
    name: FromToByAnimationBase
    nameWithType: FromToByAnimationBase
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.IAnimatable
  commentId: T:System.Windows.Media.Animation.IAnimatable
  parent: System.Windows.Media.Animation
  isExternal: true
  name: IAnimatable
  nameWithType: IAnimatable
  fullName: System.Windows.Media.Animation.IAnimatable
- uid: Celestial.UIToolkit.Xaml.IVisualTransitionProvider
  commentId: T:Celestial.UIToolkit.Xaml.IVisualTransitionProvider
  parent: Celestial.UIToolkit.Xaml
  name: IVisualTransitionProvider
  nameWithType: IVisualTransitionProvider
  fullName: Celestial.UIToolkit.Xaml.IVisualTransitionProvider
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.FromProperty
  commentId: F:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{`0}.FromProperty
  parent: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}
  definition: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.FromProperty
  name: FromProperty
  nameWithType: FromToByAnimationBase<T>.FromProperty
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.FromProperty
  nameWithType.vb: FromToByAnimationBase(Of T).FromProperty
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).FromProperty
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.ByProperty
  commentId: F:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{`0}.ByProperty
  parent: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}
  definition: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.ByProperty
  name: ByProperty
  nameWithType: FromToByAnimationBase<T>.ByProperty
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.ByProperty
  nameWithType.vb: FromToByAnimationBase(Of T).ByProperty
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).ByProperty
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.ToProperty
  commentId: F:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{`0}.ToProperty
  parent: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}
  definition: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.ToProperty
  name: ToProperty
  nameWithType: FromToByAnimationBase<T>.ToProperty
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.ToProperty
  nameWithType.vb: FromToByAnimationBase(Of T).ToProperty
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).ToProperty
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.From
  commentId: P:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{`0}.From
  parent: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}
  definition: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.From
  name: From
  nameWithType: FromToByAnimationBase<T>.From
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.From
  nameWithType.vb: FromToByAnimationBase(Of T).From
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).From
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.To
  commentId: P:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{`0}.To
  parent: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}
  definition: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.To
  name: To
  nameWithType: FromToByAnimationBase<T>.To
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.To
  nameWithType.vb: FromToByAnimationBase(Of T).To
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).To
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.By
  commentId: P:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{`0}.By
  parent: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}
  definition: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.By
  name: By
  nameWithType: FromToByAnimationBase<T>.By
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.By
  nameWithType.vb: FromToByAnimationBase(Of T).By
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).By
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.IsAdditive
  commentId: P:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{`0}.IsAdditive
  parent: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}
  definition: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.IsAdditive
  name: IsAdditive
  nameWithType: FromToByAnimationBase<T>.IsAdditive
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.IsAdditive
  nameWithType.vb: FromToByAnimationBase(Of T).IsAdditive
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).IsAdditive
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.IsCumulative
  commentId: P:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{`0}.IsCumulative
  parent: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}
  definition: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.IsCumulative
  name: IsCumulative
  nameWithType: FromToByAnimationBase<T>.IsCumulative
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.IsCumulative
  nameWithType.vb: FromToByAnimationBase(Of T).IsCumulative
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).IsCumulative
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.GetCurrentValueCore({T},{T},Celestial.UIToolkit.Media.Animations.IAnimationClock)
  commentId: M:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{`0}.GetCurrentValueCore(`0,`0,Celestial.UIToolkit.Media.Animations.IAnimationClock)
  parent: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}
  definition: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.GetCurrentValueCore(`0,`0,Celestial.UIToolkit.Media.Animations.IAnimationClock)
  name: GetCurrentValueCore(T, T, IAnimationClock)
  nameWithType: FromToByAnimationBase<T>.GetCurrentValueCore(T, T, IAnimationClock)
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.GetCurrentValueCore(T, T, Celestial.UIToolkit.Media.Animations.IAnimationClock)
  nameWithType.vb: FromToByAnimationBase(Of T).GetCurrentValueCore(T, T, IAnimationClock)
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).GetCurrentValueCore(T, T, Celestial.UIToolkit.Media.Animations.IAnimationClock)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.GetCurrentValueCore(`0,`0,Celestial.UIToolkit.Media.Animations.IAnimationClock)
    name: GetCurrentValueCore
    nameWithType: FromToByAnimationBase<T>.GetCurrentValueCore
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.GetCurrentValueCore
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Celestial.UIToolkit.Media.Animations.IAnimationClock
    name: IAnimationClock
    nameWithType: IAnimationClock
    fullName: Celestial.UIToolkit.Media.Animations.IAnimationClock
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.GetCurrentValueCore(`0,`0,Celestial.UIToolkit.Media.Animations.IAnimationClock)
    name: GetCurrentValueCore
    nameWithType: FromToByAnimationBase(Of T).GetCurrentValueCore
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).GetCurrentValueCore
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Celestial.UIToolkit.Media.Animations.IAnimationClock
    name: IAnimationClock
    nameWithType: IAnimationClock
    fullName: Celestial.UIToolkit.Media.Animations.IAnimationClock
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.ValidateAnimationValues({T},{T})
  commentId: M:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{`0}.ValidateAnimationValues(`0,`0)
  parent: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}
  definition: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.ValidateAnimationValues(`0,`0)
  name: ValidateAnimationValues(T, T)
  nameWithType: FromToByAnimationBase<T>.ValidateAnimationValues(T, T)
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.ValidateAnimationValues(T, T)
  nameWithType.vb: FromToByAnimationBase(Of T).ValidateAnimationValues(T, T)
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).ValidateAnimationValues(T, T)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.ValidateAnimationValues(`0,`0)
    name: ValidateAnimationValues
    nameWithType: FromToByAnimationBase<T>.ValidateAnimationValues
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.ValidateAnimationValues
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.ValidateAnimationValues(`0,`0)
    name: ValidateAnimationValues
    nameWithType: FromToByAnimationBase(Of T).ValidateAnimationValues
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).ValidateAnimationValues
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.AddValues({T},{T})
  commentId: M:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{`0}.AddValues(`0,`0)
  parent: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}
  definition: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.AddValues(`0,`0)
  name: AddValues(T, T)
  nameWithType: FromToByAnimationBase<T>.AddValues(T, T)
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.AddValues(T, T)
  nameWithType.vb: FromToByAnimationBase(Of T).AddValues(T, T)
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).AddValues(T, T)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.AddValues(`0,`0)
    name: AddValues
    nameWithType: FromToByAnimationBase<T>.AddValues
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.AddValues
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.AddValues(`0,`0)
    name: AddValues
    nameWithType: FromToByAnimationBase(Of T).AddValues
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).AddValues
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.SubtractValues({T},{T})
  commentId: M:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{`0}.SubtractValues(`0,`0)
  parent: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}
  definition: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.SubtractValues(`0,`0)
  name: SubtractValues(T, T)
  nameWithType: FromToByAnimationBase<T>.SubtractValues(T, T)
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.SubtractValues(T, T)
  nameWithType.vb: FromToByAnimationBase(Of T).SubtractValues(T, T)
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).SubtractValues(T, T)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.SubtractValues(`0,`0)
    name: SubtractValues
    nameWithType: FromToByAnimationBase<T>.SubtractValues
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.SubtractValues
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.SubtractValues(`0,`0)
    name: SubtractValues
    nameWithType: FromToByAnimationBase(Of T).SubtractValues
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).SubtractValues
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.ScaleValue({T},System.Double)
  commentId: M:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{`0}.ScaleValue(`0,System.Double)
  parent: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}
  definition: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.ScaleValue(`0,System.Double)
  name: ScaleValue(T, Double)
  nameWithType: FromToByAnimationBase<T>.ScaleValue(T, Double)
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.ScaleValue(T, System.Double)
  nameWithType.vb: FromToByAnimationBase(Of T).ScaleValue(T, Double)
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).ScaleValue(T, System.Double)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.ScaleValue(`0,System.Double)
    name: ScaleValue
    nameWithType: FromToByAnimationBase<T>.ScaleValue
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.ScaleValue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.ScaleValue(`0,System.Double)
    name: ScaleValue
    nameWithType: FromToByAnimationBase(Of T).ScaleValue
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).ScaleValue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.SupportsTimeline(System.Windows.Media.Animation.Timeline)
  commentId: M:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{`0}.SupportsTimeline(System.Windows.Media.Animation.Timeline)
  parent: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}
  definition: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.SupportsTimeline(System.Windows.Media.Animation.Timeline)
  name: SupportsTimeline(Timeline)
  nameWithType: FromToByAnimationBase<T>.SupportsTimeline(Timeline)
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.SupportsTimeline(System.Windows.Media.Animation.Timeline)
  nameWithType.vb: FromToByAnimationBase(Of T).SupportsTimeline(Timeline)
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).SupportsTimeline(System.Windows.Media.Animation.Timeline)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.SupportsTimeline(System.Windows.Media.Animation.Timeline)
    name: SupportsTimeline
    nameWithType: FromToByAnimationBase<T>.SupportsTimeline
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.SupportsTimeline
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Media.Animation.Timeline
    name: Timeline
    nameWithType: Timeline
    fullName: System.Windows.Media.Animation.Timeline
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.SupportsTimeline(System.Windows.Media.Animation.Timeline)
    name: SupportsTimeline
    nameWithType: FromToByAnimationBase(Of T).SupportsTimeline
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).SupportsTimeline
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Media.Animation.Timeline
    name: Timeline
    nameWithType: Timeline
    fullName: System.Windows.Media.Animation.Timeline
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.AnimationBase{{T}}.TargetPropertyType
  commentId: P:Celestial.UIToolkit.Media.Animations.AnimationBase{`0}.TargetPropertyType
  parent: Celestial.UIToolkit.Media.Animations.AnimationBase{{T}}
  definition: Celestial.UIToolkit.Media.Animations.AnimationBase`1.TargetPropertyType
  name: TargetPropertyType
  nameWithType: AnimationBase<T>.TargetPropertyType
  fullName: Celestial.UIToolkit.Media.Animations.AnimationBase<T>.TargetPropertyType
  nameWithType.vb: AnimationBase(Of T).TargetPropertyType
  fullName.vb: Celestial.UIToolkit.Media.Animations.AnimationBase(Of T).TargetPropertyType
- uid: Celestial.UIToolkit.Media.Animations.AnimationBase{{T}}.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  commentId: M:Celestial.UIToolkit.Media.Animations.AnimationBase{`0}.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  parent: Celestial.UIToolkit.Media.Animations.AnimationBase{{T}}
  definition: Celestial.UIToolkit.Media.Animations.AnimationBase`1.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  name: GetCurrentValue(Object, Object, AnimationClock)
  nameWithType: AnimationBase<T>.GetCurrentValue(Object, Object, AnimationClock)
  fullName: Celestial.UIToolkit.Media.Animations.AnimationBase<T>.GetCurrentValue(System.Object, System.Object, System.Windows.Media.Animation.AnimationClock)
  nameWithType.vb: AnimationBase(Of T).GetCurrentValue(Object, Object, AnimationClock)
  fullName.vb: Celestial.UIToolkit.Media.Animations.AnimationBase(Of T).GetCurrentValue(System.Object, System.Object, System.Windows.Media.Animation.AnimationClock)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.AnimationBase`1.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
    name: GetCurrentValue
    nameWithType: AnimationBase<T>.GetCurrentValue
    fullName: Celestial.UIToolkit.Media.Animations.AnimationBase<T>.GetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.AnimationClock
    name: AnimationClock
    nameWithType: AnimationClock
    fullName: System.Windows.Media.Animation.AnimationClock
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.AnimationBase`1.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
    name: GetCurrentValue
    nameWithType: AnimationBase(Of T).GetCurrentValue
    fullName: Celestial.UIToolkit.Media.Animations.AnimationBase(Of T).GetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.AnimationClock
    name: AnimationClock
    nameWithType: AnimationClock
    fullName: System.Windows.Media.Animation.AnimationClock
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.AnimationBase{{T}}.GetCurrentValue(System.Object,System.Object,Celestial.UIToolkit.Media.Animations.IAnimationClock)
  commentId: M:Celestial.UIToolkit.Media.Animations.AnimationBase{`0}.GetCurrentValue(System.Object,System.Object,Celestial.UIToolkit.Media.Animations.IAnimationClock)
  parent: Celestial.UIToolkit.Media.Animations.AnimationBase{{T}}
  definition: Celestial.UIToolkit.Media.Animations.AnimationBase`1.GetCurrentValue(System.Object,System.Object,Celestial.UIToolkit.Media.Animations.IAnimationClock)
  name: GetCurrentValue(Object, Object, IAnimationClock)
  nameWithType: AnimationBase<T>.GetCurrentValue(Object, Object, IAnimationClock)
  fullName: Celestial.UIToolkit.Media.Animations.AnimationBase<T>.GetCurrentValue(System.Object, System.Object, Celestial.UIToolkit.Media.Animations.IAnimationClock)
  nameWithType.vb: AnimationBase(Of T).GetCurrentValue(Object, Object, IAnimationClock)
  fullName.vb: Celestial.UIToolkit.Media.Animations.AnimationBase(Of T).GetCurrentValue(System.Object, System.Object, Celestial.UIToolkit.Media.Animations.IAnimationClock)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.AnimationBase`1.GetCurrentValue(System.Object,System.Object,Celestial.UIToolkit.Media.Animations.IAnimationClock)
    name: GetCurrentValue
    nameWithType: AnimationBase<T>.GetCurrentValue
    fullName: Celestial.UIToolkit.Media.Animations.AnimationBase<T>.GetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Celestial.UIToolkit.Media.Animations.IAnimationClock
    name: IAnimationClock
    nameWithType: IAnimationClock
    fullName: Celestial.UIToolkit.Media.Animations.IAnimationClock
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.AnimationBase`1.GetCurrentValue(System.Object,System.Object,Celestial.UIToolkit.Media.Animations.IAnimationClock)
    name: GetCurrentValue
    nameWithType: AnimationBase(Of T).GetCurrentValue
    fullName: Celestial.UIToolkit.Media.Animations.AnimationBase(Of T).GetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Celestial.UIToolkit.Media.Animations.IAnimationClock
    name: IAnimationClock
    nameWithType: IAnimationClock
    fullName: Celestial.UIToolkit.Media.Animations.IAnimationClock
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty
  commentId: F:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty
  parent: System.Windows.Media.Animation.AnimationTimeline
  isExternal: true
  name: IsAdditiveProperty
  nameWithType: AnimationTimeline.IsAdditiveProperty
  fullName: System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty
- uid: System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty
  commentId: F:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty
  parent: System.Windows.Media.Animation.AnimationTimeline
  isExternal: true
  name: IsCumulativeProperty
  nameWithType: AnimationTimeline.IsCumulativeProperty
  fullName: System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty
- uid: System.Windows.Media.Animation.AnimationTimeline.Clone
  commentId: M:System.Windows.Media.Animation.AnimationTimeline.Clone
  parent: System.Windows.Media.Animation.AnimationTimeline
  isExternal: true
  name: Clone()
  nameWithType: AnimationTimeline.Clone()
  fullName: System.Windows.Media.Animation.AnimationTimeline.Clone()
  spec.csharp:
  - uid: System.Windows.Media.Animation.AnimationTimeline.Clone
    name: Clone
    nameWithType: AnimationTimeline.Clone
    fullName: System.Windows.Media.Animation.AnimationTimeline.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Media.Animation.AnimationTimeline.Clone
    name: Clone
    nameWithType: AnimationTimeline.Clone
    fullName: System.Windows.Media.Animation.AnimationTimeline.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.AnimationTimeline.AllocateClock
  commentId: M:System.Windows.Media.Animation.AnimationTimeline.AllocateClock
  parent: System.Windows.Media.Animation.AnimationTimeline
  isExternal: true
  name: AllocateClock()
  nameWithType: AnimationTimeline.AllocateClock()
  fullName: System.Windows.Media.Animation.AnimationTimeline.AllocateClock()
  spec.csharp:
  - uid: System.Windows.Media.Animation.AnimationTimeline.AllocateClock
    name: AllocateClock
    nameWithType: AnimationTimeline.AllocateClock
    fullName: System.Windows.Media.Animation.AnimationTimeline.AllocateClock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Media.Animation.AnimationTimeline.AllocateClock
    name: AllocateClock
    nameWithType: AnimationTimeline.AllocateClock
    fullName: System.Windows.Media.Animation.AnimationTimeline.AllocateClock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.AnimationTimeline.CreateClock
  commentId: M:System.Windows.Media.Animation.AnimationTimeline.CreateClock
  parent: System.Windows.Media.Animation.AnimationTimeline
  isExternal: true
  name: CreateClock()
  nameWithType: AnimationTimeline.CreateClock()
  fullName: System.Windows.Media.Animation.AnimationTimeline.CreateClock()
  spec.csharp:
  - uid: System.Windows.Media.Animation.AnimationTimeline.CreateClock
    name: CreateClock
    nameWithType: AnimationTimeline.CreateClock
    fullName: System.Windows.Media.Animation.AnimationTimeline.CreateClock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Media.Animation.AnimationTimeline.CreateClock
    name: CreateClock
    nameWithType: AnimationTimeline.CreateClock
    fullName: System.Windows.Media.Animation.AnimationTimeline.CreateClock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  commentId: M:System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  parent: System.Windows.Media.Animation.AnimationTimeline
  isExternal: true
  name: GetNaturalDurationCore(Clock)
  nameWithType: AnimationTimeline.GetNaturalDurationCore(Clock)
  fullName: System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  spec.csharp:
  - uid: System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
    name: GetNaturalDurationCore
    nameWithType: AnimationTimeline.GetNaturalDurationCore
    fullName: System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Media.Animation.Clock
    name: Clock
    nameWithType: Clock
    fullName: System.Windows.Media.Animation.Clock
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
    name: GetNaturalDurationCore
    nameWithType: AnimationTimeline.GetNaturalDurationCore
    fullName: System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Media.Animation.Clock
    name: Clock
    nameWithType: Clock
    fullName: System.Windows.Media.Animation.Clock
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault
  commentId: P:System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault
  parent: System.Windows.Media.Animation.AnimationTimeline
  isExternal: true
  name: IsDestinationDefault
  nameWithType: AnimationTimeline.IsDestinationDefault
  fullName: System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault
- uid: System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  commentId: F:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: AccelerationRatioProperty
  nameWithType: Timeline.AccelerationRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
- uid: System.Windows.Media.Animation.Timeline.AutoReverseProperty
  commentId: F:System.Windows.Media.Animation.Timeline.AutoReverseProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: AutoReverseProperty
  nameWithType: Timeline.AutoReverseProperty
  fullName: System.Windows.Media.Animation.Timeline.AutoReverseProperty
- uid: System.Windows.Media.Animation.Timeline.BeginTimeProperty
  commentId: F:System.Windows.Media.Animation.Timeline.BeginTimeProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: BeginTimeProperty
  nameWithType: Timeline.BeginTimeProperty
  fullName: System.Windows.Media.Animation.Timeline.BeginTimeProperty
- uid: System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  commentId: F:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: DecelerationRatioProperty
  nameWithType: Timeline.DecelerationRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
- uid: System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  commentId: F:System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: DesiredFrameRateProperty
  nameWithType: Timeline.DesiredFrameRateProperty
  fullName: System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
- uid: System.Windows.Media.Animation.Timeline.DurationProperty
  commentId: F:System.Windows.Media.Animation.Timeline.DurationProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: DurationProperty
  nameWithType: Timeline.DurationProperty
  fullName: System.Windows.Media.Animation.Timeline.DurationProperty
- uid: System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  commentId: F:System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: FillBehaviorProperty
  nameWithType: Timeline.FillBehaviorProperty
  fullName: System.Windows.Media.Animation.Timeline.FillBehaviorProperty
- uid: System.Windows.Media.Animation.Timeline.NameProperty
  commentId: F:System.Windows.Media.Animation.Timeline.NameProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: NameProperty
  nameWithType: Timeline.NameProperty
  fullName: System.Windows.Media.Animation.Timeline.NameProperty
- uid: System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  commentId: F:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: RepeatBehaviorProperty
  nameWithType: Timeline.RepeatBehaviorProperty
  fullName: System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
- uid: System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  commentId: F:System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: SpeedRatioProperty
  nameWithType: Timeline.SpeedRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.SpeedRatioProperty
- uid: System.Windows.Media.Animation.Timeline.CloneCurrentValue
  commentId: M:System.Windows.Media.Animation.Timeline.CloneCurrentValue
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: CloneCurrentValue()
  nameWithType: Timeline.CloneCurrentValue()
  fullName: System.Windows.Media.Animation.Timeline.CloneCurrentValue()
  spec.csharp:
  - uid: System.Windows.Media.Animation.Timeline.CloneCurrentValue
    name: CloneCurrentValue
    nameWithType: Timeline.CloneCurrentValue
    fullName: System.Windows.Media.Animation.Timeline.CloneCurrentValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Media.Animation.Timeline.CloneCurrentValue
    name: CloneCurrentValue
    nameWithType: Timeline.CloneCurrentValue
    fullName: System.Windows.Media.Animation.Timeline.CloneCurrentValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  commentId: M:System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: FreezeCore(Boolean)
  nameWithType: Timeline.FreezeCore(Boolean)
  fullName: System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  spec.csharp:
  - uid: System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
    name: FreezeCore
    nameWithType: Timeline.FreezeCore
    fullName: System.Windows.Media.Animation.Timeline.FreezeCore
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
    name: FreezeCore
    nameWithType: Timeline.FreezeCore
    fullName: System.Windows.Media.Animation.Timeline.FreezeCore
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  commentId: M:System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: GetAsFrozenCore(Freezable)
  nameWithType: Timeline.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  spec.csharp:
  - uid: System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
    name: GetAsFrozenCore
    nameWithType: Timeline.GetAsFrozenCore
    fullName: System.Windows.Media.Animation.Timeline.GetAsFrozenCore
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Freezable
    name: Freezable
    nameWithType: Freezable
    fullName: System.Windows.Freezable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
    name: GetAsFrozenCore
    nameWithType: Timeline.GetAsFrozenCore
    fullName: System.Windows.Media.Animation.Timeline.GetAsFrozenCore
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Freezable
    name: Freezable
    nameWithType: Freezable
    fullName: System.Windows.Freezable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  commentId: M:System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: Timeline.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  spec.csharp:
  - uid: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
    name: GetCurrentValueAsFrozenCore
    nameWithType: Timeline.GetCurrentValueAsFrozenCore
    fullName: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Freezable
    name: Freezable
    nameWithType: Freezable
    fullName: System.Windows.Freezable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
    name: GetCurrentValueAsFrozenCore
    nameWithType: Timeline.GetCurrentValueAsFrozenCore
    fullName: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Freezable
    name: Freezable
    nameWithType: Freezable
    fullName: System.Windows.Freezable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  commentId: M:System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: GetDesiredFrameRate(Timeline)
  nameWithType: Timeline.GetDesiredFrameRate(Timeline)
  fullName: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  spec.csharp:
  - uid: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
    name: GetDesiredFrameRate
    nameWithType: Timeline.GetDesiredFrameRate
    fullName: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Media.Animation.Timeline
    name: Timeline
    nameWithType: Timeline
    fullName: System.Windows.Media.Animation.Timeline
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
    name: GetDesiredFrameRate
    nameWithType: Timeline.GetDesiredFrameRate
    fullName: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Media.Animation.Timeline
    name: Timeline
    nameWithType: Timeline
    fullName: System.Windows.Media.Animation.Timeline
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  commentId: M:System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: SetDesiredFrameRate(Timeline, Nullable<Int32>)
  nameWithType: Timeline.SetDesiredFrameRate(Timeline, Nullable<Int32>)
  fullName: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline, System.Nullable<System.Int32>)
  nameWithType.vb: Timeline.SetDesiredFrameRate(Timeline, Nullable(Of Int32))
  fullName.vb: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline, System.Nullable(Of System.Int32))
  name.vb: SetDesiredFrameRate(Timeline, Nullable(Of Int32))
  spec.csharp:
  - uid: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
    name: SetDesiredFrameRate
    nameWithType: Timeline.SetDesiredFrameRate
    fullName: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Media.Animation.Timeline
    name: Timeline
    nameWithType: Timeline
    fullName: System.Windows.Media.Animation.Timeline
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
    name: SetDesiredFrameRate
    nameWithType: Timeline.SetDesiredFrameRate
    fullName: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Media.Animation.Timeline
    name: Timeline
    nameWithType: Timeline
    fullName: System.Windows.Media.Animation.Timeline
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  commentId: M:System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: CreateClock(Boolean)
  nameWithType: Timeline.CreateClock(Boolean)
  fullName: System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  spec.csharp:
  - uid: System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
    name: CreateClock
    nameWithType: Timeline.CreateClock
    fullName: System.Windows.Media.Animation.Timeline.CreateClock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
    name: CreateClock
    nameWithType: Timeline.CreateClock
    fullName: System.Windows.Media.Animation.Timeline.CreateClock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  commentId: M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: GetNaturalDuration(Clock)
  nameWithType: Timeline.GetNaturalDuration(Clock)
  fullName: System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  spec.csharp:
  - uid: System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
    name: GetNaturalDuration
    nameWithType: Timeline.GetNaturalDuration
    fullName: System.Windows.Media.Animation.Timeline.GetNaturalDuration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Media.Animation.Clock
    name: Clock
    nameWithType: Clock
    fullName: System.Windows.Media.Animation.Clock
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
    name: GetNaturalDuration
    nameWithType: Timeline.GetNaturalDuration
    fullName: System.Windows.Media.Animation.Timeline.GetNaturalDuration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Media.Animation.Clock
    name: Clock
    nameWithType: Clock
    fullName: System.Windows.Media.Animation.Clock
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.Timeline.AccelerationRatio
  commentId: P:System.Windows.Media.Animation.Timeline.AccelerationRatio
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: AccelerationRatio
  nameWithType: Timeline.AccelerationRatio
  fullName: System.Windows.Media.Animation.Timeline.AccelerationRatio
- uid: System.Windows.Media.Animation.Timeline.AutoReverse
  commentId: P:System.Windows.Media.Animation.Timeline.AutoReverse
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: AutoReverse
  nameWithType: Timeline.AutoReverse
  fullName: System.Windows.Media.Animation.Timeline.AutoReverse
- uid: System.Windows.Media.Animation.Timeline.BeginTime
  commentId: P:System.Windows.Media.Animation.Timeline.BeginTime
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: BeginTime
  nameWithType: Timeline.BeginTime
  fullName: System.Windows.Media.Animation.Timeline.BeginTime
- uid: System.Windows.Media.Animation.Timeline.DecelerationRatio
  commentId: P:System.Windows.Media.Animation.Timeline.DecelerationRatio
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: DecelerationRatio
  nameWithType: Timeline.DecelerationRatio
  fullName: System.Windows.Media.Animation.Timeline.DecelerationRatio
- uid: System.Windows.Media.Animation.Timeline.Duration
  commentId: P:System.Windows.Media.Animation.Timeline.Duration
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: Duration
  nameWithType: Timeline.Duration
  fullName: System.Windows.Media.Animation.Timeline.Duration
- uid: System.Windows.Media.Animation.Timeline.FillBehavior
  commentId: P:System.Windows.Media.Animation.Timeline.FillBehavior
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: FillBehavior
  nameWithType: Timeline.FillBehavior
  fullName: System.Windows.Media.Animation.Timeline.FillBehavior
- uid: System.Windows.Media.Animation.Timeline.Name
  commentId: P:System.Windows.Media.Animation.Timeline.Name
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: Name
  nameWithType: Timeline.Name
  fullName: System.Windows.Media.Animation.Timeline.Name
- uid: System.Windows.Media.Animation.Timeline.RepeatBehavior
  commentId: P:System.Windows.Media.Animation.Timeline.RepeatBehavior
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: RepeatBehavior
  nameWithType: Timeline.RepeatBehavior
  fullName: System.Windows.Media.Animation.Timeline.RepeatBehavior
- uid: System.Windows.Media.Animation.Timeline.SpeedRatio
  commentId: P:System.Windows.Media.Animation.Timeline.SpeedRatio
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: SpeedRatio
  nameWithType: Timeline.SpeedRatio
  fullName: System.Windows.Media.Animation.Timeline.SpeedRatio
- uid: System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  commentId: E:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: CurrentStateInvalidated
  nameWithType: Timeline.CurrentStateInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
- uid: System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  commentId: E:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: CurrentTimeInvalidated
  nameWithType: Timeline.CurrentTimeInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
- uid: System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  commentId: E:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: CurrentGlobalSpeedInvalidated
  nameWithType: Timeline.CurrentGlobalSpeedInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
- uid: System.Windows.Media.Animation.Timeline.Completed
  commentId: E:System.Windows.Media.Animation.Timeline.Completed
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: Completed
  nameWithType: Timeline.Completed
  fullName: System.Windows.Media.Animation.Timeline.Completed
- uid: System.Windows.Media.Animation.Timeline.RemoveRequested
  commentId: E:System.Windows.Media.Animation.Timeline.RemoveRequested
  parent: System.Windows.Media.Animation.Timeline
  isExternal: true
  name: RemoveRequested
  nameWithType: Timeline.RemoveRequested
  fullName: System.Windows.Media.Animation.Timeline.RemoveRequested
- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  commentId: M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.Animatable
  isExternal: true
  name: ApplyAnimationClock(DependencyProperty, AnimationClock)
  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)
  fullName: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty, System.Windows.Media.Animation.AnimationClock)
  spec.csharp:
  - uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
    name: ApplyAnimationClock
    nameWithType: Animatable.ApplyAnimationClock
    fullName: System.Windows.Media.Animation.Animatable.ApplyAnimationClock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.AnimationClock
    name: AnimationClock
    nameWithType: AnimationClock
    fullName: System.Windows.Media.Animation.AnimationClock
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
    name: ApplyAnimationClock
    nameWithType: Animatable.ApplyAnimationClock
    fullName: System.Windows.Media.Animation.Animatable.ApplyAnimationClock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.AnimationClock
    name: AnimationClock
    nameWithType: AnimationClock
    fullName: System.Windows.Media.Animation.AnimationClock
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  commentId: M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  parent: System.Windows.Media.Animation.Animatable
  isExternal: true
  name: ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)
  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)
  fullName: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty, System.Windows.Media.Animation.AnimationClock, System.Windows.Media.Animation.HandoffBehavior)
  spec.csharp:
  - uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
    name: ApplyAnimationClock
    nameWithType: Animatable.ApplyAnimationClock
    fullName: System.Windows.Media.Animation.Animatable.ApplyAnimationClock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.AnimationClock
    name: AnimationClock
    nameWithType: AnimationClock
    fullName: System.Windows.Media.Animation.AnimationClock
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.HandoffBehavior
    name: HandoffBehavior
    nameWithType: HandoffBehavior
    fullName: System.Windows.Media.Animation.HandoffBehavior
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
    name: ApplyAnimationClock
    nameWithType: Animatable.ApplyAnimationClock
    fullName: System.Windows.Media.Animation.Animatable.ApplyAnimationClock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.AnimationClock
    name: AnimationClock
    nameWithType: AnimationClock
    fullName: System.Windows.Media.Animation.AnimationClock
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.HandoffBehavior
    name: HandoffBehavior
    nameWithType: HandoffBehavior
    fullName: System.Windows.Media.Animation.HandoffBehavior
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  commentId: M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  parent: System.Windows.Media.Animation.Animatable
  isExternal: true
  name: BeginAnimation(DependencyProperty, AnimationTimeline)
  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)
  fullName: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty, System.Windows.Media.Animation.AnimationTimeline)
  spec.csharp:
  - uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
    name: BeginAnimation
    nameWithType: Animatable.BeginAnimation
    fullName: System.Windows.Media.Animation.Animatable.BeginAnimation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.AnimationTimeline
    name: AnimationTimeline
    nameWithType: AnimationTimeline
    fullName: System.Windows.Media.Animation.AnimationTimeline
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
    name: BeginAnimation
    nameWithType: Animatable.BeginAnimation
    fullName: System.Windows.Media.Animation.Animatable.BeginAnimation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.AnimationTimeline
    name: AnimationTimeline
    nameWithType: AnimationTimeline
    fullName: System.Windows.Media.Animation.AnimationTimeline
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  commentId: M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  parent: System.Windows.Media.Animation.Animatable
  isExternal: true
  name: BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)
  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)
  fullName: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty, System.Windows.Media.Animation.AnimationTimeline, System.Windows.Media.Animation.HandoffBehavior)
  spec.csharp:
  - uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
    name: BeginAnimation
    nameWithType: Animatable.BeginAnimation
    fullName: System.Windows.Media.Animation.Animatable.BeginAnimation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.AnimationTimeline
    name: AnimationTimeline
    nameWithType: AnimationTimeline
    fullName: System.Windows.Media.Animation.AnimationTimeline
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.HandoffBehavior
    name: HandoffBehavior
    nameWithType: HandoffBehavior
    fullName: System.Windows.Media.Animation.HandoffBehavior
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
    name: BeginAnimation
    nameWithType: Animatable.BeginAnimation
    fullName: System.Windows.Media.Animation.Animatable.BeginAnimation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.AnimationTimeline
    name: AnimationTimeline
    nameWithType: AnimationTimeline
    fullName: System.Windows.Media.Animation.AnimationTimeline
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.HandoffBehavior
    name: HandoffBehavior
    nameWithType: HandoffBehavior
    fullName: System.Windows.Media.Animation.HandoffBehavior
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  parent: System.Windows.Media.Animation.Animatable
  isExternal: true
  name: GetAnimationBaseValue(DependencyProperty)
  nameWithType: Animatable.GetAnimationBaseValue(DependencyProperty)
  fullName: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
    name: GetAnimationBaseValue
    nameWithType: Animatable.GetAnimationBaseValue
    fullName: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
    name: GetAnimationBaseValue
    nameWithType: Animatable.GetAnimationBaseValue
    fullName: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  commentId: P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  parent: System.Windows.Media.Animation.Animatable
  isExternal: true
  name: HasAnimatedProperties
  nameWithType: Animatable.HasAnimatedProperties
  fullName: System.Windows.Media.Animation.Animatable.HasAnimatedProperties
- uid: System.Windows.Freezable.GetAsFrozen
  commentId: M:System.Windows.Freezable.GetAsFrozen
  parent: System.Windows.Freezable
  isExternal: true
  name: GetAsFrozen()
  nameWithType: Freezable.GetAsFrozen()
  fullName: System.Windows.Freezable.GetAsFrozen()
  spec.csharp:
  - uid: System.Windows.Freezable.GetAsFrozen
    name: GetAsFrozen
    nameWithType: Freezable.GetAsFrozen
    fullName: System.Windows.Freezable.GetAsFrozen
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Freezable.GetAsFrozen
    name: GetAsFrozen
    nameWithType: Freezable.GetAsFrozen
    fullName: System.Windows.Freezable.GetAsFrozen
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Freezable.GetCurrentValueAsFrozen
  commentId: M:System.Windows.Freezable.GetCurrentValueAsFrozen
  parent: System.Windows.Freezable
  isExternal: true
  name: GetCurrentValueAsFrozen()
  nameWithType: Freezable.GetCurrentValueAsFrozen()
  fullName: System.Windows.Freezable.GetCurrentValueAsFrozen()
  spec.csharp:
  - uid: System.Windows.Freezable.GetCurrentValueAsFrozen
    name: GetCurrentValueAsFrozen
    nameWithType: Freezable.GetCurrentValueAsFrozen
    fullName: System.Windows.Freezable.GetCurrentValueAsFrozen
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Freezable.GetCurrentValueAsFrozen
    name: GetCurrentValueAsFrozen
    nameWithType: Freezable.GetCurrentValueAsFrozen
    fullName: System.Windows.Freezable.GetCurrentValueAsFrozen
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Freezable.Freeze
  commentId: M:System.Windows.Freezable.Freeze
  parent: System.Windows.Freezable
  isExternal: true
  name: Freeze()
  nameWithType: Freezable.Freeze()
  fullName: System.Windows.Freezable.Freeze()
  spec.csharp:
  - uid: System.Windows.Freezable.Freeze
    name: Freeze
    nameWithType: Freezable.Freeze
    fullName: System.Windows.Freezable.Freeze
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Freezable.Freeze
    name: Freeze
    nameWithType: Freezable.Freeze
    fullName: System.Windows.Freezable.Freeze
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  commentId: M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.Freezable
  isExternal: true
  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)
  nameWithType: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  spec.csharp:
  - uid: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
    name: OnPropertyChanged
    nameWithType: Freezable.OnPropertyChanged
    fullName: System.Windows.Freezable.OnPropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyChangedEventArgs
    name: DependencyPropertyChangedEventArgs
    nameWithType: DependencyPropertyChangedEventArgs
    fullName: System.Windows.DependencyPropertyChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
    name: OnPropertyChanged
    nameWithType: Freezable.OnPropertyChanged
    fullName: System.Windows.Freezable.OnPropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyChangedEventArgs
    name: DependencyPropertyChangedEventArgs
    nameWithType: DependencyPropertyChangedEventArgs
    fullName: System.Windows.DependencyPropertyChangedEventArgs
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Freezable.CreateInstance
  commentId: M:System.Windows.Freezable.CreateInstance
  parent: System.Windows.Freezable
  isExternal: true
  name: CreateInstance()
  nameWithType: Freezable.CreateInstance()
  fullName: System.Windows.Freezable.CreateInstance()
  spec.csharp:
  - uid: System.Windows.Freezable.CreateInstance
    name: CreateInstance
    nameWithType: Freezable.CreateInstance
    fullName: System.Windows.Freezable.CreateInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Freezable.CreateInstance
    name: CreateInstance
    nameWithType: Freezable.CreateInstance
    fullName: System.Windows.Freezable.CreateInstance
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Freezable.CreateInstanceCore
  commentId: M:System.Windows.Freezable.CreateInstanceCore
  parent: System.Windows.Freezable
  isExternal: true
  name: CreateInstanceCore()
  nameWithType: Freezable.CreateInstanceCore()
  fullName: System.Windows.Freezable.CreateInstanceCore()
  spec.csharp:
  - uid: System.Windows.Freezable.CreateInstanceCore
    name: CreateInstanceCore
    nameWithType: Freezable.CreateInstanceCore
    fullName: System.Windows.Freezable.CreateInstanceCore
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Freezable.CreateInstanceCore
    name: CreateInstanceCore
    nameWithType: Freezable.CreateInstanceCore
    fullName: System.Windows.Freezable.CreateInstanceCore
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  commentId: M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  parent: System.Windows.Freezable
  isExternal: true
  name: CloneCore(Freezable)
  nameWithType: Freezable.CloneCore(Freezable)
  fullName: System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  spec.csharp:
  - uid: System.Windows.Freezable.CloneCore(System.Windows.Freezable)
    name: CloneCore
    nameWithType: Freezable.CloneCore
    fullName: System.Windows.Freezable.CloneCore
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Freezable
    name: Freezable
    nameWithType: Freezable
    fullName: System.Windows.Freezable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Freezable.CloneCore(System.Windows.Freezable)
    name: CloneCore
    nameWithType: Freezable.CloneCore
    fullName: System.Windows.Freezable.CloneCore
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Freezable
    name: Freezable
    nameWithType: Freezable
    fullName: System.Windows.Freezable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  commentId: M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Freezable
  isExternal: true
  name: CloneCurrentValueCore(Freezable)
  nameWithType: Freezable.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  spec.csharp:
  - uid: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
    name: CloneCurrentValueCore
    nameWithType: Freezable.CloneCurrentValueCore
    fullName: System.Windows.Freezable.CloneCurrentValueCore
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Freezable
    name: Freezable
    nameWithType: Freezable
    fullName: System.Windows.Freezable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
    name: CloneCurrentValueCore
    nameWithType: Freezable.CloneCurrentValueCore
    fullName: System.Windows.Freezable.CloneCurrentValueCore
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Freezable
    name: Freezable
    nameWithType: Freezable
    fullName: System.Windows.Freezable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Freezable.OnChanged
  commentId: M:System.Windows.Freezable.OnChanged
  parent: System.Windows.Freezable
  isExternal: true
  name: OnChanged()
  nameWithType: Freezable.OnChanged()
  fullName: System.Windows.Freezable.OnChanged()
  spec.csharp:
  - uid: System.Windows.Freezable.OnChanged
    name: OnChanged
    nameWithType: Freezable.OnChanged
    fullName: System.Windows.Freezable.OnChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Freezable.OnChanged
    name: OnChanged
    nameWithType: Freezable.OnChanged
    fullName: System.Windows.Freezable.OnChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Freezable.ReadPreamble
  commentId: M:System.Windows.Freezable.ReadPreamble
  parent: System.Windows.Freezable
  isExternal: true
  name: ReadPreamble()
  nameWithType: Freezable.ReadPreamble()
  fullName: System.Windows.Freezable.ReadPreamble()
  spec.csharp:
  - uid: System.Windows.Freezable.ReadPreamble
    name: ReadPreamble
    nameWithType: Freezable.ReadPreamble
    fullName: System.Windows.Freezable.ReadPreamble
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Freezable.ReadPreamble
    name: ReadPreamble
    nameWithType: Freezable.ReadPreamble
    fullName: System.Windows.Freezable.ReadPreamble
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Freezable.WritePreamble
  commentId: M:System.Windows.Freezable.WritePreamble
  parent: System.Windows.Freezable
  isExternal: true
  name: WritePreamble()
  nameWithType: Freezable.WritePreamble()
  fullName: System.Windows.Freezable.WritePreamble()
  spec.csharp:
  - uid: System.Windows.Freezable.WritePreamble
    name: WritePreamble
    nameWithType: Freezable.WritePreamble
    fullName: System.Windows.Freezable.WritePreamble
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Freezable.WritePreamble
    name: WritePreamble
    nameWithType: Freezable.WritePreamble
    fullName: System.Windows.Freezable.WritePreamble
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Freezable.WritePostscript
  commentId: M:System.Windows.Freezable.WritePostscript
  parent: System.Windows.Freezable
  isExternal: true
  name: WritePostscript()
  nameWithType: Freezable.WritePostscript()
  fullName: System.Windows.Freezable.WritePostscript()
  spec.csharp:
  - uid: System.Windows.Freezable.WritePostscript
    name: WritePostscript
    nameWithType: Freezable.WritePostscript
    fullName: System.Windows.Freezable.WritePostscript
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Freezable.WritePostscript
    name: WritePostscript
    nameWithType: Freezable.WritePostscript
    fullName: System.Windows.Freezable.WritePostscript
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  commentId: M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  parent: System.Windows.Freezable
  isExternal: true
  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject)
  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)
  fullName: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject, System.Windows.DependencyObject)
  spec.csharp:
  - uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
    name: OnFreezablePropertyChanged
    nameWithType: Freezable.OnFreezablePropertyChanged
    fullName: System.Windows.Freezable.OnFreezablePropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
    name: OnFreezablePropertyChanged
    nameWithType: Freezable.OnFreezablePropertyChanged
    fullName: System.Windows.Freezable.OnFreezablePropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  commentId: M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: System.Windows.Freezable
  isExternal: true
  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)
  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)
  fullName: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject, System.Windows.DependencyObject, System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
    name: OnFreezablePropertyChanged
    nameWithType: Freezable.OnFreezablePropertyChanged
    fullName: System.Windows.Freezable.OnFreezablePropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
    name: OnFreezablePropertyChanged
    nameWithType: Freezable.OnFreezablePropertyChanged
    fullName: System.Windows.Freezable.OnFreezablePropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  commentId: M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  parent: System.Windows.Freezable
  isExternal: true
  name: Freeze(Freezable, Boolean)
  nameWithType: Freezable.Freeze(Freezable, Boolean)
  fullName: System.Windows.Freezable.Freeze(System.Windows.Freezable, System.Boolean)
  spec.csharp:
  - uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
    name: Freeze
    nameWithType: Freezable.Freeze
    fullName: System.Windows.Freezable.Freeze
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Freezable
    name: Freezable
    nameWithType: Freezable
    fullName: System.Windows.Freezable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
    name: Freeze
    nameWithType: Freezable.Freeze
    fullName: System.Windows.Freezable.Freeze
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Freezable
    name: Freezable
    nameWithType: Freezable
    fullName: System.Windows.Freezable
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.Freezable.CanFreeze
  commentId: P:System.Windows.Freezable.CanFreeze
  parent: System.Windows.Freezable
  isExternal: true
  name: CanFreeze
  nameWithType: Freezable.CanFreeze
  fullName: System.Windows.Freezable.CanFreeze
- uid: System.Windows.Freezable.IsFrozen
  commentId: P:System.Windows.Freezable.IsFrozen
  parent: System.Windows.Freezable
  isExternal: true
  name: IsFrozen
  nameWithType: Freezable.IsFrozen
  fullName: System.Windows.Freezable.IsFrozen
- uid: System.Windows.Freezable.Changed
  commentId: E:System.Windows.Freezable.Changed
  parent: System.Windows.Freezable
  isExternal: true
  name: Changed
  nameWithType: Freezable.Changed
  fullName: System.Windows.Freezable.Changed
- uid: System.Windows.DependencyObject.Equals(System.Object)
  commentId: M:System.Windows.DependencyObject.Equals(System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: Equals(Object)
  nameWithType: DependencyObject.Equals(Object)
  fullName: System.Windows.DependencyObject.Equals(System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.Equals(System.Object)
    name: Equals
    nameWithType: DependencyObject.Equals
    fullName: System.Windows.DependencyObject.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.Equals(System.Object)
    name: Equals
    nameWithType: DependencyObject.Equals
    fullName: System.Windows.DependencyObject.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetHashCode
  commentId: M:System.Windows.DependencyObject.GetHashCode
  parent: System.Windows.DependencyObject
  isExternal: true
  name: GetHashCode()
  nameWithType: DependencyObject.GetHashCode()
  fullName: System.Windows.DependencyObject.GetHashCode()
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetHashCode
    name: GetHashCode
    nameWithType: DependencyObject.GetHashCode
    fullName: System.Windows.DependencyObject.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetHashCode
    name: GetHashCode
    nameWithType: DependencyObject.GetHashCode
    fullName: System.Windows.DependencyObject.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
    name: GetValue
    nameWithType: DependencyObject.GetValue
    fullName: System.Windows.DependencyObject.GetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  commentId: M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetCurrentValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)
  fullName: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
    name: SetCurrentValue
    nameWithType: DependencyObject.SetCurrentValue
    fullName: System.Windows.DependencyObject.SetCurrentValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  commentId: M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: SetValue(DependencyPropertyKey, Object)
  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)
  fullName: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey, System.Object)
  spec.csharp:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyKey
    name: DependencyPropertyKey
    nameWithType: DependencyPropertyKey
    fullName: System.Windows.DependencyPropertyKey
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
    name: SetValue
    nameWithType: DependencyObject.SetValue
    fullName: System.Windows.DependencyObject.SetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyKey
    name: DependencyPropertyKey
    nameWithType: DependencyPropertyKey
    fullName: System.Windows.DependencyPropertyKey
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  commentId: M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: ClearValue(DependencyPropertyKey)
  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)
  fullName: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyKey
    name: DependencyPropertyKey
    nameWithType: DependencyPropertyKey
    fullName: System.Windows.DependencyPropertyKey
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
    name: ClearValue
    nameWithType: DependencyObject.ClearValue
    fullName: System.Windows.DependencyObject.ClearValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyPropertyKey
    name: DependencyPropertyKey
    nameWithType: DependencyPropertyKey
    fullName: System.Windows.DependencyPropertyKey
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: CoerceValue(DependencyProperty)
  nameWithType: DependencyObject.CoerceValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
    name: CoerceValue
    nameWithType: DependencyObject.CoerceValue
    fullName: System.Windows.DependencyObject.CoerceValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: InvalidateProperty(DependencyProperty)
  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)
  fullName: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
    name: InvalidateProperty
    nameWithType: DependencyObject.InvalidateProperty
    fullName: System.Windows.DependencyObject.InvalidateProperty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
    name: InvalidateProperty
    nameWithType: DependencyObject.InvalidateProperty
    fullName: System.Windows.DependencyObject.InvalidateProperty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: ShouldSerializeProperty(DependencyProperty)
  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)
  fullName: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
    name: ShouldSerializeProperty
    nameWithType: DependencyObject.ShouldSerializeProperty
    fullName: System.Windows.DependencyObject.ShouldSerializeProperty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
    name: ShouldSerializeProperty
    nameWithType: DependencyObject.ShouldSerializeProperty
    fullName: System.Windows.DependencyObject.ShouldSerializeProperty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  commentId: M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: true
  name: ReadLocalValue(DependencyProperty)
  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)
  fullName: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
    name: ReadLocalValue
    nameWithType: DependencyObject.ReadLocalValue
    fullName: System.Windows.DependencyObject.ReadLocalValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.GetLocalValueEnumerator
  commentId: M:System.Windows.DependencyObject.GetLocalValueEnumerator
  parent: System.Windows.DependencyObject
  isExternal: true
  name: GetLocalValueEnumerator()
  nameWithType: DependencyObject.GetLocalValueEnumerator()
  fullName: System.Windows.DependencyObject.GetLocalValueEnumerator()
  spec.csharp:
  - uid: System.Windows.DependencyObject.GetLocalValueEnumerator
    name: GetLocalValueEnumerator
    nameWithType: DependencyObject.GetLocalValueEnumerator
    fullName: System.Windows.DependencyObject.GetLocalValueEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.DependencyObject.GetLocalValueEnumerator
    name: GetLocalValueEnumerator
    nameWithType: DependencyObject.GetLocalValueEnumerator
    fullName: System.Windows.DependencyObject.GetLocalValueEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.DependencyObjectType
  commentId: P:System.Windows.DependencyObject.DependencyObjectType
  parent: System.Windows.DependencyObject
  isExternal: true
  name: DependencyObjectType
  nameWithType: DependencyObject.DependencyObjectType
  fullName: System.Windows.DependencyObject.DependencyObjectType
- uid: System.Windows.DependencyObject.IsSealed
  commentId: P:System.Windows.DependencyObject.IsSealed
  parent: System.Windows.DependencyObject
  isExternal: true
  name: IsSealed
  nameWithType: DependencyObject.IsSealed
  fullName: System.Windows.DependencyObject.IsSealed
- uid: System.Windows.Threading.DispatcherObject.Dispatcher
  commentId: P:System.Windows.Threading.DispatcherObject.Dispatcher
  parent: System.Windows.Threading.DispatcherObject
  isExternal: true
  name: Dispatcher
  nameWithType: DispatcherObject.Dispatcher
  fullName: System.Windows.Threading.DispatcherObject.Dispatcher
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.Celestial.UIToolkit.Extensions.DependencyObjectExtensions.HasVisualAncestor(System.Windows.DependencyObject)
  commentId: M:Celestial.UIToolkit.Extensions.DependencyObjectExtensions.HasVisualAncestor(System.Windows.DependencyObject,System.Windows.DependencyObject)
  parent: Celestial.UIToolkit.Extensions.DependencyObjectExtensions
  definition: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.HasVisualAncestor(System.Windows.DependencyObject,System.Windows.DependencyObject)
  name: HasVisualAncestor(DependencyObject)
  nameWithType: DependencyObjectExtensions.HasVisualAncestor(DependencyObject)
  fullName: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.HasVisualAncestor(System.Windows.DependencyObject)
  spec.csharp:
  - uid: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.HasVisualAncestor(System.Windows.DependencyObject)
    name: HasVisualAncestor
    nameWithType: DependencyObjectExtensions.HasVisualAncestor
    fullName: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.HasVisualAncestor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.HasVisualAncestor(System.Windows.DependencyObject)
    name: HasVisualAncestor
    nameWithType: DependencyObjectExtensions.HasVisualAncestor
    fullName: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.HasVisualAncestor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.Celestial.UIToolkit.Extensions.DependencyObjectExtensions.RemoveLogicalChild(System.Windows.UIElement)
  commentId: M:Celestial.UIToolkit.Extensions.DependencyObjectExtensions.RemoveLogicalChild(System.Windows.DependencyObject,System.Windows.UIElement)
  parent: Celestial.UIToolkit.Extensions.DependencyObjectExtensions
  definition: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.RemoveLogicalChild(System.Windows.DependencyObject,System.Windows.UIElement)
  name: RemoveLogicalChild(UIElement)
  nameWithType: DependencyObjectExtensions.RemoveLogicalChild(UIElement)
  fullName: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.RemoveLogicalChild(System.Windows.UIElement)
  spec.csharp:
  - uid: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.RemoveLogicalChild(System.Windows.UIElement)
    name: RemoveLogicalChild
    nameWithType: DependencyObjectExtensions.RemoveLogicalChild
    fullName: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.RemoveLogicalChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.UIElement
    name: UIElement
    nameWithType: UIElement
    fullName: System.Windows.UIElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.RemoveLogicalChild(System.Windows.UIElement)
    name: RemoveLogicalChild
    nameWithType: DependencyObjectExtensions.RemoveLogicalChild
    fullName: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.RemoveLogicalChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.UIElement
    name: UIElement
    nameWithType: UIElement
    fullName: System.Windows.UIElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Windows.DependencyObject.Celestial.UIToolkit.Extensions.DependencyPropertyExtensions.IsDependencyPropertySet(System.Windows.DependencyProperty)
  commentId: M:Celestial.UIToolkit.Extensions.DependencyPropertyExtensions.IsDependencyPropertySet(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  parent: Celestial.UIToolkit.Extensions.DependencyPropertyExtensions
  definition: Celestial.UIToolkit.Extensions.DependencyPropertyExtensions.IsDependencyPropertySet(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  name: IsDependencyPropertySet(DependencyProperty)
  nameWithType: DependencyPropertyExtensions.IsDependencyPropertySet(DependencyProperty)
  fullName: Celestial.UIToolkit.Extensions.DependencyPropertyExtensions.IsDependencyPropertySet(System.Windows.DependencyProperty)
  spec.csharp:
  - uid: Celestial.UIToolkit.Extensions.DependencyPropertyExtensions.IsDependencyPropertySet(System.Windows.DependencyProperty)
    name: IsDependencyPropertySet
    nameWithType: DependencyPropertyExtensions.IsDependencyPropertySet
    fullName: Celestial.UIToolkit.Extensions.DependencyPropertyExtensions.IsDependencyPropertySet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Extensions.DependencyPropertyExtensions.IsDependencyPropertySet(System.Windows.DependencyProperty)
    name: IsDependencyPropertySet
    nameWithType: DependencyPropertyExtensions.IsDependencyPropertySet
    fullName: Celestial.UIToolkit.Extensions.DependencyPropertyExtensions.IsDependencyPropertySet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Threading
  commentId: N:System.Windows.Threading
  isExternal: true
  name: System.Windows.Threading
  nameWithType: System.Windows.Threading
  fullName: System.Windows.Threading
- uid: System.Windows
  commentId: N:System.Windows
  isExternal: true
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: System.Windows.Media.Animation
  commentId: N:System.Windows.Media.Animation
  isExternal: true
  name: System.Windows.Media.Animation
  nameWithType: System.Windows.Media.Animation
  fullName: System.Windows.Media.Animation
- uid: Celestial.UIToolkit.Media.Animations.AnimationBase`1
  commentId: T:Celestial.UIToolkit.Media.Animations.AnimationBase`1
  name: AnimationBase<T>
  nameWithType: AnimationBase<T>
  fullName: Celestial.UIToolkit.Media.Animations.AnimationBase<T>
  nameWithType.vb: AnimationBase(Of T)
  fullName.vb: Celestial.UIToolkit.Media.Animations.AnimationBase(Of T)
  name.vb: AnimationBase(Of T)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.AnimationBase`1
    name: AnimationBase
    nameWithType: AnimationBase
    fullName: Celestial.UIToolkit.Media.Animations.AnimationBase
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.AnimationBase`1
    name: AnimationBase
    nameWithType: AnimationBase
    fullName: Celestial.UIToolkit.Media.Animations.AnimationBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Xaml
  commentId: N:Celestial.UIToolkit.Xaml
  name: Celestial.UIToolkit.Xaml
  nameWithType: Celestial.UIToolkit.Xaml
  fullName: Celestial.UIToolkit.Xaml
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.FromProperty
  commentId: F:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.FromProperty
  name: FromProperty
  nameWithType: FromToByAnimationBase<T>.FromProperty
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.FromProperty
  nameWithType.vb: FromToByAnimationBase(Of T).FromProperty
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).FromProperty
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.ByProperty
  commentId: F:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.ByProperty
  name: ByProperty
  nameWithType: FromToByAnimationBase<T>.ByProperty
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.ByProperty
  nameWithType.vb: FromToByAnimationBase(Of T).ByProperty
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).ByProperty
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.ToProperty
  commentId: F:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.ToProperty
  name: ToProperty
  nameWithType: FromToByAnimationBase<T>.ToProperty
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.ToProperty
  nameWithType.vb: FromToByAnimationBase(Of T).ToProperty
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).ToProperty
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.From
  commentId: P:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.From
  name: From
  nameWithType: FromToByAnimationBase<T>.From
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.From
  nameWithType.vb: FromToByAnimationBase(Of T).From
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).From
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.To
  commentId: P:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.To
  name: To
  nameWithType: FromToByAnimationBase<T>.To
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.To
  nameWithType.vb: FromToByAnimationBase(Of T).To
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).To
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.By
  commentId: P:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.By
  name: By
  nameWithType: FromToByAnimationBase<T>.By
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.By
  nameWithType.vb: FromToByAnimationBase(Of T).By
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).By
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.IsAdditive
  commentId: P:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.IsAdditive
  name: IsAdditive
  nameWithType: FromToByAnimationBase<T>.IsAdditive
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.IsAdditive
  nameWithType.vb: FromToByAnimationBase(Of T).IsAdditive
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).IsAdditive
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.IsCumulative
  commentId: P:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.IsCumulative
  name: IsCumulative
  nameWithType: FromToByAnimationBase<T>.IsCumulative
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.IsCumulative
  nameWithType.vb: FromToByAnimationBase(Of T).IsCumulative
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).IsCumulative
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.GetCurrentValueCore(`0,`0,Celestial.UIToolkit.Media.Animations.IAnimationClock)
  commentId: M:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.GetCurrentValueCore(`0,`0,Celestial.UIToolkit.Media.Animations.IAnimationClock)
  name: GetCurrentValueCore(T, T, IAnimationClock)
  nameWithType: FromToByAnimationBase<T>.GetCurrentValueCore(T, T, IAnimationClock)
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.GetCurrentValueCore(T, T, Celestial.UIToolkit.Media.Animations.IAnimationClock)
  nameWithType.vb: FromToByAnimationBase(Of T).GetCurrentValueCore(T, T, IAnimationClock)
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).GetCurrentValueCore(T, T, Celestial.UIToolkit.Media.Animations.IAnimationClock)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.GetCurrentValueCore(`0,`0,Celestial.UIToolkit.Media.Animations.IAnimationClock)
    name: GetCurrentValueCore
    nameWithType: FromToByAnimationBase<T>.GetCurrentValueCore
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.GetCurrentValueCore
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Celestial.UIToolkit.Media.Animations.IAnimationClock
    name: IAnimationClock
    nameWithType: IAnimationClock
    fullName: Celestial.UIToolkit.Media.Animations.IAnimationClock
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.GetCurrentValueCore(`0,`0,Celestial.UIToolkit.Media.Animations.IAnimationClock)
    name: GetCurrentValueCore
    nameWithType: FromToByAnimationBase(Of T).GetCurrentValueCore
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).GetCurrentValueCore
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Celestial.UIToolkit.Media.Animations.IAnimationClock
    name: IAnimationClock
    nameWithType: IAnimationClock
    fullName: Celestial.UIToolkit.Media.Animations.IAnimationClock
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.ValidateAnimationValues(`0,`0)
  commentId: M:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.ValidateAnimationValues(`0,`0)
  name: ValidateAnimationValues(T, T)
  nameWithType: FromToByAnimationBase<T>.ValidateAnimationValues(T, T)
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.ValidateAnimationValues(T, T)
  nameWithType.vb: FromToByAnimationBase(Of T).ValidateAnimationValues(T, T)
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).ValidateAnimationValues(T, T)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.ValidateAnimationValues(`0,`0)
    name: ValidateAnimationValues
    nameWithType: FromToByAnimationBase<T>.ValidateAnimationValues
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.ValidateAnimationValues
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.ValidateAnimationValues(`0,`0)
    name: ValidateAnimationValues
    nameWithType: FromToByAnimationBase(Of T).ValidateAnimationValues
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).ValidateAnimationValues
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.AddValues(`0,`0)
  commentId: M:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.AddValues(`0,`0)
  name: AddValues(T, T)
  nameWithType: FromToByAnimationBase<T>.AddValues(T, T)
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.AddValues(T, T)
  nameWithType.vb: FromToByAnimationBase(Of T).AddValues(T, T)
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).AddValues(T, T)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.AddValues(`0,`0)
    name: AddValues
    nameWithType: FromToByAnimationBase<T>.AddValues
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.AddValues
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.AddValues(`0,`0)
    name: AddValues
    nameWithType: FromToByAnimationBase(Of T).AddValues
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).AddValues
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.SubtractValues(`0,`0)
  commentId: M:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.SubtractValues(`0,`0)
  name: SubtractValues(T, T)
  nameWithType: FromToByAnimationBase<T>.SubtractValues(T, T)
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.SubtractValues(T, T)
  nameWithType.vb: FromToByAnimationBase(Of T).SubtractValues(T, T)
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).SubtractValues(T, T)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.SubtractValues(`0,`0)
    name: SubtractValues
    nameWithType: FromToByAnimationBase<T>.SubtractValues
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.SubtractValues
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.SubtractValues(`0,`0)
    name: SubtractValues
    nameWithType: FromToByAnimationBase(Of T).SubtractValues
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).SubtractValues
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.ScaleValue(`0,System.Double)
  commentId: M:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.ScaleValue(`0,System.Double)
  isExternal: true
  name: ScaleValue(T, Double)
  nameWithType: FromToByAnimationBase<T>.ScaleValue(T, Double)
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.ScaleValue(T, System.Double)
  nameWithType.vb: FromToByAnimationBase(Of T).ScaleValue(T, Double)
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).ScaleValue(T, System.Double)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.ScaleValue(`0,System.Double)
    name: ScaleValue
    nameWithType: FromToByAnimationBase<T>.ScaleValue
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.ScaleValue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.ScaleValue(`0,System.Double)
    name: ScaleValue
    nameWithType: FromToByAnimationBase(Of T).ScaleValue
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).ScaleValue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.SupportsTimeline(System.Windows.Media.Animation.Timeline)
  commentId: M:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.SupportsTimeline(System.Windows.Media.Animation.Timeline)
  isExternal: true
  name: SupportsTimeline(Timeline)
  nameWithType: FromToByAnimationBase<T>.SupportsTimeline(Timeline)
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.SupportsTimeline(System.Windows.Media.Animation.Timeline)
  nameWithType.vb: FromToByAnimationBase(Of T).SupportsTimeline(Timeline)
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).SupportsTimeline(System.Windows.Media.Animation.Timeline)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.SupportsTimeline(System.Windows.Media.Animation.Timeline)
    name: SupportsTimeline
    nameWithType: FromToByAnimationBase<T>.SupportsTimeline
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.SupportsTimeline
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Media.Animation.Timeline
    name: Timeline
    nameWithType: Timeline
    fullName: System.Windows.Media.Animation.Timeline
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.SupportsTimeline(System.Windows.Media.Animation.Timeline)
    name: SupportsTimeline
    nameWithType: FromToByAnimationBase(Of T).SupportsTimeline
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).SupportsTimeline
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Media.Animation.Timeline
    name: Timeline
    nameWithType: Timeline
    fullName: System.Windows.Media.Animation.Timeline
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.AnimationBase`1.TargetPropertyType
  commentId: P:Celestial.UIToolkit.Media.Animations.AnimationBase`1.TargetPropertyType
  name: TargetPropertyType
  nameWithType: AnimationBase<T>.TargetPropertyType
  fullName: Celestial.UIToolkit.Media.Animations.AnimationBase<T>.TargetPropertyType
  nameWithType.vb: AnimationBase(Of T).TargetPropertyType
  fullName.vb: Celestial.UIToolkit.Media.Animations.AnimationBase(Of T).TargetPropertyType
- uid: Celestial.UIToolkit.Media.Animations.AnimationBase`1.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  commentId: M:Celestial.UIToolkit.Media.Animations.AnimationBase`1.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  isExternal: true
  name: GetCurrentValue(Object, Object, AnimationClock)
  nameWithType: AnimationBase<T>.GetCurrentValue(Object, Object, AnimationClock)
  fullName: Celestial.UIToolkit.Media.Animations.AnimationBase<T>.GetCurrentValue(System.Object, System.Object, System.Windows.Media.Animation.AnimationClock)
  nameWithType.vb: AnimationBase(Of T).GetCurrentValue(Object, Object, AnimationClock)
  fullName.vb: Celestial.UIToolkit.Media.Animations.AnimationBase(Of T).GetCurrentValue(System.Object, System.Object, System.Windows.Media.Animation.AnimationClock)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.AnimationBase`1.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
    name: GetCurrentValue
    nameWithType: AnimationBase<T>.GetCurrentValue
    fullName: Celestial.UIToolkit.Media.Animations.AnimationBase<T>.GetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.AnimationClock
    name: AnimationClock
    nameWithType: AnimationClock
    fullName: System.Windows.Media.Animation.AnimationClock
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.AnimationBase`1.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
    name: GetCurrentValue
    nameWithType: AnimationBase(Of T).GetCurrentValue
    fullName: Celestial.UIToolkit.Media.Animations.AnimationBase(Of T).GetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.AnimationClock
    name: AnimationClock
    nameWithType: AnimationClock
    fullName: System.Windows.Media.Animation.AnimationClock
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.AnimationBase`1.GetCurrentValue(System.Object,System.Object,Celestial.UIToolkit.Media.Animations.IAnimationClock)
  commentId: M:Celestial.UIToolkit.Media.Animations.AnimationBase`1.GetCurrentValue(System.Object,System.Object,Celestial.UIToolkit.Media.Animations.IAnimationClock)
  isExternal: true
  name: GetCurrentValue(Object, Object, IAnimationClock)
  nameWithType: AnimationBase<T>.GetCurrentValue(Object, Object, IAnimationClock)
  fullName: Celestial.UIToolkit.Media.Animations.AnimationBase<T>.GetCurrentValue(System.Object, System.Object, Celestial.UIToolkit.Media.Animations.IAnimationClock)
  nameWithType.vb: AnimationBase(Of T).GetCurrentValue(Object, Object, IAnimationClock)
  fullName.vb: Celestial.UIToolkit.Media.Animations.AnimationBase(Of T).GetCurrentValue(System.Object, System.Object, Celestial.UIToolkit.Media.Animations.IAnimationClock)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.AnimationBase`1.GetCurrentValue(System.Object,System.Object,Celestial.UIToolkit.Media.Animations.IAnimationClock)
    name: GetCurrentValue
    nameWithType: AnimationBase<T>.GetCurrentValue
    fullName: Celestial.UIToolkit.Media.Animations.AnimationBase<T>.GetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Celestial.UIToolkit.Media.Animations.IAnimationClock
    name: IAnimationClock
    nameWithType: IAnimationClock
    fullName: Celestial.UIToolkit.Media.Animations.IAnimationClock
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.AnimationBase`1.GetCurrentValue(System.Object,System.Object,Celestial.UIToolkit.Media.Animations.IAnimationClock)
    name: GetCurrentValue
    nameWithType: AnimationBase(Of T).GetCurrentValue
    fullName: Celestial.UIToolkit.Media.Animations.AnimationBase(Of T).GetCurrentValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Celestial.UIToolkit.Media.Animations.IAnimationClock
    name: IAnimationClock
    nameWithType: IAnimationClock
    fullName: Celestial.UIToolkit.Media.Animations.IAnimationClock
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.HasVisualAncestor(System.Windows.DependencyObject,System.Windows.DependencyObject)
  commentId: M:Celestial.UIToolkit.Extensions.DependencyObjectExtensions.HasVisualAncestor(System.Windows.DependencyObject,System.Windows.DependencyObject)
  isExternal: true
  name: HasVisualAncestor(DependencyObject, DependencyObject)
  nameWithType: DependencyObjectExtensions.HasVisualAncestor(DependencyObject, DependencyObject)
  fullName: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.HasVisualAncestor(System.Windows.DependencyObject, System.Windows.DependencyObject)
  spec.csharp:
  - uid: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.HasVisualAncestor(System.Windows.DependencyObject,System.Windows.DependencyObject)
    name: HasVisualAncestor
    nameWithType: DependencyObjectExtensions.HasVisualAncestor
    fullName: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.HasVisualAncestor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.HasVisualAncestor(System.Windows.DependencyObject,System.Windows.DependencyObject)
    name: HasVisualAncestor
    nameWithType: DependencyObjectExtensions.HasVisualAncestor
    fullName: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.HasVisualAncestor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Extensions.DependencyObjectExtensions
  commentId: T:Celestial.UIToolkit.Extensions.DependencyObjectExtensions
  parent: Celestial.UIToolkit.Extensions
  name: DependencyObjectExtensions
  nameWithType: DependencyObjectExtensions
  fullName: Celestial.UIToolkit.Extensions.DependencyObjectExtensions
- uid: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.RemoveLogicalChild(System.Windows.DependencyObject,System.Windows.UIElement)
  commentId: M:Celestial.UIToolkit.Extensions.DependencyObjectExtensions.RemoveLogicalChild(System.Windows.DependencyObject,System.Windows.UIElement)
  isExternal: true
  name: RemoveLogicalChild(DependencyObject, UIElement)
  nameWithType: DependencyObjectExtensions.RemoveLogicalChild(DependencyObject, UIElement)
  fullName: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.RemoveLogicalChild(System.Windows.DependencyObject, System.Windows.UIElement)
  spec.csharp:
  - uid: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.RemoveLogicalChild(System.Windows.DependencyObject,System.Windows.UIElement)
    name: RemoveLogicalChild
    nameWithType: DependencyObjectExtensions.RemoveLogicalChild
    fullName: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.RemoveLogicalChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.UIElement
    name: UIElement
    nameWithType: UIElement
    fullName: System.Windows.UIElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.RemoveLogicalChild(System.Windows.DependencyObject,System.Windows.UIElement)
    name: RemoveLogicalChild
    nameWithType: DependencyObjectExtensions.RemoveLogicalChild
    fullName: Celestial.UIToolkit.Extensions.DependencyObjectExtensions.RemoveLogicalChild
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.UIElement
    name: UIElement
    nameWithType: UIElement
    fullName: System.Windows.UIElement
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Extensions.DependencyPropertyExtensions.IsDependencyPropertySet(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  commentId: M:Celestial.UIToolkit.Extensions.DependencyPropertyExtensions.IsDependencyPropertySet(System.Windows.DependencyObject,System.Windows.DependencyProperty)
  isExternal: true
  name: IsDependencyPropertySet(DependencyObject, DependencyProperty)
  nameWithType: DependencyPropertyExtensions.IsDependencyPropertySet(DependencyObject, DependencyProperty)
  fullName: Celestial.UIToolkit.Extensions.DependencyPropertyExtensions.IsDependencyPropertySet(System.Windows.DependencyObject, System.Windows.DependencyProperty)
  spec.csharp:
  - uid: Celestial.UIToolkit.Extensions.DependencyPropertyExtensions.IsDependencyPropertySet(System.Windows.DependencyObject,System.Windows.DependencyProperty)
    name: IsDependencyPropertySet
    nameWithType: DependencyPropertyExtensions.IsDependencyPropertySet
    fullName: Celestial.UIToolkit.Extensions.DependencyPropertyExtensions.IsDependencyPropertySet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Extensions.DependencyPropertyExtensions.IsDependencyPropertySet(System.Windows.DependencyObject,System.Windows.DependencyProperty)
    name: IsDependencyPropertySet
    nameWithType: DependencyPropertyExtensions.IsDependencyPropertySet
    fullName: Celestial.UIToolkit.Extensions.DependencyPropertyExtensions.IsDependencyPropertySet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.DependencyObject
    name: DependencyObject
    nameWithType: DependencyObject
    fullName: System.Windows.DependencyObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.DependencyProperty
    name: DependencyProperty
    nameWithType: DependencyProperty
    fullName: System.Windows.DependencyProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Extensions.DependencyPropertyExtensions
  commentId: T:Celestial.UIToolkit.Extensions.DependencyPropertyExtensions
  parent: Celestial.UIToolkit.Extensions
  name: DependencyPropertyExtensions
  nameWithType: DependencyPropertyExtensions
  fullName: Celestial.UIToolkit.Extensions.DependencyPropertyExtensions
- uid: Celestial.UIToolkit.Extensions
  commentId: N:Celestial.UIToolkit.Extensions
  name: Celestial.UIToolkit.Extensions
  nameWithType: Celestial.UIToolkit.Extensions
  fullName: Celestial.UIToolkit.Extensions
- uid: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.EasingFunction
  commentId: P:Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.EasingFunction
  name: EasingFunction
  nameWithType: EasingFromToByAnimationBase<T>.EasingFunction
  fullName: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase<T>.EasingFunction
  nameWithType.vb: EasingFromToByAnimationBase(Of T).EasingFunction
  fullName.vb: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase(Of T).EasingFunction
- uid: System.Windows.DependencyProperty
  commentId: T:System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: true
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.EasingFunction*
  commentId: Overload:Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.EasingFunction
  name: EasingFunction
  nameWithType: EasingFromToByAnimationBase<T>.EasingFunction
  fullName: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase<T>.EasingFunction
  nameWithType.vb: EasingFromToByAnimationBase(Of T).EasingFunction
  fullName.vb: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase(Of T).EasingFunction
- uid: System.Windows.Media.Animation.IEasingFunction
  commentId: T:System.Windows.Media.Animation.IEasingFunction
  parent: System.Windows.Media.Animation
  isExternal: true
  name: IEasingFunction
  nameWithType: IEasingFunction
  fullName: System.Windows.Media.Animation.IEasingFunction
- uid: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.InterpolateValueCore(`0,`0,System.Double)
  commentId: M:Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.InterpolateValueCore(`0,`0,System.Double)
  isExternal: true
  name: InterpolateValueCore(T, T, Double)
  nameWithType: EasingFromToByAnimationBase<T>.InterpolateValueCore(T, T, Double)
  fullName: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase<T>.InterpolateValueCore(T, T, System.Double)
  nameWithType.vb: EasingFromToByAnimationBase(Of T).InterpolateValueCore(T, T, Double)
  fullName.vb: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase(Of T).InterpolateValueCore(T, T, System.Double)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.InterpolateValueCore(`0,`0,System.Double)
    name: InterpolateValueCore
    nameWithType: EasingFromToByAnimationBase<T>.InterpolateValueCore
    fullName: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase<T>.InterpolateValueCore
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.InterpolateValueCore(`0,`0,System.Double)
    name: InterpolateValueCore
    nameWithType: EasingFromToByAnimationBase(Of T).InterpolateValueCore
    fullName: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase(Of T).InterpolateValueCore
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.InterpolateValue({T},{T},System.Double)
  commentId: M:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{`0}.InterpolateValue(`0,`0,System.Double)
  parent: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}
  definition: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.InterpolateValue(`0,`0,System.Double)
  name: InterpolateValue(T, T, Double)
  nameWithType: FromToByAnimationBase<T>.InterpolateValue(T, T, Double)
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.InterpolateValue(T, T, System.Double)
  nameWithType.vb: FromToByAnimationBase(Of T).InterpolateValue(T, T, Double)
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).InterpolateValue(T, T, System.Double)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.InterpolateValue(`0,`0,System.Double)
    name: InterpolateValue
    nameWithType: FromToByAnimationBase<T>.InterpolateValue
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.InterpolateValue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.InterpolateValue(`0,`0,System.Double)
    name: InterpolateValue
    nameWithType: FromToByAnimationBase(Of T).InterpolateValue
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).InterpolateValue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.InterpolateValue*
  commentId: Overload:Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.InterpolateValue
  name: InterpolateValue
  nameWithType: EasingFromToByAnimationBase<T>.InterpolateValue
  fullName: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase<T>.InterpolateValue
  nameWithType.vb: EasingFromToByAnimationBase(Of T).InterpolateValue
  fullName.vb: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase(Of T).InterpolateValue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.InterpolateValue(`0,`0,System.Double)
  commentId: M:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.InterpolateValue(`0,`0,System.Double)
  isExternal: true
  name: InterpolateValue(T, T, Double)
  nameWithType: FromToByAnimationBase<T>.InterpolateValue(T, T, Double)
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.InterpolateValue(T, T, System.Double)
  nameWithType.vb: FromToByAnimationBase(Of T).InterpolateValue(T, T, Double)
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).InterpolateValue(T, T, System.Double)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.InterpolateValue(`0,`0,System.Double)
    name: InterpolateValue
    nameWithType: FromToByAnimationBase<T>.InterpolateValue
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.InterpolateValue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.InterpolateValue(`0,`0,System.Double)
    name: InterpolateValue
    nameWithType: FromToByAnimationBase(Of T).InterpolateValue
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).InterpolateValue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.InterpolateValueCore*
  commentId: Overload:Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.InterpolateValueCore
  name: InterpolateValueCore
  nameWithType: EasingFromToByAnimationBase<T>.InterpolateValueCore
  fullName: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase<T>.InterpolateValueCore
  nameWithType.vb: EasingFromToByAnimationBase(Of T).InterpolateValueCore
  fullName.vb: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase(Of T).InterpolateValueCore
- uid: Celestial.UIToolkit.Xaml.ExtendedVisualStateManager
  commentId: T:Celestial.UIToolkit.Xaml.ExtendedVisualStateManager
  parent: Celestial.UIToolkit.Xaml
  name: ExtendedVisualStateManager
  nameWithType: ExtendedVisualStateManager
  fullName: Celestial.UIToolkit.Xaml.ExtendedVisualStateManager
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.CreateFromTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
  commentId: M:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{`0}.CreateFromTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
  parent: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}
  definition: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.CreateFromTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
  name: CreateFromTransitionTimeline(Timeline, IEasingFunction)
  nameWithType: FromToByAnimationBase<T>.CreateFromTransitionTimeline(Timeline, IEasingFunction)
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.CreateFromTransitionTimeline(System.Windows.Media.Animation.Timeline, System.Windows.Media.Animation.IEasingFunction)
  nameWithType.vb: FromToByAnimationBase(Of T).CreateFromTransitionTimeline(Timeline, IEasingFunction)
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).CreateFromTransitionTimeline(System.Windows.Media.Animation.Timeline, System.Windows.Media.Animation.IEasingFunction)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.CreateFromTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
    name: CreateFromTransitionTimeline
    nameWithType: FromToByAnimationBase<T>.CreateFromTransitionTimeline
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.CreateFromTransitionTimeline
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Media.Animation.Timeline
    name: Timeline
    nameWithType: Timeline
    fullName: System.Windows.Media.Animation.Timeline
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.IEasingFunction
    name: IEasingFunction
    nameWithType: IEasingFunction
    fullName: System.Windows.Media.Animation.IEasingFunction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.CreateFromTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
    name: CreateFromTransitionTimeline
    nameWithType: FromToByAnimationBase(Of T).CreateFromTransitionTimeline
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).CreateFromTransitionTimeline
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Media.Animation.Timeline
    name: Timeline
    nameWithType: Timeline
    fullName: System.Windows.Media.Animation.Timeline
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.IEasingFunction
    name: IEasingFunction
    nameWithType: IEasingFunction
    fullName: System.Windows.Media.Animation.IEasingFunction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.CreateFromTransitionTimeline*
  commentId: Overload:Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.CreateFromTransitionTimeline
  name: CreateFromTransitionTimeline
  nameWithType: EasingFromToByAnimationBase<T>.CreateFromTransitionTimeline
  fullName: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase<T>.CreateFromTransitionTimeline
  nameWithType.vb: EasingFromToByAnimationBase(Of T).CreateFromTransitionTimeline
  fullName.vb: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase(Of T).CreateFromTransitionTimeline
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.CreateFromTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
  commentId: M:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.CreateFromTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
  isExternal: true
  name: CreateFromTransitionTimeline(Timeline, IEasingFunction)
  nameWithType: FromToByAnimationBase<T>.CreateFromTransitionTimeline(Timeline, IEasingFunction)
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.CreateFromTransitionTimeline(System.Windows.Media.Animation.Timeline, System.Windows.Media.Animation.IEasingFunction)
  nameWithType.vb: FromToByAnimationBase(Of T).CreateFromTransitionTimeline(Timeline, IEasingFunction)
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).CreateFromTransitionTimeline(System.Windows.Media.Animation.Timeline, System.Windows.Media.Animation.IEasingFunction)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.CreateFromTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
    name: CreateFromTransitionTimeline
    nameWithType: FromToByAnimationBase<T>.CreateFromTransitionTimeline
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.CreateFromTransitionTimeline
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Media.Animation.Timeline
    name: Timeline
    nameWithType: Timeline
    fullName: System.Windows.Media.Animation.Timeline
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.IEasingFunction
    name: IEasingFunction
    nameWithType: IEasingFunction
    fullName: System.Windows.Media.Animation.IEasingFunction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.CreateFromTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
    name: CreateFromTransitionTimeline
    nameWithType: FromToByAnimationBase(Of T).CreateFromTransitionTimeline
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).CreateFromTransitionTimeline
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Media.Animation.Timeline
    name: Timeline
    nameWithType: Timeline
    fullName: System.Windows.Media.Animation.Timeline
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.IEasingFunction
    name: IEasingFunction
    nameWithType: IEasingFunction
    fullName: System.Windows.Media.Animation.IEasingFunction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}.CreateToTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
  commentId: M:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{`0}.CreateToTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
  parent: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase{{T}}
  definition: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.CreateToTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
  name: CreateToTransitionTimeline(Timeline, IEasingFunction)
  nameWithType: FromToByAnimationBase<T>.CreateToTransitionTimeline(Timeline, IEasingFunction)
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.CreateToTransitionTimeline(System.Windows.Media.Animation.Timeline, System.Windows.Media.Animation.IEasingFunction)
  nameWithType.vb: FromToByAnimationBase(Of T).CreateToTransitionTimeline(Timeline, IEasingFunction)
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).CreateToTransitionTimeline(System.Windows.Media.Animation.Timeline, System.Windows.Media.Animation.IEasingFunction)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.CreateToTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
    name: CreateToTransitionTimeline
    nameWithType: FromToByAnimationBase<T>.CreateToTransitionTimeline
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.CreateToTransitionTimeline
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Media.Animation.Timeline
    name: Timeline
    nameWithType: Timeline
    fullName: System.Windows.Media.Animation.Timeline
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.IEasingFunction
    name: IEasingFunction
    nameWithType: IEasingFunction
    fullName: System.Windows.Media.Animation.IEasingFunction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.CreateToTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
    name: CreateToTransitionTimeline
    nameWithType: FromToByAnimationBase(Of T).CreateToTransitionTimeline
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).CreateToTransitionTimeline
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Media.Animation.Timeline
    name: Timeline
    nameWithType: Timeline
    fullName: System.Windows.Media.Animation.Timeline
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.IEasingFunction
    name: IEasingFunction
    nameWithType: IEasingFunction
    fullName: System.Windows.Media.Animation.IEasingFunction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.CreateToTransitionTimeline*
  commentId: Overload:Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase`1.CreateToTransitionTimeline
  name: CreateToTransitionTimeline
  nameWithType: EasingFromToByAnimationBase<T>.CreateToTransitionTimeline
  fullName: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase<T>.CreateToTransitionTimeline
  nameWithType.vb: EasingFromToByAnimationBase(Of T).CreateToTransitionTimeline
  fullName.vb: Celestial.UIToolkit.Media.Animations.EasingFromToByAnimationBase(Of T).CreateToTransitionTimeline
- uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.CreateToTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
  commentId: M:Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.CreateToTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
  isExternal: true
  name: CreateToTransitionTimeline(Timeline, IEasingFunction)
  nameWithType: FromToByAnimationBase<T>.CreateToTransitionTimeline(Timeline, IEasingFunction)
  fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.CreateToTransitionTimeline(System.Windows.Media.Animation.Timeline, System.Windows.Media.Animation.IEasingFunction)
  nameWithType.vb: FromToByAnimationBase(Of T).CreateToTransitionTimeline(Timeline, IEasingFunction)
  fullName.vb: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).CreateToTransitionTimeline(System.Windows.Media.Animation.Timeline, System.Windows.Media.Animation.IEasingFunction)
  spec.csharp:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.CreateToTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
    name: CreateToTransitionTimeline
    nameWithType: FromToByAnimationBase<T>.CreateToTransitionTimeline
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase<T>.CreateToTransitionTimeline
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Media.Animation.Timeline
    name: Timeline
    nameWithType: Timeline
    fullName: System.Windows.Media.Animation.Timeline
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.IEasingFunction
    name: IEasingFunction
    nameWithType: IEasingFunction
    fullName: System.Windows.Media.Animation.IEasingFunction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase`1.CreateToTransitionTimeline(System.Windows.Media.Animation.Timeline,System.Windows.Media.Animation.IEasingFunction)
    name: CreateToTransitionTimeline
    nameWithType: FromToByAnimationBase(Of T).CreateToTransitionTimeline
    fullName: Celestial.UIToolkit.Media.Animations.FromToByAnimationBase(Of T).CreateToTransitionTimeline
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Windows.Media.Animation.Timeline
    name: Timeline
    nameWithType: Timeline
    fullName: System.Windows.Media.Animation.Timeline
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Windows.Media.Animation.IEasingFunction
    name: IEasingFunction
    nameWithType: IEasingFunction
    fullName: System.Windows.Media.Animation.IEasingFunction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
