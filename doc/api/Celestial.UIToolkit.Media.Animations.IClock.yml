### YamlMime:ManagedReference
items:
- uid: Celestial.UIToolkit.Media.Animations.IClock
  commentId: T:Celestial.UIToolkit.Media.Animations.IClock
  id: IClock
  parent: Celestial.UIToolkit.Media.Animations
  children:
  - Celestial.UIToolkit.Media.Animations.IClock.Completed
  - Celestial.UIToolkit.Media.Animations.IClock.Controller
  - Celestial.UIToolkit.Media.Animations.IClock.CurrentGlobalSpeed
  - Celestial.UIToolkit.Media.Animations.IClock.CurrentGlobalSpeedInvalidated
  - Celestial.UIToolkit.Media.Animations.IClock.CurrentIteration
  - Celestial.UIToolkit.Media.Animations.IClock.CurrentProgress
  - Celestial.UIToolkit.Media.Animations.IClock.CurrentState
  - Celestial.UIToolkit.Media.Animations.IClock.CurrentStateInvalidated
  - Celestial.UIToolkit.Media.Animations.IClock.CurrentTime
  - Celestial.UIToolkit.Media.Animations.IClock.CurrentTimeInvalidated
  - Celestial.UIToolkit.Media.Animations.IClock.HasControllableRoot
  - Celestial.UIToolkit.Media.Animations.IClock.IsPaused
  - Celestial.UIToolkit.Media.Animations.IClock.NaturalDuration
  - Celestial.UIToolkit.Media.Animations.IClock.Parent
  - Celestial.UIToolkit.Media.Animations.IClock.RemoveRequested
  - Celestial.UIToolkit.Media.Animations.IClock.Timeline
  langs:
  - csharp
  - vb
  name: IClock
  nameWithType: IClock
  fullName: Celestial.UIToolkit.Media.Animations.IClock
  type: Interface
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: IClock
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
    startLine: 21
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nDefines a clock which maintains run-time timing state for a \n<xref href=\"System.Windows.Media.Animation.Timeline\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public interface IClock
    content.vb: Public Interface IClock
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Celestial.UIToolkit.Media.Animations.IClock.Completed
  commentId: E:Celestial.UIToolkit.Media.Animations.IClock.Completed
  id: Completed
  parent: Celestial.UIToolkit.Media.Animations.IClock
  langs:
  - csharp
  - vb
  name: Completed
  nameWithType: IClock.Completed
  fullName: Celestial.UIToolkit.Media.Animations.IClock.Completed
  type: Event
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: Completed
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
    startLine: 27
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nOccurs when this clock has completely finished playing.\n"
  example: []
  syntax:
    content: event EventHandler Completed
    return:
      type: System.EventHandler
    content.vb: Event Completed As EventHandler
- uid: Celestial.UIToolkit.Media.Animations.IClock.RemoveRequested
  commentId: E:Celestial.UIToolkit.Media.Animations.IClock.RemoveRequested
  id: RemoveRequested
  parent: Celestial.UIToolkit.Media.Animations.IClock
  langs:
  - csharp
  - vb
  name: RemoveRequested
  nameWithType: IClock.RemoveRequested
  fullName: Celestial.UIToolkit.Media.Animations.IClock.RemoveRequested
  type: Event
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: RemoveRequested
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
    startLine: 33
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nOccurs when the <xref href=\"Celestial.UIToolkit.Media.Animations.IClockController.Remove\" data-throw-if-not-resolved=\"false\"></xref> method\nis called on this <xref href=\"Celestial.UIToolkit.Media.Animations.IClock\" data-throw-if-not-resolved=\"false\"></xref> or one of its parent clocks.\n"
  example: []
  syntax:
    content: event EventHandler RemoveRequested
    return:
      type: System.EventHandler
    content.vb: Event RemoveRequested As EventHandler
- uid: Celestial.UIToolkit.Media.Animations.IClock.CurrentTimeInvalidated
  commentId: E:Celestial.UIToolkit.Media.Animations.IClock.CurrentTimeInvalidated
  id: CurrentTimeInvalidated
  parent: Celestial.UIToolkit.Media.Animations.IClock
  langs:
  - csharp
  - vb
  name: CurrentTimeInvalidated
  nameWithType: IClock.CurrentTimeInvalidated
  fullName: Celestial.UIToolkit.Media.Animations.IClock.CurrentTimeInvalidated
  type: Event
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: CurrentTimeInvalidated
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
    startLine: 38
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nOccurs when this clock&apos;s <xref href=\"Celestial.UIToolkit.Media.Animations.IClock.CurrentTime\" data-throw-if-not-resolved=\"false\"></xref> becomes invalid.\n"
  example: []
  syntax:
    content: event EventHandler CurrentTimeInvalidated
    return:
      type: System.EventHandler
    content.vb: Event CurrentTimeInvalidated As EventHandler
- uid: Celestial.UIToolkit.Media.Animations.IClock.CurrentStateInvalidated
  commentId: E:Celestial.UIToolkit.Media.Animations.IClock.CurrentStateInvalidated
  id: CurrentStateInvalidated
  parent: Celestial.UIToolkit.Media.Animations.IClock
  langs:
  - csharp
  - vb
  name: CurrentStateInvalidated
  nameWithType: IClock.CurrentStateInvalidated
  fullName: Celestial.UIToolkit.Media.Animations.IClock.CurrentStateInvalidated
  type: Event
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: CurrentStateInvalidated
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
    startLine: 43
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nOccurs when the clock&apos;s <xref href=\"Celestial.UIToolkit.Media.Animations.IClock.CurrentState\" data-throw-if-not-resolved=\"false\"></xref> property is updated.\n"
  example: []
  syntax:
    content: event EventHandler CurrentStateInvalidated
    return:
      type: System.EventHandler
    content.vb: Event CurrentStateInvalidated As EventHandler
- uid: Celestial.UIToolkit.Media.Animations.IClock.CurrentGlobalSpeedInvalidated
  commentId: E:Celestial.UIToolkit.Media.Animations.IClock.CurrentGlobalSpeedInvalidated
  id: CurrentGlobalSpeedInvalidated
  parent: Celestial.UIToolkit.Media.Animations.IClock
  langs:
  - csharp
  - vb
  name: CurrentGlobalSpeedInvalidated
  nameWithType: IClock.CurrentGlobalSpeedInvalidated
  fullName: Celestial.UIToolkit.Media.Animations.IClock.CurrentGlobalSpeedInvalidated
  type: Event
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: CurrentGlobalSpeedInvalidated
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
    startLine: 48
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nOccurs when the clock&apos;s speed is updated.\n"
  example: []
  syntax:
    content: event EventHandler CurrentGlobalSpeedInvalidated
    return:
      type: System.EventHandler
    content.vb: Event CurrentGlobalSpeedInvalidated As EventHandler
- uid: Celestial.UIToolkit.Media.Animations.IClock.Timeline
  commentId: P:Celestial.UIToolkit.Media.Animations.IClock.Timeline
  id: Timeline
  parent: Celestial.UIToolkit.Media.Animations.IClock
  langs:
  - csharp
  - vb
  name: Timeline
  nameWithType: IClock.Timeline
  fullName: Celestial.UIToolkit.Media.Animations.IClock.Timeline
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: Timeline
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
    startLine: 54
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nGets the <xref href=\"System.Windows.Media.Animation.Timeline\" data-throw-if-not-resolved=\"false\"></xref> \nfrom which this <xref href=\"Celestial.UIToolkit.Media.Animations.IClock\" data-throw-if-not-resolved=\"false\"></xref> was created.\n"
  example: []
  syntax:
    content: Timeline Timeline { get; }
    parameters: []
    return:
      type: System.Windows.Media.Animation.Timeline
    content.vb: ReadOnly Property Timeline As Timeline
  overload: Celestial.UIToolkit.Media.Animations.IClock.Timeline*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Celestial.UIToolkit.Media.Animations.IClock.Parent
  commentId: P:Celestial.UIToolkit.Media.Animations.IClock.Parent
  id: Parent
  parent: Celestial.UIToolkit.Media.Animations.IClock
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: IClock.Parent
  fullName: Celestial.UIToolkit.Media.Animations.IClock.Parent
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: Parent
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
    startLine: 59
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nGets the clock that is the parent of this clock.\n"
  example: []
  syntax:
    content: IClock Parent { get; }
    parameters: []
    return:
      type: Celestial.UIToolkit.Media.Animations.IClock
    content.vb: ReadOnly Property Parent As IClock
  overload: Celestial.UIToolkit.Media.Animations.IClock.Parent*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Celestial.UIToolkit.Media.Animations.IClock.NaturalDuration
  commentId: P:Celestial.UIToolkit.Media.Animations.IClock.NaturalDuration
  id: NaturalDuration
  parent: Celestial.UIToolkit.Media.Animations.IClock
  langs:
  - csharp
  - vb
  name: NaturalDuration
  nameWithType: IClock.NaturalDuration
  fullName: Celestial.UIToolkit.Media.Animations.IClock.NaturalDuration
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: NaturalDuration
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
    startLine: 64
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nGets the natural duration of this clock&apos;s <xref href=\"Celestial.UIToolkit.Media.Animations.IClock.Timeline\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: Duration NaturalDuration { get; }
    parameters: []
    return:
      type: System.Windows.Duration
    content.vb: ReadOnly Property NaturalDuration As Duration
  overload: Celestial.UIToolkit.Media.Animations.IClock.NaturalDuration*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Celestial.UIToolkit.Media.Animations.IClock.IsPaused
  commentId: P:Celestial.UIToolkit.Media.Animations.IClock.IsPaused
  id: IsPaused
  parent: Celestial.UIToolkit.Media.Animations.IClock
  langs:
  - csharp
  - vb
  name: IsPaused
  nameWithType: IClock.IsPaused
  fullName: Celestial.UIToolkit.Media.Animations.IClock.IsPaused
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: IsPaused
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
    startLine: 70
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nGets a value that indicates whether this <xref href=\"Celestial.UIToolkit.Media.Animations.IClock\" data-throw-if-not-resolved=\"false\"></xref>,\nor any of its parents, is paused.\n"
  example: []
  syntax:
    content: bool IsPaused { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsPaused As Boolean
  overload: Celestial.UIToolkit.Media.Animations.IClock.IsPaused*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Celestial.UIToolkit.Media.Animations.IClock.HasControllableRoot
  commentId: P:Celestial.UIToolkit.Media.Animations.IClock.HasControllableRoot
  id: HasControllableRoot
  parent: Celestial.UIToolkit.Media.Animations.IClock
  langs:
  - csharp
  - vb
  name: HasControllableRoot
  nameWithType: IClock.HasControllableRoot
  fullName: Celestial.UIToolkit.Media.Animations.IClock.HasControllableRoot
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: HasControllableRoot
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
    startLine: 76
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nGets a value that indicates whether this <xref href=\"System.Windows.Media.Animation.Clock\" data-throw-if-not-resolved=\"false\"></xref>\nis part of a controllable clock tree.\n"
  example: []
  syntax:
    content: bool HasControllableRoot { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property HasControllableRoot As Boolean
  overload: Celestial.UIToolkit.Media.Animations.IClock.HasControllableRoot*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Celestial.UIToolkit.Media.Animations.IClock.CurrentState
  commentId: P:Celestial.UIToolkit.Media.Animations.IClock.CurrentState
  id: CurrentState
  parent: Celestial.UIToolkit.Media.Animations.IClock
  langs:
  - csharp
  - vb
  name: CurrentState
  nameWithType: IClock.CurrentState
  fullName: Celestial.UIToolkit.Media.Animations.IClock.CurrentState
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: CurrentState
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
    startLine: 82
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nGets a value indicating whether the clock is currently <xref href=\"System.Windows.Media.Animation.ClockState.Active\" data-throw-if-not-resolved=\"false\"></xref>,\n<xref href=\"System.Windows.Media.Animation.ClockState.Filling\" data-throw-if-not-resolved=\"false\"></xref> or <xref href=\"System.Windows.Media.Animation.ClockState.Stopped\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: ClockState CurrentState { get; }
    parameters: []
    return:
      type: System.Windows.Media.Animation.ClockState
    content.vb: ReadOnly Property CurrentState As ClockState
  overload: Celestial.UIToolkit.Media.Animations.IClock.CurrentState*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Celestial.UIToolkit.Media.Animations.IClock.CurrentProgress
  commentId: P:Celestial.UIToolkit.Media.Animations.IClock.CurrentProgress
  id: CurrentProgress
  parent: Celestial.UIToolkit.Media.Animations.IClock
  langs:
  - csharp
  - vb
  name: CurrentProgress
  nameWithType: IClock.CurrentProgress
  fullName: Celestial.UIToolkit.Media.Animations.IClock.CurrentProgress
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: CurrentProgress
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
    startLine: 88
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nGets the current progress of this <xref href=\"Celestial.UIToolkit.Media.Animations.IClock\" data-throw-if-not-resolved=\"false\"></xref> within\nits current iteration.\n"
  example: []
  syntax:
    content: double? CurrentProgress { get; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: ReadOnly Property CurrentProgress As Double?
  overload: Celestial.UIToolkit.Media.Animations.IClock.CurrentProgress*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Celestial.UIToolkit.Media.Animations.IClock.CurrentTime
  commentId: P:Celestial.UIToolkit.Media.Animations.IClock.CurrentTime
  id: CurrentTime
  parent: Celestial.UIToolkit.Media.Animations.IClock
  langs:
  - csharp
  - vb
  name: CurrentTime
  nameWithType: IClock.CurrentTime
  fullName: Celestial.UIToolkit.Media.Animations.IClock.CurrentTime
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: CurrentTime
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
    startLine: 93
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nGets this clock&apos;s current time within its current iteration.\n"
  example: []
  syntax:
    content: TimeSpan? CurrentTime { get; }
    parameters: []
    return:
      type: System.Nullable{System.TimeSpan}
    content.vb: ReadOnly Property CurrentTime As TimeSpan?
  overload: Celestial.UIToolkit.Media.Animations.IClock.CurrentTime*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Celestial.UIToolkit.Media.Animations.IClock.CurrentIteration
  commentId: P:Celestial.UIToolkit.Media.Animations.IClock.CurrentIteration
  id: CurrentIteration
  parent: Celestial.UIToolkit.Media.Animations.IClock
  langs:
  - csharp
  - vb
  name: CurrentIteration
  nameWithType: IClock.CurrentIteration
  fullName: Celestial.UIToolkit.Media.Animations.IClock.CurrentIteration
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: CurrentIteration
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
    startLine: 98
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nGet the current iteration of this clock.\n"
  example: []
  syntax:
    content: int? CurrentIteration { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: ReadOnly Property CurrentIteration As Integer?
  overload: Celestial.UIToolkit.Media.Animations.IClock.CurrentIteration*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Celestial.UIToolkit.Media.Animations.IClock.Controller
  commentId: P:Celestial.UIToolkit.Media.Animations.IClock.Controller
  id: Controller
  parent: Celestial.UIToolkit.Media.Animations.IClock
  langs:
  - csharp
  - vb
  name: Controller
  nameWithType: IClock.Controller
  fullName: Celestial.UIToolkit.Media.Animations.IClock.Controller
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: Controller
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
    startLine: 104
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nGets an <xref href=\"Celestial.UIToolkit.Media.Animations.IClockController\" data-throw-if-not-resolved=\"false\"></xref> that can be used to start,\npause, resume, seek, skip, stop, or remove this <xref href=\"Celestial.UIToolkit.Media.Animations.IClock\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: IClockController Controller { get; }
    parameters: []
    return:
      type: Celestial.UIToolkit.Media.Animations.IClockController
    content.vb: ReadOnly Property Controller As IClockController
  overload: Celestial.UIToolkit.Media.Animations.IClock.Controller*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: Celestial.UIToolkit.Media.Animations.IClock.CurrentGlobalSpeed
  commentId: P:Celestial.UIToolkit.Media.Animations.IClock.CurrentGlobalSpeed
  id: CurrentGlobalSpeed
  parent: Celestial.UIToolkit.Media.Animations.IClock
  langs:
  - csharp
  - vb
  name: CurrentGlobalSpeed
  nameWithType: IClock.CurrentGlobalSpeed
  fullName: Celestial.UIToolkit.Media.Animations.IClock.CurrentGlobalSpeed
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: CurrentGlobalSpeed
    path: src/Celestial.UIToolkit.Core/Media/Animations/AnimationBase/IAnimationClock.cs
    startLine: 110
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Media.Animations
  summary: "\nGets the rate at which the clock&apos;s time is currently progressing, compared to\nreal-world time.\n"
  example: []
  syntax:
    content: double? CurrentGlobalSpeed { get; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: ReadOnly Property CurrentGlobalSpeed As Double?
  overload: Celestial.UIToolkit.Media.Animations.IClock.CurrentGlobalSpeed*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: System.Windows.Media.Animation.Timeline
  commentId: T:System.Windows.Media.Animation.Timeline
  parent: System.Windows.Media.Animation
  isExternal: true
  name: Timeline
  nameWithType: Timeline
  fullName: System.Windows.Media.Animation.Timeline
- uid: Celestial.UIToolkit.Media.Animations
  commentId: N:Celestial.UIToolkit.Media.Animations
  name: Celestial.UIToolkit.Media.Animations
  nameWithType: Celestial.UIToolkit.Media.Animations
  fullName: Celestial.UIToolkit.Media.Animations
- uid: System.Windows.Media.Animation
  commentId: N:System.Windows.Media.Animation
  isExternal: true
  name: System.Windows.Media.Animation
  nameWithType: System.Windows.Media.Animation
  fullName: System.Windows.Media.Animation
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Celestial.UIToolkit.Media.Animations.IClockController.Remove
  commentId: M:Celestial.UIToolkit.Media.Animations.IClockController.Remove
  isExternal: true
- uid: Celestial.UIToolkit.Media.Animations.IClock
  commentId: T:Celestial.UIToolkit.Media.Animations.IClock
  parent: Celestial.UIToolkit.Media.Animations
  name: IClock
  nameWithType: IClock
  fullName: Celestial.UIToolkit.Media.Animations.IClock
- uid: Celestial.UIToolkit.Media.Animations.IClock.CurrentTime
  commentId: P:Celestial.UIToolkit.Media.Animations.IClock.CurrentTime
  parent: Celestial.UIToolkit.Media.Animations.IClock
  name: CurrentTime
  nameWithType: IClock.CurrentTime
  fullName: Celestial.UIToolkit.Media.Animations.IClock.CurrentTime
- uid: Celestial.UIToolkit.Media.Animations.IClock.CurrentState
  commentId: P:Celestial.UIToolkit.Media.Animations.IClock.CurrentState
  parent: Celestial.UIToolkit.Media.Animations.IClock
  name: CurrentState
  nameWithType: IClock.CurrentState
  fullName: Celestial.UIToolkit.Media.Animations.IClock.CurrentState
- uid: Celestial.UIToolkit.Media.Animations.IClock.Timeline*
  commentId: Overload:Celestial.UIToolkit.Media.Animations.IClock.Timeline
  name: Timeline
  nameWithType: IClock.Timeline
  fullName: Celestial.UIToolkit.Media.Animations.IClock.Timeline
- uid: Celestial.UIToolkit.Media.Animations.IClock.Parent*
  commentId: Overload:Celestial.UIToolkit.Media.Animations.IClock.Parent
  name: Parent
  nameWithType: IClock.Parent
  fullName: Celestial.UIToolkit.Media.Animations.IClock.Parent
- uid: Celestial.UIToolkit.Media.Animations.IClock.Timeline
  commentId: P:Celestial.UIToolkit.Media.Animations.IClock.Timeline
  isExternal: true
- uid: Celestial.UIToolkit.Media.Animations.IClock.NaturalDuration*
  commentId: Overload:Celestial.UIToolkit.Media.Animations.IClock.NaturalDuration
  name: NaturalDuration
  nameWithType: IClock.NaturalDuration
  fullName: Celestial.UIToolkit.Media.Animations.IClock.NaturalDuration
- uid: System.Windows.Duration
  commentId: T:System.Windows.Duration
  parent: System.Windows
  isExternal: true
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows
  commentId: N:System.Windows
  isExternal: true
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
- uid: Celestial.UIToolkit.Media.Animations.IClock.IsPaused*
  commentId: Overload:Celestial.UIToolkit.Media.Animations.IClock.IsPaused
  name: IsPaused
  nameWithType: IClock.IsPaused
  fullName: Celestial.UIToolkit.Media.Animations.IClock.IsPaused
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Animation.Clock
  commentId: T:System.Windows.Media.Animation.Clock
  parent: System.Windows.Media.Animation
  isExternal: true
  name: Clock
  nameWithType: Clock
  fullName: System.Windows.Media.Animation.Clock
- uid: Celestial.UIToolkit.Media.Animations.IClock.HasControllableRoot*
  commentId: Overload:Celestial.UIToolkit.Media.Animations.IClock.HasControllableRoot
  name: HasControllableRoot
  nameWithType: IClock.HasControllableRoot
  fullName: Celestial.UIToolkit.Media.Animations.IClock.HasControllableRoot
- uid: System.Windows.Media.Animation.ClockState.Active
  commentId: F:System.Windows.Media.Animation.ClockState.Active
  isExternal: true
- uid: System.Windows.Media.Animation.ClockState.Filling
  commentId: F:System.Windows.Media.Animation.ClockState.Filling
  isExternal: true
- uid: System.Windows.Media.Animation.ClockState.Stopped
  commentId: F:System.Windows.Media.Animation.ClockState.Stopped
  isExternal: true
- uid: Celestial.UIToolkit.Media.Animations.IClock.CurrentState*
  commentId: Overload:Celestial.UIToolkit.Media.Animations.IClock.CurrentState
  name: CurrentState
  nameWithType: IClock.CurrentState
  fullName: Celestial.UIToolkit.Media.Animations.IClock.CurrentState
- uid: System.Windows.Media.Animation.ClockState
  commentId: T:System.Windows.Media.Animation.ClockState
  parent: System.Windows.Media.Animation
  isExternal: true
  name: ClockState
  nameWithType: ClockState
  fullName: System.Windows.Media.Animation.ClockState
- uid: Celestial.UIToolkit.Media.Animations.IClock.CurrentProgress*
  commentId: Overload:Celestial.UIToolkit.Media.Animations.IClock.CurrentProgress
  name: CurrentProgress
  nameWithType: IClock.CurrentProgress
  fullName: Celestial.UIToolkit.Media.Animations.IClock.CurrentProgress
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.IClock.CurrentTime*
  commentId: Overload:Celestial.UIToolkit.Media.Animations.IClock.CurrentTime
  name: CurrentTime
  nameWithType: IClock.CurrentTime
  fullName: Celestial.UIToolkit.Media.Animations.IClock.CurrentTime
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  nameWithType.vb: Nullable(Of TimeSpan)
  fullName.vb: System.Nullable(Of System.TimeSpan)
  name.vb: Nullable(Of TimeSpan)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.IClock.CurrentIteration*
  commentId: Overload:Celestial.UIToolkit.Media.Animations.IClock.CurrentIteration
  name: CurrentIteration
  nameWithType: IClock.CurrentIteration
  fullName: Celestial.UIToolkit.Media.Animations.IClock.CurrentIteration
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Media.Animations.IClockController
  commentId: T:Celestial.UIToolkit.Media.Animations.IClockController
  parent: Celestial.UIToolkit.Media.Animations
  name: IClockController
  nameWithType: IClockController
  fullName: Celestial.UIToolkit.Media.Animations.IClockController
- uid: Celestial.UIToolkit.Media.Animations.IClock.Controller*
  commentId: Overload:Celestial.UIToolkit.Media.Animations.IClock.Controller
  name: Controller
  nameWithType: IClock.Controller
  fullName: Celestial.UIToolkit.Media.Animations.IClock.Controller
- uid: Celestial.UIToolkit.Media.Animations.IClock.CurrentGlobalSpeed*
  commentId: Overload:Celestial.UIToolkit.Media.Animations.IClock.CurrentGlobalSpeed
  name: CurrentGlobalSpeed
  nameWithType: IClock.CurrentGlobalSpeed
  fullName: Celestial.UIToolkit.Media.Animations.IClock.CurrentGlobalSpeed
