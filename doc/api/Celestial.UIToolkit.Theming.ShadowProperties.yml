### YamlMime:ManagedReference
items:
- uid: Celestial.UIToolkit.Theming.ShadowProperties
  commentId: T:Celestial.UIToolkit.Theming.ShadowProperties
  id: ShadowProperties
  parent: Celestial.UIToolkit.Theming
  children:
  - Celestial.UIToolkit.Theming.ShadowProperties.AreShadowsEnabled
  - Celestial.UIToolkit.Theming.ShadowProperties.AreShadowsEnabledChanged
  langs:
  - csharp
  - vb
  name: ShadowProperties
  nameWithType: ShadowProperties
  fullName: Celestial.UIToolkit.Theming.ShadowProperties
  type: Class
  source:
    remote:
      path: src/Celestial.UIToolkit/Theming/ShadowProperties.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: ShadowProperties
    path: ../src/Celestial.UIToolkit/Theming/ShadowProperties.cs
    startLine: 9
  assemblies:
  - Celestial.UIToolkit
  namespace: Celestial.UIToolkit.Theming
  summary: "\nIdentifies attached dependency properties which can change an element&apos;s\nshadow.\n"
  example: []
  syntax:
    content: public class ShadowProperties
    content.vb: Public Class ShadowProperties
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Celestial.UIToolkit.Theming.ShadowProperties.AreShadowsEnabledChanged
  commentId: E:Celestial.UIToolkit.Theming.ShadowProperties.AreShadowsEnabledChanged
  id: AreShadowsEnabledChanged
  parent: Celestial.UIToolkit.Theming.ShadowProperties
  langs:
  - csharp
  - vb
  name: AreShadowsEnabledChanged
  nameWithType: ShadowProperties.AreShadowsEnabledChanged
  fullName: Celestial.UIToolkit.Theming.ShadowProperties.AreShadowsEnabledChanged
  type: Event
  source:
    remote:
      path: src/Celestial.UIToolkit/Theming/ShadowProperties.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: AreShadowsEnabledChanged
    path: ../src/Celestial.UIToolkit/Theming/ShadowProperties.cs
    startLine: 15
  assemblies:
  - Celestial.UIToolkit
  namespace: Celestial.UIToolkit.Theming
  summary: "\nOccurs when the <xref href=\"Celestial.UIToolkit.Theming.ShadowProperties.AreShadowsEnabled\" data-throw-if-not-resolved=\"false\"></xref> property changes.\n"
  example: []
  syntax:
    content: public static event EventHandler AreShadowsEnabledChanged
    return:
      type: System.EventHandler
    content.vb: Public Shared Event AreShadowsEnabledChanged As EventHandler
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Celestial.UIToolkit.Theming.ShadowProperties.AreShadowsEnabled
  commentId: P:Celestial.UIToolkit.Theming.ShadowProperties.AreShadowsEnabled
  id: AreShadowsEnabled
  parent: Celestial.UIToolkit.Theming.ShadowProperties
  langs:
  - csharp
  - vb
  name: AreShadowsEnabled
  nameWithType: ShadowProperties.AreShadowsEnabled
  fullName: Celestial.UIToolkit.Theming.ShadowProperties.AreShadowsEnabled
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit/Theming/ShadowProperties.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: AreShadowsEnabled
    path: ../src/Celestial.UIToolkit/Theming/ShadowProperties.cs
    startLine: 23
  assemblies:
  - Celestial.UIToolkit
  namespace: Celestial.UIToolkit.Theming
  summary: "\nGets or sets a value which can be used to enable or disable shadows on an application\nlevel.\n"
  example: []
  syntax:
    content: public static bool AreShadowsEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property AreShadowsEnabled As Boolean
  overload: Celestial.UIToolkit.Theming.ShadowProperties.AreShadowsEnabled*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Celestial.UIToolkit.Theming
  commentId: N:Celestial.UIToolkit.Theming
  name: Celestial.UIToolkit.Theming
  nameWithType: Celestial.UIToolkit.Theming
  fullName: Celestial.UIToolkit.Theming
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Celestial.UIToolkit.Theming.ShadowProperties.AreShadowsEnabled
  commentId: P:Celestial.UIToolkit.Theming.ShadowProperties.AreShadowsEnabled
  isExternal: true
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: Celestial.UIToolkit.Theming.ShadowProperties.AreShadowsEnabled*
  commentId: Overload:Celestial.UIToolkit.Theming.ShadowProperties.AreShadowsEnabled
  name: AreShadowsEnabled
  nameWithType: ShadowProperties.AreShadowsEnabled
  fullName: Celestial.UIToolkit.Theming.ShadowProperties.AreShadowsEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
