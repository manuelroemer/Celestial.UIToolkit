### YamlMime:ManagedReference
items:
- uid: Celestial.UIToolkit.TraceSources
  commentId: T:Celestial.UIToolkit.TraceSources
  id: TraceSources
  parent: Celestial.UIToolkit
  children:
  - Celestial.UIToolkit.TraceSources.AnimationSource
  - Celestial.UIToolkit.TraceSources.ControlsSource
  - Celestial.UIToolkit.TraceSources.Create(System.String)
  - Celestial.UIToolkit.TraceSources.MarkupSource
  - Celestial.UIToolkit.TraceSources.ResourcesSource
  - Celestial.UIToolkit.TraceSources.VisualStateSource
  langs:
  - csharp
  - vb
  name: TraceSources
  nameWithType: TraceSources
  fullName: Celestial.UIToolkit.TraceSources
  type: Class
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/TraceSources.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: TraceSources
    path: src/Celestial.UIToolkit.Core/TraceSources.cs
    startLine: 13
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit
  summary: "\nProvides access to static <xref href=\"System.Diagnostics.TraceSource\" data-throw-if-not-resolved=\"false\"></xref> instances which are used by the\ntoolkit to trace information.\nThis class has the same intent as the <xref href=\"System.Diagnostics.PresentationTraceSources\" data-throw-if-not-resolved=\"false\"></xref> class,\nbut is created separately, so that WPF&apos;s trace messages are left untouched.\n"
  example: []
  syntax:
    content: public static class TraceSources
    content.vb: Public Module TraceSources
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Celestial.UIToolkit.TraceSources.MarkupSource
  commentId: P:Celestial.UIToolkit.TraceSources.MarkupSource
  id: MarkupSource
  parent: Celestial.UIToolkit.TraceSources
  langs:
  - csharp
  - vb
  name: MarkupSource
  nameWithType: TraceSources.MarkupSource
  fullName: Celestial.UIToolkit.TraceSources.MarkupSource
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/TraceSources.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: MarkupSource
    path: src/Celestial.UIToolkit.Core/TraceSources.cs
    startLine: 20
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit
  summary: "\nGets a <xref href=\"System.Diagnostics.TraceSource\" data-throw-if-not-resolved=\"false\"></xref> which is used for any message that\nrelates to (XAML) markup.\n"
  example: []
  syntax:
    content: public static TraceSource MarkupSource { get; }
    parameters: []
    return:
      type: System.Diagnostics.TraceSource
    content.vb: Public Shared ReadOnly Property MarkupSource As TraceSource
  overload: Celestial.UIToolkit.TraceSources.MarkupSource*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Celestial.UIToolkit.TraceSources.VisualStateSource
  commentId: P:Celestial.UIToolkit.TraceSources.VisualStateSource
  id: VisualStateSource
  parent: Celestial.UIToolkit.TraceSources
  langs:
  - csharp
  - vb
  name: VisualStateSource
  nameWithType: TraceSources.VisualStateSource
  fullName: Celestial.UIToolkit.TraceSources.VisualStateSource
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/TraceSources.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: VisualStateSource
    path: src/Celestial.UIToolkit.Core/TraceSources.cs
    startLine: 30
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit
  summary: "\nGets a <xref href=\"System.Diagnostics.TraceSource\" data-throw-if-not-resolved=\"false\"></xref> which is used for any message that\nrelates to visual states.\n"
  remarks: "\nThis is mainly used by the custom visual state manager and only added \nto not clutter other trace sources.\n"
  example: []
  syntax:
    content: public static TraceSource VisualStateSource { get; }
    parameters: []
    return:
      type: System.Diagnostics.TraceSource
    content.vb: Public Shared ReadOnly Property VisualStateSource As TraceSource
  overload: Celestial.UIToolkit.TraceSources.VisualStateSource*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Celestial.UIToolkit.TraceSources.ResourcesSource
  commentId: P:Celestial.UIToolkit.TraceSources.ResourcesSource
  id: ResourcesSource
  parent: Celestial.UIToolkit.TraceSources
  langs:
  - csharp
  - vb
  name: ResourcesSource
  nameWithType: TraceSources.ResourcesSource
  fullName: Celestial.UIToolkit.TraceSources.ResourcesSource
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/TraceSources.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: ResourcesSource
    path: src/Celestial.UIToolkit.Core/TraceSources.cs
    startLine: 36
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit
  summary: "\nGets a <xref href=\"System.Diagnostics.TraceSource\" data-throw-if-not-resolved=\"false\"></xref> which is used for any message that\nrelates to resources.\n"
  example: []
  syntax:
    content: public static TraceSource ResourcesSource { get; }
    parameters: []
    return:
      type: System.Diagnostics.TraceSource
    content.vb: Public Shared ReadOnly Property ResourcesSource As TraceSource
  overload: Celestial.UIToolkit.TraceSources.ResourcesSource*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Celestial.UIToolkit.TraceSources.ControlsSource
  commentId: P:Celestial.UIToolkit.TraceSources.ControlsSource
  id: ControlsSource
  parent: Celestial.UIToolkit.TraceSources
  langs:
  - csharp
  - vb
  name: ControlsSource
  nameWithType: TraceSources.ControlsSource
  fullName: Celestial.UIToolkit.TraceSources.ControlsSource
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/TraceSources.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: ControlsSource
    path: src/Celestial.UIToolkit.Core/TraceSources.cs
    startLine: 42
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit
  summary: "\nGets a <xref href=\"System.Diagnostics.TraceSource\" data-throw-if-not-resolved=\"false\"></xref> which is used for any message that \nrelates to (custom) controls which are provided by the toolkit.\n"
  example: []
  syntax:
    content: public static TraceSource ControlsSource { get; }
    parameters: []
    return:
      type: System.Diagnostics.TraceSource
    content.vb: Public Shared ReadOnly Property ControlsSource As TraceSource
  overload: Celestial.UIToolkit.TraceSources.ControlsSource*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Celestial.UIToolkit.TraceSources.AnimationSource
  commentId: P:Celestial.UIToolkit.TraceSources.AnimationSource
  id: AnimationSource
  parent: Celestial.UIToolkit.TraceSources
  langs:
  - csharp
  - vb
  name: AnimationSource
  nameWithType: TraceSources.AnimationSource
  fullName: Celestial.UIToolkit.TraceSources.AnimationSource
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/TraceSources.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: AnimationSource
    path: src/Celestial.UIToolkit.Core/TraceSources.cs
    startLine: 48
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit
  summary: "\nGets a <xref href=\"System.Diagnostics.TraceSource\" data-throw-if-not-resolved=\"false\"></xref> which is used for any message that\nrelates to animations.\n"
  example: []
  syntax:
    content: public static TraceSource AnimationSource { get; }
    parameters: []
    return:
      type: System.Diagnostics.TraceSource
    content.vb: Public Shared ReadOnly Property AnimationSource As TraceSource
  overload: Celestial.UIToolkit.TraceSources.AnimationSource*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Celestial.UIToolkit.TraceSources.Create(System.String)
  commentId: M:Celestial.UIToolkit.TraceSources.Create(System.String)
  id: Create(System.String)
  parent: Celestial.UIToolkit.TraceSources
  langs:
  - csharp
  - vb
  name: Create(String)
  nameWithType: TraceSources.Create(String)
  fullName: Celestial.UIToolkit.TraceSources.Create(System.String)
  type: Method
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/TraceSources.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: Create
    path: src/Celestial.UIToolkit.Core/TraceSources.cs
    startLine: 67
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit
  summary: "\nCreates a new, configured <xref href=\"System.Diagnostics.TraceSource\" data-throw-if-not-resolved=\"false\"></xref> with the specified name.\n"
  example: []
  syntax:
    content: public static TraceSource Create(string sourceName)
    parameters:
    - id: sourceName
      type: System.String
      description: "\nThe name of the <xref href=\"System.Diagnostics.TraceSource\" data-throw-if-not-resolved=\"false\"></xref> to be created.\n"
    return:
      type: System.Diagnostics.TraceSource
      description: "\nA new <xref href=\"System.Diagnostics.TraceSource\" data-throw-if-not-resolved=\"false\"></xref> instance with the specified \n<code data-dev-comment-type=\"paramref\" class=\"paramref\">sourceName</code>.\n"
    content.vb: Public Shared Function Create(sourceName As String) As TraceSource
  overload: Celestial.UIToolkit.TraceSources.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.Diagnostics.TraceSource
  commentId: T:System.Diagnostics.TraceSource
  parent: System.Diagnostics
  isExternal: true
  name: TraceSource
  nameWithType: TraceSource
  fullName: System.Diagnostics.TraceSource
- uid: System.Diagnostics.PresentationTraceSources
  commentId: T:System.Diagnostics.PresentationTraceSources
  isExternal: true
- uid: Celestial.UIToolkit
  commentId: N:Celestial.UIToolkit
  name: Celestial.UIToolkit
  nameWithType: Celestial.UIToolkit
  fullName: Celestial.UIToolkit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Diagnostics
  commentId: N:System.Diagnostics
  isExternal: true
  name: System.Diagnostics
  nameWithType: System.Diagnostics
  fullName: System.Diagnostics
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Celestial.UIToolkit.TraceSources.MarkupSource*
  commentId: Overload:Celestial.UIToolkit.TraceSources.MarkupSource
  name: MarkupSource
  nameWithType: TraceSources.MarkupSource
  fullName: Celestial.UIToolkit.TraceSources.MarkupSource
- uid: Celestial.UIToolkit.TraceSources.VisualStateSource*
  commentId: Overload:Celestial.UIToolkit.TraceSources.VisualStateSource
  name: VisualStateSource
  nameWithType: TraceSources.VisualStateSource
  fullName: Celestial.UIToolkit.TraceSources.VisualStateSource
- uid: Celestial.UIToolkit.TraceSources.ResourcesSource*
  commentId: Overload:Celestial.UIToolkit.TraceSources.ResourcesSource
  name: ResourcesSource
  nameWithType: TraceSources.ResourcesSource
  fullName: Celestial.UIToolkit.TraceSources.ResourcesSource
- uid: Celestial.UIToolkit.TraceSources.ControlsSource*
  commentId: Overload:Celestial.UIToolkit.TraceSources.ControlsSource
  name: ControlsSource
  nameWithType: TraceSources.ControlsSource
  fullName: Celestial.UIToolkit.TraceSources.ControlsSource
- uid: Celestial.UIToolkit.TraceSources.AnimationSource*
  commentId: Overload:Celestial.UIToolkit.TraceSources.AnimationSource
  name: AnimationSource
  nameWithType: TraceSources.AnimationSource
  fullName: Celestial.UIToolkit.TraceSources.AnimationSource
- uid: Celestial.UIToolkit.TraceSources.Create*
  commentId: Overload:Celestial.UIToolkit.TraceSources.Create
  name: Create
  nameWithType: TraceSources.Create
  fullName: Celestial.UIToolkit.TraceSources.Create
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
