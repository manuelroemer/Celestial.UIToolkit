### YamlMime:ManagedReference
items:
- uid: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension
  commentId: T:Celestial.UIToolkit.Xaml.EnumBindingSourceExtension
  id: EnumBindingSourceExtension
  parent: Celestial.UIToolkit.Xaml
  children:
  - Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.#ctor
  - Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.#ctor(System.Type)
  - Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.EnumType
  - Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.ProvideValue(System.IServiceProvider)
  - Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.ToString
  langs:
  - csharp
  - vb
  name: EnumBindingSourceExtension
  nameWithType: EnumBindingSourceExtension
  fullName: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension
  type: Class
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Xaml/EnumBindingSourceExtension.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: EnumBindingSourceExtension
    path: src/Celestial.UIToolkit.Core/Xaml/EnumBindingSourceExtension.cs
    startLine: 14
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Xaml
  summary: "\nA custom markup extension which takes an enum&apos;s type and returns\nall of its members as a set of string values.\nThese strings can, for instance, be used as a Binding source.\n"
  example: []
  syntax:
    content: 'public class EnumBindingSourceExtension : MarkupExtension'
    content.vb: >-
      Public Class EnumBindingSourceExtension

          Inherits MarkupExtension
  inheritance:
  - System.Object
  - System.Windows.Markup.MarkupExtension
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.EnumType
  commentId: P:Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.EnumType
  id: EnumType
  parent: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension
  langs:
  - csharp
  - vb
  name: EnumType
  nameWithType: EnumBindingSourceExtension.EnumType
  fullName: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.EnumType
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Xaml/EnumBindingSourceExtension.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: EnumType
    path: src/Celestial.UIToolkit.Core/Xaml/EnumBindingSourceExtension.cs
    startLine: 21
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Xaml
  summary: "\nGets or sets the type of the enum whose members are supposed to be\nconverted to a set of strings.\n"
  example: []
  syntax:
    content: >-
      [ConstructorArgument("enumType")]

      public Type EnumType { get; set; }
    parameters: []
    return:
      type: System.Type
    content.vb: >-
      <ConstructorArgument("enumType")>

      Public Property EnumType As Type
  overload: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.EnumType*
  attributes:
  - type: System.Windows.Markup.ConstructorArgumentAttribute
    ctor: System.Windows.Markup.ConstructorArgumentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: enumType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.#ctor
  commentId: M:Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.#ctor
  id: '#ctor'
  parent: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension
  langs:
  - csharp
  - vb
  name: EnumBindingSourceExtension()
  nameWithType: EnumBindingSourceExtension.EnumBindingSourceExtension()
  fullName: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.EnumBindingSourceExtension()
  type: Constructor
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Xaml/EnumBindingSourceExtension.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: .ctor
    path: src/Celestial.UIToolkit.Core/Xaml/EnumBindingSourceExtension.cs
    startLine: 28
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Xaml
  summary: "\nInitializes a new instance of the <xref href=\"Celestial.UIToolkit.Xaml.EnumBindingSourceExtension\" data-throw-if-not-resolved=\"false\"></xref> class\nwithout an enum type.\n"
  example: []
  syntax:
    content: public EnumBindingSourceExtension()
    content.vb: Public Sub New
  overload: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.#ctor(System.Type)
  commentId: M:Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension
  langs:
  - csharp
  - vb
  name: EnumBindingSourceExtension(Type)
  nameWithType: EnumBindingSourceExtension.EnumBindingSourceExtension(Type)
  fullName: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.EnumBindingSourceExtension(System.Type)
  type: Constructor
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Xaml/EnumBindingSourceExtension.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: .ctor
    path: src/Celestial.UIToolkit.Core/Xaml/EnumBindingSourceExtension.cs
    startLine: 38
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Xaml
  summary: "\nInitializes a new instance of the <xref href=\"Celestial.UIToolkit.Xaml.EnumBindingSourceExtension\" data-throw-if-not-resolved=\"false\"></xref> with the\nspecified <code data-dev-comment-type=\"paramref\" class=\"paramref\">enumType</code>.\n"
  example: []
  syntax:
    content: public EnumBindingSourceExtension(Type enumType)
    parameters:
    - id: enumType
      type: System.Type
      description: "\nThe type of the enum whose members are supposed to be converted to a set of strings.\n"
    content.vb: Public Sub New(enumType As Type)
  overload: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.ProvideValue(System.IServiceProvider)
  commentId: M:Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.ProvideValue(System.IServiceProvider)
  id: ProvideValue(System.IServiceProvider)
  parent: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension
  langs:
  - csharp
  - vb
  name: ProvideValue(IServiceProvider)
  nameWithType: EnumBindingSourceExtension.ProvideValue(IServiceProvider)
  fullName: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.ProvideValue(System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Xaml/EnumBindingSourceExtension.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: ProvideValue
    path: src/Celestial.UIToolkit.Core/Xaml/EnumBindingSourceExtension.cs
    startLine: 52
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Xaml
  summary: "\nPerforms the conversion of the <xref href=\"Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.EnumType\" data-throw-if-not-resolved=\"false\"></xref> to a set of strings.\n"
  example: []
  syntax:
    content: public override object ProvideValue(IServiceProvider serviceProvider)
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "\nAn <xref href=\"System.IServiceProvider\" data-throw-if-not-resolved=\"false\"></xref> passed to the markup extension.\n"
    return:
      type: System.Object
      description: "\nAn enumerable set of strings, which represent the enum values.\n"
    content.vb: Public Overrides Function ProvideValue(serviceProvider As IServiceProvider) As Object
  overridden: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  overload: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.ProvideValue*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.ToString
  commentId: M:Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.ToString
  id: ToString
  parent: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: EnumBindingSourceExtension.ToString()
  fullName: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.ToString()
  type: Method
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Xaml/EnumBindingSourceExtension.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: ToString
    path: src/Celestial.UIToolkit.Core/Xaml/EnumBindingSourceExtension.cs
    startLine: 67
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Xaml
  summary: "\nReturns a string representation of the <xref href=\"Celestial.UIToolkit.Xaml.EnumBindingSourceExtension\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string representing the <xref href="Celestial.UIToolkit.Xaml.EnumBindingSourceExtension" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Celestial.UIToolkit.Xaml
  commentId: N:Celestial.UIToolkit.Xaml
  name: Celestial.UIToolkit.Xaml
  nameWithType: Celestial.UIToolkit.Xaml
  fullName: Celestial.UIToolkit.Xaml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Markup.MarkupExtension
  commentId: T:System.Windows.Markup.MarkupExtension
  parent: System.Windows.Markup
  isExternal: true
  name: MarkupExtension
  nameWithType: MarkupExtension
  fullName: System.Windows.Markup.MarkupExtension
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Markup
  commentId: N:System.Windows.Markup
  isExternal: true
  name: System.Windows.Markup
  nameWithType: System.Windows.Markup
  fullName: System.Windows.Markup
- uid: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.EnumType*
  commentId: Overload:Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.EnumType
  name: EnumType
  nameWithType: EnumBindingSourceExtension.EnumType
  fullName: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.EnumType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension
  commentId: T:Celestial.UIToolkit.Xaml.EnumBindingSourceExtension
  name: EnumBindingSourceExtension
  nameWithType: EnumBindingSourceExtension
  fullName: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension
- uid: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.#ctor*
  commentId: Overload:Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.#ctor
  name: EnumBindingSourceExtension
  nameWithType: EnumBindingSourceExtension.EnumBindingSourceExtension
  fullName: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.EnumBindingSourceExtension
- uid: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.EnumType
  commentId: P:Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.EnumType
  isExternal: true
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  commentId: M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  parent: System.Windows.Markup.MarkupExtension
  isExternal: true
  name: ProvideValue(IServiceProvider)
  nameWithType: MarkupExtension.ProvideValue(IServiceProvider)
  fullName: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  spec.csharp:
  - uid: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
    name: ProvideValue
    nameWithType: MarkupExtension.ProvideValue
    fullName: System.Windows.Markup.MarkupExtension.ProvideValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
    name: ProvideValue
    nameWithType: MarkupExtension.ProvideValue
    fullName: System.Windows.Markup.MarkupExtension.ProvideValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.ProvideValue*
  commentId: Overload:Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.ProvideValue
  name: ProvideValue
  nameWithType: EnumBindingSourceExtension.ProvideValue
  fullName: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.ProvideValue
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.ToString*
  commentId: Overload:Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.ToString
  name: ToString
  nameWithType: EnumBindingSourceExtension.ToString
  fullName: Celestial.UIToolkit.Xaml.EnumBindingSourceExtension.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
