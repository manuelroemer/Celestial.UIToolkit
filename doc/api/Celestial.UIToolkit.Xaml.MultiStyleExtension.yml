### YamlMime:ManagedReference
items:
- uid: Celestial.UIToolkit.Xaml.MultiStyleExtension
  commentId: T:Celestial.UIToolkit.Xaml.MultiStyleExtension
  id: MultiStyleExtension
  parent: Celestial.UIToolkit.Xaml
  children:
  - Celestial.UIToolkit.Xaml.MultiStyleExtension.#ctor
  - Celestial.UIToolkit.Xaml.MultiStyleExtension.#ctor(System.String)
  - Celestial.UIToolkit.Xaml.MultiStyleExtension.ProvideValue(System.IServiceProvider)
  - Celestial.UIToolkit.Xaml.MultiStyleExtension.StyleKeys
  langs:
  - csharp
  - vb
  name: MultiStyleExtension
  nameWithType: MultiStyleExtension
  fullName: Celestial.UIToolkit.Xaml.MultiStyleExtension
  type: Class
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Xaml/MultiStyleExtension.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: MultiStyleExtension
    path: src/Celestial.UIToolkit.Core/Xaml/MultiStyleExtension.cs
    startLine: 24
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Xaml
  summary: "\nA custom markup extension which merges multiple styles\ninto one single style.\n"
  remarks: "\nBe aware that this markup extension is very resource intensive.\nWhen merging two styles, every single property will have to be copied,\neach and every time when this extension is being used.\n\nTake care of the following points:\n-  Use the extension on small styles with few setters/triggers.\n-  Avoid using it on styles which are based on other styles,\nas these base styles will have to be merged aswell.\n"
  example: []
  syntax:
    content: 'public class MultiStyleExtension : MarkupExtension'
    content.vb: >-
      Public Class MultiStyleExtension

          Inherits MarkupExtension
  inheritance:
  - System.Object
  - System.Windows.Markup.MarkupExtension
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Celestial.UIToolkit.Xaml.MultiStyleExtension.StyleKeys
  commentId: P:Celestial.UIToolkit.Xaml.MultiStyleExtension.StyleKeys
  id: StyleKeys
  parent: Celestial.UIToolkit.Xaml.MultiStyleExtension
  langs:
  - csharp
  - vb
  name: StyleKeys
  nameWithType: MultiStyleExtension.StyleKeys
  fullName: Celestial.UIToolkit.Xaml.MultiStyleExtension.StyleKeys
  type: Property
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Xaml/MultiStyleExtension.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: StyleKeys
    path: src/Celestial.UIToolkit.Core/Xaml/MultiStyleExtension.cs
    startLine: 52
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Xaml
  summary: "\nGets or sets a string which defines the keys of the style resources\nwhich are supposed to be merged.\nThe string must contain the name of at least one style resource.\nMultiple keys must be separated via one of the following chars:\n<ul><li>(Whitespace)</li><li>,</li><li>;</li></ul>\n"
  example:
  - "\nThe following is a valid string which references two style resources:\n&quot;StyleKey1 StyleKey2&quot;\n"
  syntax:
    content: >-
      [ConstructorArgument("styleKeys")]

      public string StyleKeys { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <ConstructorArgument("styleKeys")>

      Public Property StyleKeys As String
  overload: Celestial.UIToolkit.Xaml.MultiStyleExtension.StyleKeys*
  attributes:
  - type: System.Windows.Markup.ConstructorArgumentAttribute
    ctor: System.Windows.Markup.ConstructorArgumentAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: styleKeys
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Xaml.MultiStyleExtension.#ctor
  commentId: M:Celestial.UIToolkit.Xaml.MultiStyleExtension.#ctor
  id: '#ctor'
  parent: Celestial.UIToolkit.Xaml.MultiStyleExtension
  langs:
  - csharp
  - vb
  name: MultiStyleExtension()
  nameWithType: MultiStyleExtension.MultiStyleExtension()
  fullName: Celestial.UIToolkit.Xaml.MultiStyleExtension.MultiStyleExtension()
  type: Constructor
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Xaml/MultiStyleExtension.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: .ctor
    path: src/Celestial.UIToolkit.Core/Xaml/MultiStyleExtension.cs
    startLine: 67
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Xaml
  summary: "\nInitializes a new instance of the <xref href=\"Celestial.UIToolkit.Xaml.MultiStyleExtension\" data-throw-if-not-resolved=\"false\"></xref>\nwith the <xref href=\"Celestial.UIToolkit.Xaml.MultiStyleExtension.StyleKeys\" data-throw-if-not-resolved=\"false\"></xref> property being an empty string.\n"
  example: []
  syntax:
    content: public MultiStyleExtension()
    content.vb: Public Sub New
  overload: Celestial.UIToolkit.Xaml.MultiStyleExtension.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Xaml.MultiStyleExtension.#ctor(System.String)
  commentId: M:Celestial.UIToolkit.Xaml.MultiStyleExtension.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Celestial.UIToolkit.Xaml.MultiStyleExtension
  langs:
  - csharp
  - vb
  name: MultiStyleExtension(String)
  nameWithType: MultiStyleExtension.MultiStyleExtension(String)
  fullName: Celestial.UIToolkit.Xaml.MultiStyleExtension.MultiStyleExtension(System.String)
  type: Constructor
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Xaml/MultiStyleExtension.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: .ctor
    path: src/Celestial.UIToolkit.Core/Xaml/MultiStyleExtension.cs
    startLine: 78
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Xaml
  summary: "\nInitializes a new instance of the <xref href=\"Celestial.UIToolkit.Xaml.MultiStyleExtension\" data-throw-if-not-resolved=\"false\"></xref> class\nwith the specified <code data-dev-comment-type=\"paramref\" class=\"paramref\">styleKeys</code> string.\n"
  example: []
  syntax:
    content: public MultiStyleExtension(string styleKeys)
    parameters:
    - id: styleKeys
      type: System.String
      description: "\nA string which defines the keys of the style resources which are supposed\nto be merged.\n"
    content.vb: Public Sub New(styleKeys As String)
  overload: Celestial.UIToolkit.Xaml.MultiStyleExtension.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Celestial.UIToolkit.Xaml.MultiStyleExtension.ProvideValue(System.IServiceProvider)
  commentId: M:Celestial.UIToolkit.Xaml.MultiStyleExtension.ProvideValue(System.IServiceProvider)
  id: ProvideValue(System.IServiceProvider)
  parent: Celestial.UIToolkit.Xaml.MultiStyleExtension
  langs:
  - csharp
  - vb
  name: ProvideValue(IServiceProvider)
  nameWithType: MultiStyleExtension.ProvideValue(IServiceProvider)
  fullName: Celestial.UIToolkit.Xaml.MultiStyleExtension.ProvideValue(System.IServiceProvider)
  type: Method
  source:
    remote:
      path: src/Celestial.UIToolkit.Core/Xaml/MultiStyleExtension.cs
      branch: docfx
      repo: https://github.com/manuelroemer/Celestial.UIToolkit.git
    id: ProvideValue
    path: src/Celestial.UIToolkit.Core/Xaml/MultiStyleExtension.cs
    startLine: 104
  assemblies:
  - Celestial.UIToolkit.Core
  namespace: Celestial.UIToolkit.Xaml
  summary: "\nLocates and merges the styles which are declared via the \n<xref href=\"Celestial.UIToolkit.Xaml.MultiStyleExtension.StyleKeys\" data-throw-if-not-resolved=\"false\"></xref> property and returns the resulting style.\n"
  example: []
  syntax:
    content: public override object ProvideValue(IServiceProvider serviceProvider)
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "\nA service provider to be used by the markup extension.\nCan be null.\n"
    return:
      type: System.Object
      description: "\nA <xref href=\"System.Windows.Style\" data-throw-if-not-resolved=\"false\"></xref> which is the result of the merge operation.\n"
    content.vb: Public Overrides Function ProvideValue(serviceProvider As IServiceProvider) As Object
  overridden: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  overload: Celestial.UIToolkit.Xaml.MultiStyleExtension.ProvideValue*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Celestial.UIToolkit.Xaml
  commentId: N:Celestial.UIToolkit.Xaml
  name: Celestial.UIToolkit.Xaml
  nameWithType: Celestial.UIToolkit.Xaml
  fullName: Celestial.UIToolkit.Xaml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Markup.MarkupExtension
  commentId: T:System.Windows.Markup.MarkupExtension
  parent: System.Windows.Markup
  isExternal: true
  name: MarkupExtension
  nameWithType: MarkupExtension
  fullName: System.Windows.Markup.MarkupExtension
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Windows.Markup
  commentId: N:System.Windows.Markup
  isExternal: true
  name: System.Windows.Markup
  nameWithType: System.Windows.Markup
  fullName: System.Windows.Markup
- uid: Celestial.UIToolkit.Xaml.MultiStyleExtension.StyleKeys*
  commentId: Overload:Celestial.UIToolkit.Xaml.MultiStyleExtension.StyleKeys
  name: StyleKeys
  nameWithType: MultiStyleExtension.StyleKeys
  fullName: Celestial.UIToolkit.Xaml.MultiStyleExtension.StyleKeys
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Celestial.UIToolkit.Xaml.MultiStyleExtension
  commentId: T:Celestial.UIToolkit.Xaml.MultiStyleExtension
  name: MultiStyleExtension
  nameWithType: MultiStyleExtension
  fullName: Celestial.UIToolkit.Xaml.MultiStyleExtension
- uid: Celestial.UIToolkit.Xaml.MultiStyleExtension.StyleKeys
  commentId: P:Celestial.UIToolkit.Xaml.MultiStyleExtension.StyleKeys
  isExternal: true
- uid: Celestial.UIToolkit.Xaml.MultiStyleExtension.#ctor*
  commentId: Overload:Celestial.UIToolkit.Xaml.MultiStyleExtension.#ctor
  name: MultiStyleExtension
  nameWithType: MultiStyleExtension.MultiStyleExtension
  fullName: Celestial.UIToolkit.Xaml.MultiStyleExtension.MultiStyleExtension
- uid: System.Windows.Style
  commentId: T:System.Windows.Style
  parent: System.Windows
  isExternal: true
  name: Style
  nameWithType: Style
  fullName: System.Windows.Style
- uid: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  commentId: M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  parent: System.Windows.Markup.MarkupExtension
  isExternal: true
  name: ProvideValue(IServiceProvider)
  nameWithType: MarkupExtension.ProvideValue(IServiceProvider)
  fullName: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
  spec.csharp:
  - uid: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
    name: ProvideValue
    nameWithType: MarkupExtension.ProvideValue
    fullName: System.Windows.Markup.MarkupExtension.ProvideValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)
    name: ProvideValue
    nameWithType: MarkupExtension.ProvideValue
    fullName: System.Windows.Markup.MarkupExtension.ProvideValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IServiceProvider
    name: IServiceProvider
    nameWithType: IServiceProvider
    fullName: System.IServiceProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Celestial.UIToolkit.Xaml.MultiStyleExtension.ProvideValue*
  commentId: Overload:Celestial.UIToolkit.Xaml.MultiStyleExtension.ProvideValue
  name: ProvideValue
  nameWithType: MultiStyleExtension.ProvideValue
  fullName: Celestial.UIToolkit.Xaml.MultiStyleExtension.ProvideValue
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Windows
  commentId: N:System.Windows
  isExternal: true
  name: System.Windows
  nameWithType: System.Windows
  fullName: System.Windows
